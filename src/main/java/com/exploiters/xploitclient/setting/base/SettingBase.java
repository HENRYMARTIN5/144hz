package com.exploiters.xploitclient.setting.base;

import com.exploiters.xploitclient.gui.clickgui.modulewindow.ModuleWindow;
import com.exploiters.xploitclient.setting.other.SettingRotate;
import com.google.gson.JsonElement;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;
import net.minecraft.class_4587;
import org.apache.commons.lang3.tuple.Triple;

public abstract class SettingBase {
  private static String IlIIIlIllIl(long llIIIlIlllIIll, char lllllIIlllIIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/setting/base/SettingBase.IllIIIlll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/setting/base/SettingBase.IllIIIlll : [I
    //   36: iconst_1
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/setting/base/SettingBase.IllIIIlll : [I
    //   51: iconst_2
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/setting/base/SettingBase.IllIIIlll : [I
    //   68: iconst_3
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/setting/base/SettingBase.IllIIIlll : [I
    //   83: iconst_3
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	2	lllllIIlllIIll	C
    //   119	4	2	lIIIIlIlllIIll	Ljava/lang/Exception;
    //   0	125	3	lIIllIIlllIIll	I
    //   0	125	0	lIlllIIlllIIll	Ljava/lang/String;
    //   0	125	1	IIIIIlIlllIIll	Ljava/lang/String;
    //   0	125	2	IlIllIIlllIIll	F
    //   0	125	0	llIIIlIlllIIll	J
    //   0	125	1	llIllIIlllIIll	Ljava/lang/String;
    //   59	59	2	IlIIIlIlllIIll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	0	IIlllIIlllIIll	J
    //   0	125	1	IIlIIlIlllIIll	F
    //   76	42	3	IllllIIlllIIll	Ljavax/crypto/Cipher;
    //   0	125	3	lIlIIlIlllIIll	I
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  public String getDesc() {
    // Byte code:
    //   0: aload_0
    //   1: getfield description : Ljava/lang/String;
    //   4: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	5	0	IlIlIlllllIIll	Lcom/exploiters/xploitclient/setting/base/SettingBase;
    //   0	5	0	lIIlIlllllIIll	I
  }
  
  private static void lIlIIlIllIl() {
    llIIIIlll = new String[IllIIIlll[6]];
    llIIIIlll[IllIIIlll[0]] = lIIIIlIllIl("", "iLtwD");
    llIIIIlll[IllIIIlll[1]] = IlIIIlIllIl("suuUN/n8Un19EBP9YRaIaN74CjXCCMJxZtXaOLld+L0=", "jVSAs");
    llIIIIlll[IllIIIlll[2]] = lIIIIlIllIl("NjooFRsHKyIYSwMjPwUCHSVtBQ4HNiQYDEli", "sBMvk");
    llIIIIlll[IllIIIlll[3]] = llIIIlIllIl("V0vsj1n089Y9QdyJRCmxH0n5rWxCpJXhONMkXYyJExc=", "GUUuE");
    llIIIIlll[IllIIIlll[4]] = IlIIIlIllIl("aqVZacamhBj5D2pdGkIatubPgaurlZvJwXzSAeqi+4g=", "YBQFG");
    llIIIIlll[IllIIIlll[5]] = lIIIIlIllIl("ADAGChkxIQwHSTUpERoAKy9DGgwxPAoHDn9o", "EHcii");
  }
  
  private static String llIIIlIllIl(short IlllIIllllIIll, String IllIlIllllIIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/setting/base/SettingBase.IllIIIlll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/setting/base/SettingBase.IllIIIlll : [I
    //   39: iconst_1
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/setting/base/SettingBase.IllIIIlll : [I
    //   56: iconst_2
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/setting/base/SettingBase.IllIIIlll : [I
    //   71: iconst_2
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	3	lIlIlIllllIIll	I
    //   0	113	1	lIllIIllllIIll	D
    //   0	113	1	IllIlIllllIIll	Ljava/lang/String;
    //   107	4	2	llIIlIllllIIll	Ljava/lang/Exception;
    //   0	113	3	llIlIIllllIIll	J
    //   47	59	2	IIIIlIllllIIll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	113	0	lllIlIllllIIll	S
    //   0	113	0	IlllIIllllIIll	S
    //   0	113	1	llllIIllllIIll	Ljava/lang/Exception;
    //   64	42	3	lIIIlIllllIIll	Ljavax/crypto/Cipher;
    //   0	113	0	IIlIlIllllIIll	Ljava/lang/String;
    //   0	113	2	IIllIIllllIIll	Ljava/lang/String;
    //   0	113	2	IlIIlIllllIIll	Ljava/lang/Exception;
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  public SettingColor asColor() {
    try {
      return (SettingColor)this;
    } catch (Exception lIlIllllllIIll) {
      throw new ClassCastException(String.valueOf((new StringBuilder()).append(llIIIIlll[IllIIIlll[4]]).append(this)));
    } 
  }
  
  public abstract void render(ModuleWindow paramModuleWindow, class_4587 paramclass_4587, int paramInt1, int paramInt2, int paramInt3);
  
  public abstract boolean isDefault();
  
  public SettingRotate asRotate() {
    try {
      return (SettingRotate)this;
    } catch (Exception llllIlllllIIll) {
      throw new ClassCastException(String.valueOf((new StringBuilder()).append(llIIIIlll[IllIIIlll[5]]).append(this)));
    } 
  }
  
  public abstract void readSettings(JsonElement paramJsonElement);
  
  public abstract String getName();
  
  public abstract JsonElement saveSettings();
  
  static {
    IIIIllIllIl();
    lIlIIlIllIl();
  }
  
  public SettingToggle asToggle() {
    try {
      return (SettingToggle)this;
    } catch (Exception lIIIIIIIIIlIll) {
      throw new ClassCastException(String.valueOf((new StringBuilder()).append(llIIIIlll[IllIIIlll[2]]).append(this)));
    } 
  }
  
  public Triple<Integer, Integer, String> getGuiDesc(ModuleWindow llIIIlllllIIll, boolean IllllIllllIIll, String lIlllIllllIIll, boolean IIlllIllllIIll) {
    return Triple.of(Integer.valueOf(IllllIllllIIll + IIlllIllllIIll + IllIIIlll[2]), Integer.valueOf(lIlllIllllIIll), this.description);
  }
  
  public SettingSlider asSlider() {
    try {
      return (SettingSlider)this;
    } catch (Exception llIlllllllIIll) {
      throw new ClassCastException(String.valueOf((new StringBuilder()).append(llIIIIlll[IllIIIlll[3]]).append(this)));
    } 
  }
  
  public abstract int getHeight(int paramInt);
  
  private static void IIIIllIllIl() {
    IllIIIlll = new int[20];
    IllIIIlll[0] = (0x2B ^ 0x38) & (0x37 ^ 0x24 ^ 0xFFFFFFFF);
    IllIIIlll[1] = " ".length();
    IllIIIlll[2] = "  ".length();
    IllIIIlll[3] = "   ".length();
    IllIIIlll[4] = 0x3F ^ 0x3B;
    IllIIIlll[5] = 0x13 ^ 0x16;
    IllIIIlll[6] = 148 + 32 - 41 + 26 ^ 129 + 47 - 64 + 51;
    IllIIIlll[7] = 0x50 ^ 0x5C ^ 0x9D ^ 0xC2;
    IllIIIlll[8] = -(0xA9 ^ 0xB6);
    IllIIIlll[9] = 0x31 ^ 0x3C;
    IllIIIlll[10] = (0xED ^ 0xC2) + 89 + 130 - 183 + 122 - (0x3 ^ 0x5F) + (0x7D ^ 0x2E);
    IllIIIlll[11] = (0x2F ^ 0xD) + (0x1F ^ 0x54) - (0x77 ^ 0x6D) + (0x16 ^ 0x5E);
    IllIIIlll[12] = (0x3B ^ 0x1A) + (0x7D ^ 0x63) - (0x38 ^ 0x22) + (0xB6 ^ 0xC4);
    IllIIIlll[13] = 0x73 ^ 0x3E;
    IllIIIlll[14] = 150 + 0 - 114 + 173;
    IllIIIlll[15] = (0x3D ^ 0x73) + (0x9B ^ 0xB6) - (0x33 ^ 0x7) + (0x65 ^ 0x3D);
    IllIIIlll[16] = 0x13 ^ 0x1A;
    IllIIIlll[17] = 0x36 ^ 0x58;
    IllIIIlll[18] = 0xBC ^ 0xA6 ^ 0xF9 ^ 0xA0;
    IllIIIlll[19] = 0xE0 ^ 0xBE;
  }
  
  public SettingMode asMode() {
    try {
      return (SettingMode)this;
    } catch (Exception lllIIIIIIIlIll) {
      throw new ClassCastException(String.valueOf((new StringBuilder()).append(llIIIIlll[IllIIIlll[1]]).append(this)));
    } 
  }
  
  private static String lIIIIlIllIl(String IIlIllIlllIIll, String lIlIllIlllIIll) {
    IlIIllIlllIIll = new String(Base64.getDecoder().decode(IIlIllIlllIIll.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder IIIIIIllllIIll = new StringBuilder();
    char[] lIIlllIlllIIll = lIlIllIlllIIll.toCharArray();
    int IIIlllIlllIIll = XOREncryptionAlgorithm.lIlIIlIlIIIlI[IllIIIlll[0]];
    char[] arrayOfChar1 = IlIIllIlllIIll.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[IllIIIlll[0]];
    while (lIIIllIllIl(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char IIllllIlllIIll = arrayOfChar1[j];
      "".length();
      IIIlllIlllIIll++;
      j++;
      "".length();
      if (lIIIllIllIl((IllIIIlll[0] + IllIIIlll[7] - IllIIIlll[8] + IllIIIlll[9] ^ IllIIIlll[10] ^ IllIIIlll[11]) & (IllIIIlll[12] + IllIIIlll[13] - IllIIIlll[14] + IllIIIlll[15] ^ IllIIIlll[16] + IllIIIlll[17] - IllIIIlll[18] + IllIIIlll[19] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(IIIIIIllllIIll);
  }
  
  private static boolean lIIIllIllIl(Exception lllIlIIlllIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\setting\base\SettingBase.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */