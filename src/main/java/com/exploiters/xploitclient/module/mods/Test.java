package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.exploiters.xploitclient.utils.ExploitLogger;
import com.google.common.eventbus.Subscribe;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;

public class Test extends Module {
  @Subscribe
  public void onSendPacket(short llIllIlllIIllll) {
    System.out.println(String.valueOf((new StringBuilder()).append(IlIIll[llIIll[3]]).append(llIllIlllIIllll.getPacket().toString())));
    ExploitLogger.infoMessage(String.valueOf((new StringBuilder()).append(IlIIll[llIIll[4]]).append(llIllIlllIIllll.getPacket().toString())));
  }
  
  private static String llIllll(String IlIIllIllIIllll, String lIlIllIllIIllll) {
    llIIllIllIIllll = new String(Base64.getDecoder().decode(IlIIllIllIIllll.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder llllllIllIIllll = new StringBuilder();
    char[] IIIlllIllIIllll = lIlIllIllIIllll.toCharArray();
    int lllIllIllIIllll = XOREncryptionAlgorithm.lIlIIlIlIIIlI[llIIll[0]];
    char[] arrayOfChar1 = llIIllIllIIllll.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[llIIll[0]];
    while (Illllll(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char llIlllIllIIllll = arrayOfChar1[j];
      "".length();
      lllIllIllIIllll++;
      j++;
      "".length();
      if (Illllll((llIIll[0] + llIIll[6] - llIIll[7] + llIIll[8] ^ llIIll[9] ^ llIIll[10]) & (llIIll[11] + llIIll[12] - llIIll[13] + llIIll[14] ^ llIIll[15] + llIIll[16] - llIIll[17] + llIIll[18] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(llllllIllIIllll);
  }
  
  private static void lIlllll() {
    llIIll = new int[19];
    llIIll[0] = (0x7 ^ 0x64 ^ 0x1 ^ 0x3A) & (99 + 12 - 96 + 177 ^ 3 + 136 - 58 + 71 ^ -" ".length());
    llIIll[1] = -"  ".length();
    llIIll[2] = " ".length();
    llIIll[3] = "  ".length();
    llIIll[4] = "   ".length();
    llIIll[5] = 0xA9 ^ 0xC6 ^ 0xE8 ^ 0x83;
    llIIll[6] = 0x75 ^ 0x26;
    llIIll[7] = -(0xFA ^ 0xC1 ^ 0x80 ^ 0xA4);
    llIIll[8] = 158 + 22 - 123 + 108 ^ 35 + 167 - 185 + 151;
    llIIll[9] = 173 + 22 - 98 + 99;
    llIIll[10] = (0x2A ^ 0x1F) + (0x12 ^ 0x65) - 14 + 94 - 86 + 140 + 131 + 65 - 141 + 90;
    llIIll[11] = 47 + 48 - 37 + 93;
    llIIll[12] = 0x9A ^ 0x92 ^ 0xF ^ 0x4A;
    llIIll[13] = (0x6B ^ 0x45) + (0xD1 ^ 0x9B) - (0x75 ^ 0x4B) + 62 + 84 - 98 + 103;
    llIIll[14] = (0xC4 ^ 0xA7) + (0x2 ^ 0x77) - 131 + 77 - 109 + 54 + (0xED ^ 0x8D);
    llIIll[15] = 0xFD ^ 0x91 ^ 0x75 ^ 0x10;
    llIIll[16] = 0x29 ^ 0xC ^ 0x8C ^ 0xC7;
    llIIll[17] = 26 + 165 - 105 + 147 ^ 128 + 19 - 28 + 51;
    llIIll[18] = 0x3C ^ 0x55 ^ 0xA6 ^ 0x91;
  }
  
  private static void IIlllll() {
    IlIIll = new String[llIIll[5]];
    IlIIll[llIIll[0]] = IlIllll("orrQYJbhO3Y=", "zyeKN");
    IlIIll[llIIll[2]] = llIllll("CQAgPT9NAyw/JQwXISg/TRwjOSNNFiIjPwIZKA==", "muMML");
    IlIIll[llIIll[3]] = llIllll("AgkeM1ENDgU6S3k=", "YKVnq");
    IlIIll[llIIll[4]] = IlIllll("nQ0ANvhjzT4=", "Rssxv");
  }
  
  private static String IlIllll(long IIlIlIlllIIllll, float llIlIIlllIIllll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/Test.llIIll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/module/mods/Test.llIIll : [I
    //   36: iconst_2
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/module/mods/Test.llIIll : [I
    //   51: iconst_3
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/module/mods/Test.llIIll : [I
    //   68: iconst_4
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/module/mods/Test.llIIll : [I
    //   83: iconst_4
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	1	IIllIIlllIIllll	S
    //   76	42	3	llllIIlllIIllll	Ljavax/crypto/Cipher;
    //   0	125	3	IllIlIlllIIllll	I
    //   0	125	2	llIlIIlllIIllll	F
    //   0	125	0	lIllIIlllIIllll	C
    //   0	125	0	IIlIlIlllIIllll	J
    //   119	4	2	IlIIlIlllIIllll	Ljava/lang/Exception;
    //   0	125	3	IlIlIIlllIIllll	Ljava/lang/Exception;
    //   0	125	2	IIIIlIlllIIllll	C
    //   0	125	1	lIlIlIlllIIllll	F
    //   0	125	1	lIIIlIlllIIllll	Ljava/lang/String;
    //   59	59	2	llIIlIlllIIllll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	0	IlllIIlllIIllll	Ljava/lang/String;
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  private static boolean Illllll(double lllIIlIllIIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  static {
    lIlllll();
    IIlllll();
  }
  
  public Test() {
    super(IlIIll[llIIll[0]], llIIll[1], Category.CHAT, IlIIll[llIIll[2]], new com.exploiters.xploitclient.setting.base.SettingBase[llIIll[0]]);
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\Test.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */