package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventTick;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.exploiters.xploitclient.utils.Timer;
import com.google.common.eventbus.Subscribe;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Base64;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;
import net.minecraft.class_1657;
import net.minecraft.class_1792;
import net.minecraft.class_1799;
import net.minecraft.class_1802;
import net.minecraft.class_310;
import net.minecraft.class_746;

public class HotbarCache extends Module {
  private static void IllIlIl() {
    IllIIl = new String[lllIIl[16]];
    IllIIl[lllIIl[0]] = llIIlIl("NhdXFGFdesC1/heIxE1nPg==", "VtqDa");
    IllIIl[lllIIl[2]] = IIlIlIl("dENf5XLElYEr2skunbAegf1k2BRyg8hZ", "GladG");
    IllIIl[lllIIl[4]] = IIlIlIl("Gwc38ESAMbo=", "fSAiK");
    IllIIl[lllIIl[3]] = lIlIlIl("FBEgEQw8HQ==", "DxCzm");
    IllIIl[lllIIl[5]] = llIIlIl("8TNpL2F6ej4=", "tOssT");
    IllIIl[lllIIl[6]] = IIlIlIl("DZsQDNC60Mw=", "PSnPj");
    IllIIl[lllIIl[7]] = llIIlIl("h+Sj+sEnLZXnCx4w6IVnWw==", "IgvFu");
    IllIIl[lllIIl[8]] = lIlIlIl("JSYxKA==", "hIUMp");
    IllIIl[lllIIl[9]] = IIlIlIl("sVvKCntHin8=", "ikHzh");
    IllIIl[lllIIl[10]] = IIlIlIl("A2J+uBnLqE4=", "Azcki");
    IllIIl[lllIIl[11]] = llIIlIl("VDiit4y5mPI=", "gusYT");
    IllIIl[lllIIl[12]] = lIlIlIl("IBA4BTQ=", "duTdM");
  }
  
  private static void lllIlIl() {
    lllIIl = new int[29];
    lllIIl[0] = (0x4D ^ 0x5D) & (0x5 ^ 0x15 ^ 0xFFFFFFFF);
    lllIIl[1] = -"  ".length();
    lllIIl[2] = " ".length();
    lllIIl[3] = "   ".length();
    lllIIl[4] = "  ".length();
    lllIIl[5] = 0x70 ^ 0x77 ^ "   ".length();
    lllIIl[6] = 173 + 61 - 230 + 176 ^ 100 + 70 - 0 + 7;
    lllIIl[7] = 0x74 ^ 0x72;
    lllIIl[8] = 0x8C ^ 0x8B;
    lllIIl[9] = 0xAA ^ 0xA2;
    lllIIl[10] = 0xAC ^ 0xA5;
    lllIIl[11] = 133 + 27 - 153 + 194 ^ 187 + 42 - 74 + 40;
    lllIIl[12] = 50 + 15 - -32 + 58 ^ 136 + 61 - 168 + 115;
    lllIIl[13] = -" ".length();
    lllIIl[14] = 0x2B ^ 0x6;
    lllIIl[15] = 0x4D ^ 0x69;
    lllIIl[16] = 161 + 116 - 96 + 19 ^ 44 + 111 - 24 + 65;
    lllIIl[17] = 0xB3 ^ 0xBA ^ 0x4A ^ 0x10;
    lllIIl[18] = -(0xF4 ^ 0x91 ^ 0x57 ^ 0x2D);
    lllIIl[19] = 131 + 68 - 176 + 123 ^ 29 + 59 - 6 + 77;
    lllIIl[20] = 89 + 34 - 86 + 92 + (0xA7 ^ 0x80) - (0x74 ^ 0xC) + 27 + 87 - 80 + 114;
    lllIIl[21] = 125 + 71 - 152 + 111;
    lllIIl[22] = 82 + 35 - 57 + 73 + (0x1F ^ 0x77) - 107 + 153 - 215 + 125 + (0xC2 ^ 0x96);
    lllIIl[23] = 0x9 ^ 0x71 ^ 0x62 ^ 0x57;
    lllIIl[24] = 48 + 88 - 18 + 91;
    lllIIl[25] = 151 + 154 - 177 + 31;
    lllIIl[26] = 0x46 ^ 0x2D ^ 0xBC ^ 0xB9;
    lllIIl[27] = 0xDE ^ 0x9D;
    lllIIl[28] = 0x66 ^ 0x38;
  }
  
  public int GetItemSlot(short llllIllIllIllll) {
    class_310 lIIIlllIllIllll = class_310.method_1551();
    class_746 class_746 = lIIIlllIllIllll.field_1724;
    if (lIIllIl(class_746))
      return lllIIl[0]; 
    int IIlIlllIllIllll = lllIIl[0];
    while (IlIllIl(IIlIlllIllIllll, ((class_1657)class_746).field_7514.method_5439())) {
      if (IllllIl(IIlIlllIllIllll) && IIIIIll(IIlIlllIllIllll, lllIIl[6]) && IIIIIll(IIlIlllIllIllll, lllIIl[7]) && IIIIIll(IIlIlllIllIllll, lllIIl[8]))
        if (lIlllIl(IIlIlllIllIllll, lllIIl[9])) {
          "".length();
          if (" ".length() <= 0)
            return (27 + 25 - 26 + 138 ^ 55 + 62 - 81 + 118) & (102 + 33 - 74 + 70 ^ 104 + 142 - 154 + 97 ^ -" ".length()); 
        } else {
          class_1799 lIlIlllIllIllll = ((class_1657)class_746).field_7514.method_5438(IIlIlllIllIllll);
          if (IllllIl(lIlIlllIllIllll.method_7960())) {
            "".length();
            if (null != null)
              return (0x68 ^ 0x3C ^ 0xEF ^ 0xB1) & (0x2A ^ 0x58 ^ 0x1E ^ 0x66 ^ -" ".length()); 
          } else if (lllllIl(lIlIlllIllIllll.method_7909(), llllIllIllIllll)) {
            return IIlIlllIllIllll;
          } 
        }  
      IIlIlllIllIllll++;
      "".length();
      if (((0xB ^ 0x42) & (0x4A ^ 0x3 ^ 0xFFFFFFFF) ^ 0x2C ^ 0x28) <= 0)
        return (0xA7 ^ 0x9C ^ 0x31 ^ 0xC) & (0x17 ^ 0x39 ^ 0x4B ^ 0x63 ^ -" ".length()); 
    } 
    return lllIIl[13];
  }
  
  public void onDisable() {
    this.Hotbar.clear();
  }
  
  private static String lIlIlIl(String lIllllIIllIllll, String llllllIIllIllll) {
    String str = new String(Base64.getDecoder().decode(lIllllIIllIllll.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder IlIlIIlIllIllll = new StringBuilder();
    char[] llIIIIlIllIllll = llllllIIllIllll.toCharArray();
    int IlIIIIlIllIllll = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lllIIl[0]];
    char[] arrayOfChar1 = str.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lllIIl[0]];
    while (IllllIl(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char IllIIIlIllIllll = arrayOfChar1[j];
      "".length();
      IlIIIIlIllIllll++;
      j++;
      "".length();
      if (IllllIl((lllIIl[0] + lllIIl[17] - lllIIl[18] + lllIIl[19] ^ lllIIl[20] ^ lllIIl[21]) & (lllIIl[22] + lllIIl[23] - lllIIl[24] + lllIIl[25] ^ lllIIl[10] + lllIIl[26] - lllIIl[27] + lllIIl[28] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(IlIlIIlIllIllll);
  }
  
  private static String llIIlIl(long lIlIlIIIllIllll, Exception lIIllIIIllIllll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   56: iconst_4
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   71: iconst_4
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	3	IIlllIIIllIllll	I
    //   0	113	2	llIIlIIIllIllll	Ljava/lang/Exception;
    //   0	113	1	IllIlIIIllIllll	Ljava/lang/Exception;
    //   0	113	3	IlIIlIIIllIllll	C
    //   0	113	2	lIIllIIIllIllll	Ljava/lang/Exception;
    //   64	42	3	IIIllIIIllIllll	Ljavax/crypto/Cipher;
    //   0	113	0	IllllIIIllIllll	S
    //   47	59	2	lllIlIIIllIllll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	113	0	lIlIlIIIllIllll	J
    //   0	113	1	lIlllIIIllIllll	Ljava/lang/String;
    //   0	113	0	llIllIIIllIllll	Ljava/lang/String;
    //   0	113	1	IIlIlIIIllIllll	Ljava/lang/Exception;
    //   107	4	2	IlIllIIIllIllll	Ljava/lang/Exception;
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  private static boolean IIlllIl(String IIlIIIIIllIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static boolean lIIllIl(short IlllllllIlIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  private boolean SwitchSlotIfNeed(int lIlIIIIlllIllll) {
    class_310 IIlIIIIlllIllll = class_310.method_1551();
    class_746 class_746 = IIlIIIIlllIllll.field_1724;
    class_1792 IlIIIIIlllIllll = ((HotbarCache)super).Hotbar.get(lIlIIIIlllIllll);
    if (lllllIl(IlIIIIIlllIllll, class_1802.field_8162))
      return lllIIl[0]; 
    if (llIllIl(((class_1657)class_746).field_7514.method_5438(lIlIIIIlllIllll).method_7960()) && lllllIl(((class_1657)class_746).field_7514.method_5438(lIlIIIIlllIllll).method_7909(), IlIIIIIlllIllll))
      return lllIIl[0]; 
    int lIIIIIIlllIllll = super.GetItemSlot(IlIIIIIlllIllll);
    if (IIIIIll(lIIIIIIlllIllll, lllIIl[13]) && IIIIIll(lIIIIIIlllIllll, lllIIl[14])) {
      "".length();
      "".length();
      "".length();
      return lllIIl[2];
    } 
    return lllIIl[0];
  }
  
  private static boolean lIlllIl(int llllIIIIllIllll, double IlllIIIIllIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  public void toggleNoSave() {}
  
  @Subscribe
  public void onTick(EventTick lIIIlIIlllIllll) {
    // Byte code:
    //   0: invokestatic method_1551 : ()Lnet/minecraft/class_310;
    //   3: astore_2
    //   4: aload_2
    //   5: getfield field_1755 : Lnet/minecraft/class_437;
    //   8: invokestatic IIlllIl : (Ljava/lang/Object;)Z
    //   11: ifeq -> 15
    //   14: return
    //   15: aload_0
    //   16: getfield timer : Lcom/exploiters/xploitclient/utils/Timer;
    //   19: aload_0
    //   20: invokevirtual getSettings : ()Ljava/util/List;
    //   23: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   26: iconst_4
    //   27: iaload
    //   28: invokeinterface get : (I)Ljava/lang/Object;
    //   33: checkcast com/exploiters/xploitclient/setting/base/SettingBase
    //   36: invokevirtual asSlider : ()Lcom/exploiters/xploitclient/setting/base/SettingSlider;
    //   39: invokevirtual getValue : ()D
    //   42: ldc2_w 1000.0
    //   45: dmul
    //   46: invokevirtual passed : (D)Z
    //   49: invokestatic llIllIl : (I)Z
    //   52: ifeq -> 56
    //   55: return
    //   56: aload_0
    //   57: invokevirtual getSettings : ()Ljava/util/List;
    //   60: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   63: iconst_2
    //   64: iaload
    //   65: invokeinterface get : (I)Ljava/lang/Object;
    //   70: checkcast com/exploiters/xploitclient/setting/base/SettingBase
    //   73: invokevirtual asMode : ()Lcom/exploiters/xploitclient/setting/base/SettingMode;
    //   76: getfield mode : I
    //   79: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   82: iconst_2
    //   83: iaload
    //   84: invokestatic lIlllIl : (II)Z
    //   87: ifeq -> 142
    //   90: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   93: iconst_0
    //   94: iaload
    //   95: istore_3
    //   96: iload_3
    //   97: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   100: bipush #10
    //   102: iaload
    //   103: invokestatic IlIllIl : (II)Z
    //   106: ifeq -> 142
    //   109: aload_0
    //   110: iload_3
    //   111: invokespecial SwitchSlotIfNeed : (I)Z
    //   114: invokestatic IllllIl : (I)Z
    //   117: ifeq -> 128
    //   120: aload_0
    //   121: getfield timer : Lcom/exploiters/xploitclient/utils/Timer;
    //   124: invokevirtual reset : ()V
    //   127: return
    //   128: iinc #3, 1
    //   131: ldc ''
    //   133: invokevirtual length : ()I
    //   136: pop
    //   137: aconst_null
    //   138: ifnull -> 96
    //   141: return
    //   142: aload_0
    //   143: invokevirtual getSettings : ()Ljava/util/List;
    //   146: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   149: iconst_2
    //   150: iaload
    //   151: invokeinterface get : (I)Ljava/lang/Object;
    //   156: checkcast com/exploiters/xploitclient/setting/base/SettingBase
    //   159: invokevirtual asMode : ()Lcom/exploiters/xploitclient/setting/base/SettingMode;
    //   162: getfield mode : I
    //   165: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   168: iconst_4
    //   169: iaload
    //   170: invokestatic lIlllIl : (II)Z
    //   173: ifeq -> 238
    //   176: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   179: iconst_0
    //   180: iaload
    //   181: istore_3
    //   182: iload_3
    //   183: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   186: bipush #10
    //   188: iaload
    //   189: invokestatic IlIllIl : (II)Z
    //   192: ifeq -> 238
    //   195: aload_0
    //   196: iload_3
    //   197: invokespecial RefillSlotIfNeed : (I)Z
    //   200: invokestatic IllllIl : (I)Z
    //   203: ifeq -> 214
    //   206: aload_0
    //   207: getfield timer : Lcom/exploiters/xploitclient/utils/Timer;
    //   210: invokevirtual reset : ()V
    //   213: return
    //   214: iinc #3, 1
    //   217: ldc ''
    //   219: invokevirtual length : ()I
    //   222: pop
    //   223: ldc ' '
    //   225: invokevirtual length : ()I
    //   228: ineg
    //   229: ldc '   '
    //   231: invokevirtual length : ()I
    //   234: if_icmple -> 182
    //   237: return
    //   238: return
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	239	0	IlIIlIIlllIllll	Lcom/exploiters/xploitclient/module/mods/HotbarCache;
    //   0	239	2	IlllIIIlllIllll	F
    //   96	46	3	IIlIlIIlllIllll	I
    //   0	239	3	lIllIIIlllIllll	Ljava/lang/Exception;
    //   0	239	1	lIIIlIIlllIllll	Lcom/exploiters/xploitclient/event/events/EventTick;
    //   0	239	0	llllIIIlllIllll	C
    //   182	56	3	llIIlIIlllIllll	I
    //   4	235	2	IIIIlIIlllIllll	Lnet/minecraft/class_310;
  }
  
  static {
    lllIlIl();
    IllIlIl();
  }
  
  private static boolean IllllIl(short IIllllllIlIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  public HotbarCache() {
    super(IllIIl[lllIIl[0]], lllIIl[1], Category.MISC, IllIIl[lllIIl[2]], new com.exploiters.xploitclient.setting.base.SettingBase[lllIIl[3]]);
  }
  
  private static boolean lIIIIll(char llIlIIIIllIllll, boolean IlIlIIIIllIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 >= SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private boolean CanItemBeMergedWith(String IllIlIlIllIllll, Exception lIlIlIlIllIllll) {
    if (lllllIl(IllIlIlIllIllll.method_7909(), lIlIlIlIllIllll.method_7909()) && IllllIl(IllIlIlIllIllll.method_7964().equals(lIlIlIlIllIllll.method_7964()))) {
      "".length();
      if (-"   ".length() >= 0)
        return (53 + 3 - -24 + 158 ^ 146 + 144 - 123 + 18) & (0x27 ^ 0x4C ^ 0x1C ^ 0x20 ^ -" ".length()); 
    } else {
    
    } 
    return lllIIl[0];
  }
  
  private boolean RefillSlotIfNeed(int IlIIIllIllIllll) {
    // Byte code:
    //   0: aload_0
    //   1: getfield mc : Lnet/minecraft/class_310;
    //   4: getfield field_1724 : Lnet/minecraft/class_746;
    //   7: getfield field_7514 : Lnet/minecraft/class_1661;
    //   10: iload_1
    //   11: invokevirtual method_5438 : (I)Lnet/minecraft/class_1799;
    //   14: astore_2
    //   15: aload_2
    //   16: invokevirtual method_7960 : ()Z
    //   19: invokestatic llIllIl : (I)Z
    //   22: ifeq -> 38
    //   25: aload_2
    //   26: invokevirtual method_7909 : ()Lnet/minecraft/class_1792;
    //   29: getstatic net/minecraft/class_1802.field_8162 : Lnet/minecraft/class_1792;
    //   32: invokestatic lllllIl : (Ljava/lang/Object;Ljava/lang/Object;)Z
    //   35: ifeq -> 44
    //   38: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   41: iconst_0
    //   42: iaload
    //   43: ireturn
    //   44: aload_2
    //   45: invokevirtual method_7946 : ()Z
    //   48: invokestatic llIllIl : (I)Z
    //   51: ifeq -> 60
    //   54: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   57: iconst_0
    //   58: iaload
    //   59: ireturn
    //   60: aload_2
    //   61: invokevirtual method_7947 : ()I
    //   64: aload_2
    //   65: invokevirtual method_7914 : ()I
    //   68: invokestatic lIIIIll : (II)Z
    //   71: ifeq -> 80
    //   74: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   77: iconst_0
    //   78: iaload
    //   79: ireturn
    //   80: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   83: bipush #10
    //   85: iaload
    //   86: istore_3
    //   87: iload_3
    //   88: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   91: bipush #15
    //   93: iaload
    //   94: invokestatic IlIllIl : (II)Z
    //   97: ifeq -> 267
    //   100: aload_0
    //   101: getfield mc : Lnet/minecraft/class_310;
    //   104: getfield field_1724 : Lnet/minecraft/class_746;
    //   107: getfield field_7514 : Lnet/minecraft/class_1661;
    //   110: iload_3
    //   111: invokevirtual method_5438 : (I)Lnet/minecraft/class_1799;
    //   114: astore #4
    //   116: aload #4
    //   118: invokevirtual method_7960 : ()Z
    //   121: invokestatic IllllIl : (I)Z
    //   124: ifeq -> 169
    //   127: ldc ''
    //   129: invokevirtual length : ()I
    //   132: pop
    //   133: ldc '   '
    //   135: invokevirtual length : ()I
    //   138: bipush #41
    //   140: bipush #63
    //   142: ixor
    //   143: bipush #19
    //   145: iconst_5
    //   146: ixor
    //   147: iconst_m1
    //   148: ixor
    //   149: iand
    //   150: if_icmpge -> 233
    //   153: bipush #114
    //   155: bipush #109
    //   157: ixor
    //   158: sipush #135
    //   161: sipush #152
    //   164: ixor
    //   165: iconst_m1
    //   166: ixor
    //   167: iand
    //   168: ireturn
    //   169: aload_0
    //   170: aload_2
    //   171: aload #4
    //   173: invokespecial CanItemBeMergedWith : (Lnet/minecraft/class_1799;Lnet/minecraft/class_1799;)Z
    //   176: invokestatic IllllIl : (I)Z
    //   179: ifeq -> 233
    //   182: aload_0
    //   183: getfield mc : Lnet/minecraft/class_310;
    //   186: getfield field_1761 : Lnet/minecraft/class_636;
    //   189: aload_0
    //   190: getfield mc : Lnet/minecraft/class_310;
    //   193: getfield field_1724 : Lnet/minecraft/class_746;
    //   196: getfield field_7512 : Lnet/minecraft/class_1703;
    //   199: getfield field_7763 : I
    //   202: iload_3
    //   203: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   206: iconst_0
    //   207: iaload
    //   208: getstatic net/minecraft/class_1713.field_7794 : Lnet/minecraft/class_1713;
    //   211: aload_0
    //   212: getfield mc : Lnet/minecraft/class_310;
    //   215: getfield field_1724 : Lnet/minecraft/class_746;
    //   218: invokevirtual method_2906 : (IIILnet/minecraft/class_1713;Lnet/minecraft/class_1657;)Lnet/minecraft/class_1799;
    //   221: ldc ''
    //   223: invokevirtual length : ()I
    //   226: pop2
    //   227: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   230: iconst_2
    //   231: iaload
    //   232: ireturn
    //   233: iinc #3, 1
    //   236: ldc ''
    //   238: invokevirtual length : ()I
    //   241: pop
    //   242: sipush #188
    //   245: sipush #184
    //   248: ixor
    //   249: ineg
    //   250: ifle -> 87
    //   253: bipush #116
    //   255: bipush #120
    //   257: ixor
    //   258: bipush #126
    //   260: bipush #114
    //   262: ixor
    //   263: iconst_m1
    //   264: ixor
    //   265: iand
    //   266: ireturn
    //   267: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   270: iconst_0
    //   271: iaload
    //   272: ireturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   15	258	2	lIIIIllIllIllll	Lnet/minecraft/class_1799;
    //   0	273	0	llIIIllIllIllll	Lcom/exploiters/xploitclient/module/mods/HotbarCache;
    //   116	117	4	lIlIIllIllIllll	Lnet/minecraft/class_1799;
    //   0	273	3	lIlllIlIllIllll	J
    //   0	273	0	IIIIIllIllIllll	I
    //   0	273	2	IllllIlIllIllll	I
    //   0	273	1	lllllIlIllIllll	Ljava/lang/String;
    //   0	273	1	IlIIIllIllIllll	I
    //   0	273	4	IIlllIlIllIllll	I
    //   87	180	3	IIlIIllIllIllll	I
  }
  
  private static boolean IIIIIll(byte lllIllllIlIllll, long IllIllllIlIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static String IIlIlIl(String lllIIlIIllIllll, float IlllIlIIllIllll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   36: iconst_2
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   51: iconst_4
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   68: iconst_3
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/module/mods/HotbarCache.lllIIl : [I
    //   83: iconst_3
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   119	4	2	llIlIlIIllIllll	Ljava/lang/Exception;
    //   0	125	0	lIllIlIIllIllll	J
    //   0	125	0	lllIIlIIllIllll	Ljava/lang/String;
    //   0	125	3	llIIIlIIllIllll	J
    //   0	125	2	IIlIIlIIllIllll	Ljava/lang/String;
    //   0	125	0	IllIIlIIllIllll	F
    //   0	125	1	lIlIIlIIllIllll	I
    //   59	59	2	IIllIlIIllIllll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	1	IlllIlIIllIllll	F
    //   0	125	1	IlIlIlIIllIllll	Ljava/lang/String;
    //   76	42	3	IIIlIlIIllIllll	Ljavax/crypto/Cipher;
    //   0	125	3	llllIlIIllIllll	I
    //   0	125	2	lIIlIlIIllIllll	C
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  private static boolean IlIllIl(byte lllIIIIIllIllll, byte IllIIIIIllIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 < SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  public void onEnable() {
    class_310 lIIIIlIlllIllll = class_310.method_1551();
    class_746 class_746 = lIIIIlIlllIllll.field_1724;
    if (lIIllIl(lIIIIlIlllIllll.field_1687))
      return; 
    this.Hotbar.clear();
    int llIIIlIlllIllll = lllIIl[0];
    while (IlIllIl(llIIIlIlllIllll, lllIIl[10])) {
      class_1799 IIlIIlIlllIllll = ((class_1657)class_746).field_7514.method_5438(llIIIlIlllIllll);
      if (llIllIl(IIlIIlIlllIllll.method_7960()) && llIllIl(this.Hotbar.contains(IIlIIlIlllIllll.method_7909()))) {
        "".length();
        "".length();
        if (((0x4C ^ 0x74) & (0x6D ^ 0x55 ^ 0xFFFFFFFF)) != 0)
          return; 
      } else {
        "".length();
      } 
      llIIIlIlllIllll++;
      "".length();
      if ("   ".length() <= ((0x20 ^ 0x27) & (0x4C ^ 0x4B ^ 0xFFFFFFFF)))
        return; 
    } 
  }
  
  private static boolean llIllIl(int IlIlllllIlIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  private static boolean lllllIl(float lIIIIIIIllIllll, float IIIIIIIIllIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\HotbarCache.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */