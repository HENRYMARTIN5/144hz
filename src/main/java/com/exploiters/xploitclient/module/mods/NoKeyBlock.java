package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;

public class NoKeyBlock extends Module {
  private static void IIIIlIIllIl() {
    lIllllIll = new int[23];
    lIllllIll[0] = (0xB ^ 0x58 ^ 0xE4 ^ 0x81) & (0x58 ^ 0x19 ^ 0x6D ^ 0x1A ^ -" ".length());
    lIllllIll[1] = -"  ".length();
    lIllllIll[2] = " ".length();
    lIllllIll[3] = "   ".length();
    lIllllIll[4] = "  ".length();
    lIllllIll[5] = 0x48 ^ 0x4C;
    lIllllIll[6] = 0xB2 ^ 0xB7;
    lIllllIll[7] = 0x28 ^ 0x2E;
    lIllllIll[8] = 0x41 ^ 0x70 ^ 0xB6 ^ 0x80;
    lIllllIll[9] = 9 + 38 - 37 + 123 ^ 6 + 129 - 64 + 70;
    lIllllIll[10] = 0xC ^ 0x49 ^ 0x7C ^ 0x6A;
    lIllllIll[11] = -(0x65 ^ 0x7A);
    lIllllIll[12] = 107 + 172 - 172 + 83 ^ 45 + 29 - -33 + 72;
    lIllllIll[13] = (0x56 ^ 0x1E) + 12 + 90 - -65 + 11 - (0x34 ^ 0x5E) + (0x35 ^ 0x1);
    lIllllIll[14] = 41 + 24 - -49 + 41;
    lIllllIll[15] = (0x4B ^ 0x5D) + (0x38 ^ 0x24) - -(0x47 ^ 0x15) + (0x74 ^ 0x67);
    lIllllIll[16] = 0x7A ^ 0xD ^ 0xB3 ^ 0x89;
    lIllllIll[17] = 4 + 13 - 0 + 192;
    lIllllIll[18] = 32 + 13 - -19 + 79 + (0x60 ^ 0x5D) - 19 + 17 - -113 + 32 + 88 + 124 - 165 + 89;
    lIllllIll[19] = 0x47 ^ 0x3E ^ 0xFA ^ 0x8A;
    lIllllIll[20] = 109 + 43 - -36 + 42 ^ 120 + 114 - 156 + 58;
    lIllllIll[21] = 0x6F ^ 0x79 ^ 0xC9 ^ 0x9C;
    lIllllIll[22] = 134 + 218 - 342 + 212 ^ 110 + 67 - 148 + 99;
  }
  
  private static String IIllIIIllIl(String lllIIIlIlIlIll, float IIIIIIlIlIlIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/NoKeyBlock.lIllllIll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/NoKeyBlock.lIllllIll : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/NoKeyBlock.lIllllIll : [I
    //   56: iconst_4
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/NoKeyBlock.lIllllIll : [I
    //   71: iconst_4
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   107	4	2	IllIIIlIlIlIll	Ljava/lang/Exception;
    //   0	113	1	lIIlIIlIlIlIll	Ljava/lang/String;
    //   0	113	0	lIIIIIlIlIlIll	S
    //   0	113	1	IIIIIIlIlIlIll	F
    //   0	113	2	llllllIIlIlIll	I
    //   0	113	2	lIlIIIlIlIlIll	Ljava/lang/Exception;
    //   0	113	0	lllIIIlIlIlIll	Ljava/lang/String;
    //   0	113	1	IlIIIIlIlIlIll	Ljava/lang/Exception;
    //   0	113	0	IlIlIIlIlIlIll	S
    //   0	113	3	IIIlIIlIlIlIll	I
    //   47	59	2	llIIIIlIlIlIll	Ljavax/crypto/spec/SecretKeySpec;
    //   64	42	3	IIlIIIlIlIlIll	Ljavax/crypto/Cipher;
    //   0	113	3	IlllllIIlIlIll	J
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  private static boolean lIIIlIIllIl(byte llIlIlIIlIlIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  public NoKeyBlock() {
    super(llIlllIll[lIllllIll[0]], lIllllIll[1], Category.EXPLOITS, llIlllIll[lIllllIll[2]], new com.exploiters.xploitclient.setting.base.SettingBase[lIllllIll[3]]);
  }
  
  private static String IlllIIIllIl(String lIIIllIIlIlIll, boolean llllIlIIlIlIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/NoKeyBlock.lIllllIll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/module/mods/NoKeyBlock.lIllllIll : [I
    //   36: iconst_2
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/module/mods/NoKeyBlock.lIllllIll : [I
    //   51: iconst_4
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/module/mods/NoKeyBlock.lIllllIll : [I
    //   68: iconst_3
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/module/mods/NoKeyBlock.lIllllIll : [I
    //   83: iconst_3
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	1	IIlIllIIlIlIll	Ljava/lang/String;
    //   0	125	2	llIIllIIlIlIll	C
    //   0	125	2	IlllIlIIlIlIll	C
    //   0	125	0	lllIllIIlIlIll	J
    //   0	125	1	llllIlIIlIlIll	Z
    //   0	125	0	lIIIllIIlIlIll	Ljava/lang/String;
    //   0	125	3	lIllIlIIlIlIll	Ljava/lang/String;
    //   76	42	3	IlIIllIIlIlIll	Ljavax/crypto/Cipher;
    //   59	59	2	IllIllIIlIlIll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	0	IIIIllIIlIlIll	Z
    //   0	125	3	lIIlllIIlIlIll	I
    //   0	125	1	IIIlllIIlIlIll	F
    //   119	4	2	lIlIllIIlIlIll	Ljava/lang/Exception;
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  private static String lIllIIIllIl(String IIIllIlIlIlIll, String llIllIlIlIlIll) {
    String str = new String(Base64.getDecoder().decode(IIIllIlIlIlIll.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder lIlIIllIlIlIll = new StringBuilder();
    char[] IllllIlIlIlIll = llIllIlIlIlIll.toCharArray();
    int lIlllIlIlIlIll = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lIllllIll[0]];
    char[] arrayOfChar1 = str.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lIllllIll[0]];
    while (lIIIlIIllIl(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char lIIIIllIlIlIll = arrayOfChar1[j];
      "".length();
      lIlllIlIlIlIll++;
      j++;
      "".length();
      if (lIIIlIIllIl((lIllllIll[0] + lIllllIll[10] - lIllllIll[11] + lIllllIll[12] ^ lIllllIll[13] ^ lIllllIll[14]) & (lIllllIll[15] + lIllllIll[16] - lIllllIll[17] + lIllllIll[18] ^ lIllllIll[19] + lIllllIll[20] - lIllllIll[21] + lIllllIll[22] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(lIlIIllIlIlIll);
  }
  
  private static void llllIIIllIl() {
    llIlllIll = new String[lIllllIll[9]];
    llIlllIll[lIllllIll[0]] = IIllIIIllIl("C6C4oVCxCcxzDWIENBDOyQ==", "QToUW");
    llIlllIll[lIllllIll[2]] = lIllIIIllIl("LAk4DjQeRS0ONk0RO0E3FBUxQSEBCjcKJglFPwQ6HkUnFCAGRTUSYxkNMUEgAgk7E2MGAC1BKgMRO0E3CB0gQSUEADgFMA==", "meTaC");
    llIlllIll[lIllllIll[4]] = IIllIIIllIl("7+Y+3HPeAHiJe6o0i38B9A==", "nAWUd");
    llIlllIll[lIllllIll[3]] = IlllIIIllIl("Pqlm41iFr/u61QQe1En7IoE0HtHow9cdMo09GgZPAn6qUryw7Du8mN7MQJk3f+0mPXvRBu3IXukYy5M4pYngqrgTDeR1cunlYg+SNSbu89IphJYyd2+bP0rDzXEu3k65rIDIsefry5M=", "ICEPV");
    llIlllIll[lIllllIll[5]] = IIllIIIllIl("csqlO4tyCRUzsxBNFqGWuA==", "hrQGW");
    llIlllIll[lIllllIll[6]] = IlllIIIllIl("nzASTjnx1vBpZ/Lfr9jM+JF3WHhraNJuuX9D9saEaQPwWmArvub/X8MXHDHP6jBO", "lOqwI");
    llIlllIll[lIllllIll[7]] = IlllIIIllIl("Q0xqhdxZb8BDdGpn/3lAPw==", "QdIlo");
    llIlllIll[lIllllIll[8]] = IIllIIIllIl("f8PHgoyCs/PgeQsSqZYZ8kiEvZjVAn5ohRD6eGHAB/I91C+wuFWwgQ==", "XqoNo");
  }
  
  static {
    IIIIlIIllIl();
    llllIIIllIl();
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\NoKeyBlock.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */