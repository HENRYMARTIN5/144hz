package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventReadPacket;
import com.exploiters.xploitclient.event.events.EventTick;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.google.common.eventbus.Subscribe;
import net.minecraft.class_1268;
import net.minecraft.class_1802;
import net.minecraft.class_2596;
import net.minecraft.class_2767;
import net.minecraft.class_2886;
import net.minecraft.class_3417;

public class AutoFish extends Module {
  private static boolean lIIllIlIlIl(float IlIlIIIIIIIlll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  private static String lIllIIlIlIl(boolean IlIIIlIIIIIlll, String IllIIlIIIIIlll) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   43: iconst_0
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   65: iconst_0
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic lllIlIlIlIl : (I)Z
    //   80: ifeq -> 239
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   131: iconst_0
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   136: bipush #7
    //   138: iaload
    //   139: iadd
    //   140: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   143: bipush #8
    //   145: iaload
    //   146: isub
    //   147: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   150: bipush #9
    //   152: iaload
    //   153: iadd
    //   154: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   157: bipush #10
    //   159: iaload
    //   160: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   163: bipush #11
    //   165: iaload
    //   166: ixor
    //   167: ixor
    //   168: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   171: bipush #12
    //   173: iaload
    //   174: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   177: bipush #13
    //   179: iaload
    //   180: iadd
    //   181: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   184: bipush #14
    //   186: iaload
    //   187: isub
    //   188: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   191: bipush #15
    //   193: iaload
    //   194: iadd
    //   195: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   198: bipush #16
    //   200: iaload
    //   201: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   204: bipush #17
    //   206: iaload
    //   207: iadd
    //   208: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   211: bipush #18
    //   213: iaload
    //   214: isub
    //   215: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   218: bipush #19
    //   220: iaload
    //   221: iadd
    //   222: ixor
    //   223: ldc ' '
    //   225: invokevirtual length : ()I
    //   228: ineg
    //   229: ixor
    //   230: iand
    //   231: invokestatic lllIlIlIlIl : (I)Z
    //   234: ifeq -> 70
    //   237: aconst_null
    //   238: areturn
    //   239: aload_2
    //   240: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   243: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	244	3	llllIlIIIIIlll	J
    //   0	244	0	llIIIlIIIIIlll	Ljava/lang/String;
    //   0	244	2	IIIIIlIIIIIlll	C
    //   0	244	0	IlIIIlIIIIIlll	Z
    //   0	244	1	lIIIIlIIIIIlll	B
    //   32	212	2	IIIIllIIIIIlll	Ljava/lang/StringBuilder;
    //   0	244	0	IIlIIlIIIIIlll	Ljava/lang/String;
    //   0	244	2	IlllIlIIIIIlll	F
    //   90	24	8	IIllIlIIIIIlll	C
    //   0	244	7	lllIIlIIIIIlll	D
    //   0	244	6	IIlllIIIIIIlll	B
    //   0	244	4	IllllIIIIIIlll	Ljava/lang/String;
    //   0	244	4	lIllIlIIIIIlll	S
    //   48	196	4	IIIlIlIIIIIlll	I
    //   0	244	8	IlIllIIIIIIlll	F
    //   37	207	3	lIIlIlIIIIIlll	[C
    //   0	244	1	IllIIlIIIIIlll	Ljava/lang/String;
    //   0	244	8	lIIIllIIIIIlll	S
    //   0	244	5	IlIlIlIIIIIlll	F
    //   0	244	7	llIllIIIIIIlll	Ljava/lang/String;
    //   0	244	1	lIlIIlIIIIIlll	Ljava/lang/String;
    //   0	244	3	lllllIIIIIIlll	Ljava/lang/Exception;
    //   0	244	5	lIlllIIIIIIlll	Ljava/lang/Exception;
    //   0	244	6	llIlIlIIIIIlll	S
  }
  
  private static boolean lIlIlIlIlIl(String llIIlIIIIIIlll, double IlIIlIIIIIIlll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static void IlllIIlIlIl() {
    lIIlIlIll = new String[llIlIlIll[6]];
    lIIlIlIll[llIlIlIll[0]] = IIllIIlIlIl("GOMTU57zX5VhygOwoqssbQ==", "ByGMs");
    lIIlIlIll[llIlIlIll[2]] = lIllIIlIlIl("DgMgOhkuAj02FSMaLXUGKhM4JlQmGHQzHTweMSZYbxwhJgBvBSA0BjtWMjwHJx86MlQuGDB1HTtWIzwYI1Y8NBorGjF1ACcTdCcRPAI=", "OvTUt");
    lIIlIlIll[llIlIlIll[3]] = lIllIIlIlIl("CAcKBRsuQi0BBDsb", "Zbidh");
  }
  
  public void onDisable() {
    super.onDisable();
    pullFish = llIlIlIll[0];
    ticksPassed = llIlIlIll[0];
  }
  
  private static boolean IllIlIlIlIl(int lIllIIIIIIIlll, boolean IIllIIIIIIIlll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  @Subscribe
  public void onReceivePacket(EventReadPacket lIlIlIlIIIIlll) {
    if (IIlIlIlIlIl(this.mc.field_1724) && (!lIlIlIlIlIl(this.mc.field_1724.method_6047().method_7909(), class_1802.field_8378) || IllIlIlIlIl(this.mc.field_1724.method_6079().method_7909(), class_1802.field_8378)) && lllIlIlIlIl(lIlIlIlIIIIlll.getPacket() instanceof class_2767) && lllIlIlIlIl(class_3417.field_14660.equals(((class_2767)lIlIlIlIIIIlll.getPacket()).method_11894()))) {
      pullFish = llIlIlIll[2];
      ticksPassed = (int)getSetting(llIlIlIll[0]).asSlider().getValue() * llIlIlIll[4];
    } 
  }
  
  private static boolean IIlIlIlIlIl(Exception IIIIlIIIIIIlll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static boolean IlIllIlIlIl(short lllIlIIIIIIlll, float IllIlIIIIIIlll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static String IIllIIlIlIl(short lllIIIlIIIIlll, Exception llllllIIIIIlll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   56: iconst_3
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/AutoFish.llIlIlIll : [I
    //   71: iconst_3
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	1	lIllllIIIIIlll	I
    //   0	113	0	IlllllIIIIIlll	Ljava/lang/String;
    //   0	113	0	lllIIIlIIIIlll	S
    //   0	113	3	llIlllIIIIIlll	C
    //   0	113	0	IIlIIIlIIIIlll	Ljava/lang/String;
    //   64	42	3	lIIIIIlIIIIlll	Ljavax/crypto/Cipher;
    //   0	113	2	IIllllIIIIIlll	Z
    //   0	113	1	llllllIIIIIlll	Ljava/lang/Exception;
    //   107	4	2	llIIIIlIIIIlll	Ljava/lang/Exception;
    //   0	113	3	lIlIIIlIIIIlll	I
    //   0	113	2	IlIIIIlIIIIlll	Ljava/lang/Exception;
    //   47	59	2	IIIIIIlIIIIlll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	113	1	IllIIIlIIIIlll	Ljava/lang/String;
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  public AutoFish() {
    super(lIIlIlIll[llIlIlIll[0]], llIlIlIll[1], Category.PLAYER, lIIlIlIll[llIlIlIll[2]], new com.exploiters.xploitclient.setting.base.SettingBase[llIlIlIll[2]]);
  }
  
  private static boolean IIIllIlIlIl(Exception IllIIIIIIIIlll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  private static void llIIlIlIlIl() {
    llIlIlIll = new int[20];
    llIlIlIll[0] = (0xB4 ^ 0x9B) & (0xA2 ^ 0x8D ^ 0xFFFFFFFF);
    llIlIlIll[1] = -"  ".length();
    llIlIlIll[2] = " ".length();
    llIlIlIll[3] = "  ".length();
    llIlIlIll[4] = 0x3C ^ 0x28;
    llIlIlIll[5] = 121 + 125 - 210 + 133 ^ 55 + 20 - 8 + 105;
    llIlIlIll[6] = "   ".length();
    llIlIlIll[7] = 249 + 7 - 107 + 106 ^ 118 + 124 - 178 + 108;
    llIlIlIll[8] = -(0x62 ^ 0x6C ^ 0x2F ^ 0x3E);
    llIlIlIll[9] = 0x2 ^ 0xF;
    llIlIlIll[10] = (0x2E ^ 0x3D) + 3 + 114 - 115 + 182 - (0x48 ^ 0x27) + (0x3D ^ 0x55);
    llIlIlIll[11] = 136 + 38 - 156 + 137;
    llIlIlIll[12] = 55 + 8 - -66 + 14 + (0xDB ^ 0xB0) - (0x57 ^ 0x39) + (0x59 ^ 0x52);
    llIlIlIll[13] = 0xE9 ^ 0xA4;
    llIlIlIll[14] = (0x5E ^ 0x72) + (0x84 ^ 0xA0) - (0x54 ^ 0x7D) + 8 + 78 - -78 + 6;
    llIlIlIll[15] = 143 + 57 - 60 + 19;
    llIlIlIll[16] = 0x99 ^ 0xBB ^ 0xAB ^ 0x80;
    llIlIlIll[17] = 140 + 59 - 97 + 100 ^ 17 + 157 - 91 + 81;
    llIlIlIll[18] = 99 + 209 - 251 + 169 ^ 125 + 142 - 136 + 30;
    llIlIlIll[19] = 0x2B ^ 0x75;
  }
  
  @Subscribe
  public void onTick(EventTick IIIIlIlIIIIlll) {
    assert !lIIllIlIlIl(this.mc.field_1724);
    if (lllIlIlIlIl(ticksPassed))
      ticksPassed -= llIlIlIll[2]; 
    if (lllIlIlIlIl(pullFish) && IlIllIlIlIl(ticksPassed, (int)getSetting(llIlIlIll[0]).asSlider().getValue() * llIlIlIll[4] - llIlIlIll[5])) {
      this.mc.field_1724.field_3944.method_2883((class_2596)new class_2886(class_1268.field_5808));
      pullFish = llIlIlIll[0];
    } 
    if (IlIllIlIlIl(ticksPassed, llIlIlIll[2])) {
      this.mc.field_1724.field_3944.method_2883((class_2596)new class_2886(class_1268.field_5808));
      ticksPassed = llIlIlIll[0];
    } 
  }
  
  private static boolean lllIlIlIlIl(Exception IIIlIIIIIIIlll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  static {
    llIIlIlIlIl();
    IlllIIlIlIl();
    if (IIIllIlIlIl(AutoFish.class.desiredAssertionStatus())) {
      "".length();
      if (" ".length() == 0)
        return; 
    } else {
    
    } 
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\AutoFish.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */