package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;

public class Colours extends Module {
  static {
    IIIllIIll();
    llIIlIIll();
  }
  
  private static String llllIIIll(short IIIlllIllIlIIll, String lllIllIllIlIIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/Colours.Illllll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/Colours.Illllll : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/Colours.Illllll : [I
    //   56: iconst_4
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/Colours.Illllll : [I
    //   71: iconst_4
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	0	llllIlIllIlIIll	F
    //   0	113	1	IIIIllIllIlIIll	Ljava/lang/Exception;
    //   0	113	1	lllIllIllIlIIll	Ljava/lang/String;
    //   64	42	3	IlIIllIllIlIIll	Ljavax/crypto/Cipher;
    //   0	113	2	llIIllIllIlIIll	Ljava/lang/Exception;
    //   0	113	2	lIllIlIllIlIIll	I
    //   0	113	3	IllIllIllIlIIll	I
    //   0	113	3	IIllIlIllIlIIll	C
    //   107	4	2	IIlIllIllIlIIll	Ljava/lang/Exception;
    //   0	113	1	IlllIlIllIlIIll	Z
    //   0	113	0	IIIlllIllIlIIll	S
    //   0	113	0	lIlIllIllIlIIll	Ljava/lang/String;
    //   47	59	2	lIIIllIllIlIIll	Ljavax/crypto/spec/SecretKeySpec;
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  public void onEnable() {
    setToggled(Illllll[0]);
  }
  
  private static boolean lIIllIIll(double IlIlIlIllIlIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  public Colours() {
    super(llIllll[Illllll[0]], Illllll[1], Category.CLIENT, llIllll[Illllll[2]], new com.exploiters.xploitclient.setting.base.SettingBase[Illllll[3]]);
  }
  
  private static String lIIIlIIll(String IllIIIlllIlIIll, String lIIlIIlllIlIIll) {
    lllIIIlllIlIIll = new String(Base64.getDecoder().decode(IllIIIlllIlIIll.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder llIIlIlllIlIIll = new StringBuilder();
    char[] IIllIIlllIlIIll = lIIlIIlllIlIIll.toCharArray();
    int llIlIIlllIlIIll = XOREncryptionAlgorithm.lIlIIlIlIIIlI[Illllll[0]];
    char[] arrayOfChar1 = lllIIIlllIlIIll.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[Illllll[0]];
    while (lIIllIIll(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char llllIIlllIlIIll = arrayOfChar1[j];
      "".length();
      llIlIIlllIlIIll++;
      j++;
      "".length();
      if (lIIllIIll((Illllll[0] + Illllll[11] - Illllll[12] + Illllll[13] ^ Illllll[14] ^ Illllll[15]) & (Illllll[16] + Illllll[17] - Illllll[18] + Illllll[19] ^ Illllll[10] + Illllll[20] - Illllll[21] + Illllll[22] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(llIIlIlllIlIIll);
  }
  
  private static void llIIlIIll() {
    llIllll = new String[Illllll[10]];
    llIllll[Illllll[0]] = llllIIIll("AUbXnuUHOMyiJLrX9MHRuw==", "rNIKG");
    llIllll[Illllll[2]] = lIIIlIIll("AxAnTDskKQweeDggFxgxJSIQ", "KEclX");
    llIllll[Illllll[4]] = lIIIlIIll("Kw4LKxMWGA==", "yobEq");
    llIllll[Illllll[5]] = lIIIlIIll("Agss", "PnHkY");
    llIllll[Illllll[6]] = lIIIlIIll("AAYxIDY=", "GtTEX");
    llIllll[Illllll[7]] = llllIIIll("/aCi69TLWuE=", "sHpMH");
    llIllll[Illllll[8]] = llllIIIll("V62AlV6UHDI=", "VEmWp");
    llIllll[Illllll[3]] = llllIIIll("yFHQh8v6eWXezjdvs0xQKw==", "vJbVm");
    llIllll[Illllll[9]] = llllIIIll("QwK052P0pZwjpQAuuwTmlw==", "Zotvq");
  }
  
  private static void IIIllIIll() {
    Illllll = new int[23];
    Illllll[0] = (45 + 48 - 32 + 158 ^ 103 + 23 - 32 + 55) & (160 + 161 - 253 + 158 ^ 34 + 49 - 6 + 95 ^ -" ".length());
    Illllll[1] = 0xFFFFB759 & 0x49FE;
    Illllll[2] = " ".length();
    Illllll[3] = 0x3F ^ 0x41 ^ 0xC0 ^ 0xB9;
    Illllll[4] = "  ".length();
    Illllll[5] = "   ".length();
    Illllll[6] = 0x2E ^ 0x55 ^ 102 + 49 - 38 + 14;
    Illllll[7] = 0x79 ^ 0x7C;
    Illllll[8] = 0xB1 ^ 0xB7;
    Illllll[9] = 0x50 ^ 0x58;
    Illllll[10] = 157 + 31 - 181 + 159 ^ 77 + 125 - 136 + 109;
    Illllll[11] = 0x9A ^ 0x97 ^ 0x40 ^ 0x1E;
    Illllll[12] = -(0xD9 ^ 0x9B ^ 0xDD ^ 0x80);
    Illllll[13] = 0x3A ^ 0x2 ^ 0x70 ^ 0x45;
    Illllll[14] = (0x6D ^ 0x6B) + (0xF ^ 0x5) - -(0x6A ^ 0x76) + 11 + 82 - 13 + 72;
    Illllll[15] = (0xDA ^ 0xBB) + 86 + 21 - 86 + 130 - (0x6C ^ 0x4) + (0x5B ^ 0x50);
    Illllll[16] = 78 + 146 - 138 + 65;
    Illllll[17] = 0xC4 ^ 0x89;
    Illllll[18] = 22 + 4 - -78 + 105;
    Illllll[19] = (0x2C ^ 0x30) + (0x75 ^ 0x12) - 86 + 75 - 160 + 126 + 116 + 77 - 184 + 146;
    Illllll[20] = 156 + 177 - 207 + 69 ^ 101 + 83 - 135 + 124;
    Illllll[21] = 0x1 ^ 0x42;
    Illllll[22] = 129 + 98 - 204 + 129 ^ 87 + 89 - -21 + 1;
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\Colours.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */