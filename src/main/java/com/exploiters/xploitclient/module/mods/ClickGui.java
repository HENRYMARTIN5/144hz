package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.gui.clickgui.ClickGuiScreen;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;
import net.minecraft.class_437;

public class ClickGui extends Module {
  public void onEnable() {
    this.mc.method_1507((class_437)clickGui);
    setToggled(lIIIIll[0]);
  }
  
  private static String IIIIllIIl(String lllllIIIIlIlIll, String IIIIIlIIIlIlIll) {
    String str = new String(Base64.getDecoder().decode(lllllIIIIlIlIll.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder llIlIlIIIlIlIll = new StringBuilder();
    char[] IIlIIlIIIlIlIll = IIIIIlIIIlIlIll.toCharArray();
    int llIIIlIIIlIlIll = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lIIIIll[0]];
    char[] arrayOfChar1 = str.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lIIIIll[0]];
    while (IIlIllIIl(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char lllIIlIIIlIlIll = arrayOfChar1[j];
      "".length();
      llIIIlIIIlIlIll++;
      j++;
      "".length();
      if (IIlIllIIl((lIIIIll[0] + lIIIIll[15] - lIIIIll[16] + lIIIIll[14] ^ lIIIIll[17] ^ lIIIIll[18]) & (lIIIIll[19] + lIIIIll[20] - lIIIIll[21] + lIIIIll[22] ^ lIIIIll[10] + lIIIIll[23] - lIIIIll[24] + lIIIIll[25] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(llIlIlIIIlIlIll);
  }
  
  private static String llllIlIIl(short IllIlIllIlIlIll, double IIllIIllIlIlIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/ClickGui.lIIIIll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/ClickGui.lIIIIll : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/ClickGui.lIIIIll : [I
    //   56: iconst_4
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/ClickGui.lIIIIll : [I
    //   71: iconst_4
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	3	IlIlIIllIlIlIll	C
    //   0	113	0	llIIlIllIlIlIll	Ljava/lang/String;
    //   47	59	2	llllIIllIlIlIll	Ljavax/crypto/spec/SecretKeySpec;
    //   64	42	3	IIIIlIllIlIlIll	Ljavax/crypto/Cipher;
    //   0	113	3	IIlIlIllIlIlIll	I
    //   0	113	1	IlllIIllIlIlIll	Ljava/lang/Exception;
    //   0	113	1	IIllIIllIlIlIll	D
    //   0	113	2	lIIIlIllIlIlIll	Ljava/lang/Exception;
    //   0	113	1	lIlIlIllIlIlIll	Ljava/lang/String;
    //   0	113	0	IllIlIllIlIlIll	S
    //   107	4	2	IlIIlIllIlIlIll	Ljava/lang/Exception;
    //   0	113	2	llIlIIllIlIlIll	D
    //   0	113	0	lIllIIllIlIlIll	D
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  private static String lIIIllIIl(long IIIIIIlIIlIlIll, float lllIllIIIlIlIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/ClickGui.lIIIIll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/module/mods/ClickGui.lIIIIll : [I
    //   36: iconst_2
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/module/mods/ClickGui.lIIIIll : [I
    //   51: iconst_4
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/module/mods/ClickGui.lIIIIll : [I
    //   68: iconst_5
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/module/mods/ClickGui.lIIIIll : [I
    //   83: iconst_5
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	3	IllIllIIIlIlIll	J
    //   0	125	1	IIIlllIIIlIlIll	F
    //   0	125	3	IlIIIIlIIlIlIll	I
    //   0	125	0	IlIlllIIIlIlIll	Ljava/lang/String;
    //   0	125	1	lIllllIIIlIlIll	Ljava/lang/String;
    //   0	125	2	lllIllIIIlIlIll	F
    //   76	42	3	llIlllIIIlIlIll	Ljavax/crypto/Cipher;
    //   59	59	2	llllllIIIlIlIll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	1	lIIIIIlIIlIlIll	F
    //   119	4	2	IlllllIIIlIlIll	Ljava/lang/Exception;
    //   0	125	2	IIllllIIIlIlIll	C
    //   0	125	0	IIIIIIlIIlIlIll	J
    //   0	125	0	lIIlllIIIlIlIll	J
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  private static void llIIllIIl() {
    lIIIIll = new int[26];
    lIIIIll[0] = (36 + 130 - 104 + 124 ^ 33 + 82 - -47 + 0) & (21 + 138 - 147 + 149 ^ 152 + 136 - 117 + 14 ^ -" ".length());
    lIIIIll[1] = 0xFFFFB1F8 & 0x4F5F;
    lIIIIll[2] = " ".length();
    lIIIIll[3] = 0xC7 ^ 0xAE ^ 0x65 ^ 0xB;
    lIIIIll[4] = "  ".length();
    lIIIIll[5] = "   ".length();
    lIIIIll[6] = 128 + 129 - 112 + 53 ^ 132 + 119 - 89 + 32;
    lIIIIll[7] = 14 + 84 - 52 + 106 ^ 29 + 55 - -6 + 67;
    lIIIIll[8] = 0xB ^ 0xD;
    lIIIIll[9] = 0x3 ^ 0xA ^ " ".length();
    lIIIIll[10] = 113 + 100 - 74 + 46 ^ 156 + 36 - 129 + 113;
    lIIIIll[11] = 0x6D ^ 0x67;
    lIIIIll[12] = 116 + 26 - 53 + 39 ^ 16 + 85 - 19 + 57;
    lIIIIll[13] = 0x9 ^ 0x5;
    lIIIIll[14] = 158 + 167 - 170 + 35 ^ 177 + 111 - 257 + 148;
    lIIIIll[15] = 0x4B ^ 0x18;
    lIIIIll[16] = -(0x30 ^ 0x2F);
    lIIIIll[17] = 172 + 64 - 174 + 134;
    lIIIIll[18] = (0xCD ^ 0x8C) + (0x9F ^ 0xC5) - (0xF ^ 0x54) + (0x4A ^ 0x11);
    lIIIIll[19] = 65 + 22 - 54 + 118;
    lIIIIll[20] = 0x61 ^ 0x27 ^ 0x79 ^ 0x72;
    lIIIIll[21] = 60 + 40 - -23 + 86;
    lIIIIll[22] = 22 + 93 - 112 + 156;
    lIIIIll[23] = 0xAB ^ 0xC5;
    lIIIIll[24] = 52 + 25 - 61 + 117 ^ 29 + 71 - 76 + 174;
    lIIIIll[25] = 0x72 ^ 0x2C;
  }
  
  public ClickGui() {
    super(IIIIIll[lIIIIll[0]], lIIIIll[1], Category.CLIENT, IIIIIll[lIIIIll[2]], new com.exploiters.xploitclient.setting.base.SettingBase[lIIIIll[3]]);
  }
  
  private static boolean IIlIllIIl(boolean llIIlIIIIlIlIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static void IlIIllIIl() {
    IIIIIll = new String[lIIIIll[14]];
    IIIIIll[lIIIIll[0]] = llllIlIIl("7AWB5eztuSMRuWIwz5twPw==", "PKsib");
    IIIIIll[lIIIIll[2]] = llllIlIIl("3U3PneIofxklYnQcXkDnwY/WoRLHtTBU", "ImtMc");
    IIIIIll[lIIIIll[4]] = IIIIllIIl("OjQLLTIe", "vQeJF");
    IIIIIll[lIIIIll[5]] = llllIlIIl("yCRCbJFeBpyJ2OY/sul1DQ==", "Glgkw");
    IIIIIll[lIIIIll[6]] = lIIIllIIl("SYHz+6zSB2s=", "ckQIP");
    IIIIIll[lIIIIll[7]] = llllIlIIl("28v6NDz5Wub1F93tpMxg5B/Nojsz0lrZ", "JNEAa");
    IIIIIll[lIIIIll[8]] = IIIIllIIl("My0MIQo=", "gEiLo");
    IIIIIll[lIIIIll[3]] = llllIlIIl("YiL5cEl5XhK1IwEg2B7LTA==", "PlDEa");
    IIIIIll[lIIIIll[9]] = lIIIllIIl("+/ELK68ZpK0=", "BefrJ");
    IIIIIll[lIIIIll[10]] = lIIIllIIl("vd2nI3GXFe0=", "zydTi");
    IIIIIll[lIIIIll[11]] = IIIIllIIl("LjosCjo=", "mVIkH");
    IIIIIll[lIIIIll[12]] = llllIlIIl("5pqyQ7zMxpc=", "EDllM");
    IIIIIll[lIIIIll[13]] = llllIlIIl("JzmM5vgTSBRfuTSw0iXmJA==", "fuuCZ");
  }
  
  static {
    llIIllIIl();
    IlIIllIIl();
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\ClickGui.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */