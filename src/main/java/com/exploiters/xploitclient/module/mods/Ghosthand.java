package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventTick;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.google.common.eventbus.Subscribe;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import net.minecraft.class_2338;
import net.minecraft.class_243;
import net.minecraft.class_2586;

public class Ghosthand extends Module {
  private static boolean lIIlllIllIl(float lllIIllIllIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static void IIIlllIllIl() {
    lIIlIIlll = new int[5];
    lIIlIIlll[0] = (0x26 ^ 0x5C ^ 0x25 ^ 0x78) & (89 + 128 - 85 + 59 ^ 60 + 48 - 65 + 109 ^ -" ".length());
    lIIlIIlll[1] = -"  ".length();
    lIIlIIlll[2] = " ".length();
    lIIlIIlll[3] = 0x20 ^ 0x0 ^ 0x56 ^ 0x44;
    lIIlIIlll[4] = "  ".length();
  }
  
  public Ghosthand() {
    super(IIIlIIlll[lIIlIIlll[0]], lIIlIIlll[1], Category.PLAYER, IIIlIIlll[lIIlIIlll[2]], new com.exploiters.xploitclient.setting.base.SettingBase[lIIlIIlll[0]]);
  }
  
  @Subscribe
  public void onTick(EventTick lllIIIIlllIIll) {
    if (!lIIlllIllIl(this.mc.field_1690.field_1904.method_1434()) || lIIlllIllIl(this.mc.field_1724.method_5715()))
      return; 
    Iterator<class_2586> iterator = this.mc.field_1687.field_9231.iterator();
    while (lIIlllIllIl(iterator.hasNext())) {
      class_2586 IIllIIIlllIIll = iterator.next();
      if (lIIlllIllIl((new class_2338(this.mc.field_1724.method_5745(4.25D, this.mc.method_1488(), lIIlIIlll[0]).method_17784())).equals(IIllIIIlllIIll.method_11016())))
        return; 
      "".length();
      if ((105 + 18 - 122 + 163 ^ 70 + 133 - 199 + 156) <= "  ".length())
        return; 
    } 
    List<class_2338> IllIIIIlllIIll = new ArrayList<>();
    class_243 lIlIIIIlllIIll = (new class_243(0.0D, 0.0D, 0.1D)).method_1037(-((float)Math.toRadians(this.mc.field_1724.field_5965))).method_1024(-((float)Math.toRadians(this.mc.field_1724.field_6031)));
    int lIIlIIIlllIIll = lIIlIIlll[2];
    while (IlIlllIllIl(lIIlIIIlllIIll, lIIlIIlll[3])) {
      class_2338 IlIlIIIlllIIll = new class_2338(this.mc.field_1724.method_5836(this.mc.method_1488()).method_1019(lIlIIIIlllIIll.method_1021(lIIlIIIlllIIll)));
      if (lIIlllIllIl(IllIIIIlllIIll.contains(IlIlIIIlllIIll))) {
        "".length();
        if ("  ".length() == ((144 + 171 - 172 + 46 ^ 53 + 113 - 146 + 108) & (30 + 58 - -40 + 3 ^ 33 + 185 - 65 + 37 ^ -" ".length())))
          return; 
      } else {
        "".length();
        Iterator<class_2586> iterator1 = this.mc.field_1687.field_9231.iterator();
        while (lIIlllIllIl(iterator1.hasNext())) {
          class_2586 llIlIIIlllIIll = iterator1.next();
          if (lIIlllIllIl(llIlIIIlllIIll.method_11016().equals(IlIlIIIlllIIll))) {
            "".length();
            return;
          } 
          "".length();
          if (null != null)
            return; 
        } 
      } 
      lIIlIIIlllIIll++;
      "".length();
      if ((0x17 ^ 0x13) != (0x87 ^ 0x83))
        return; 
    } 
  }
  
  private static boolean IlIlllIllIl(int IlIlIllIllIIll, short lIIlIllIllIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 < SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  static {
    IIIlllIllIl();
    llIIllIllIl();
  }
  
  private static void llIIllIllIl() {
    IIIlIIlll = new String[lIIlIIlll[4]];
    IIIlIIlll[lIIlIIlll[0]] = IlIIllIllIl("xmBWxAjnMy37vCMUyDftNg==", "ASRhb");
    IIIlIIlll[lIIlIIlll[2]] = IlIIllIllIl("UMpUZT/6ODKIbkFbC1KCFuRxVECpH1oGK0Q3gL5clPY=", "ZMVWc");
  }
  
  private static String IlIIllIllIl(short lIIllllIllIIll, double llllIllIllIIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/Ghosthand.lIIlIIlll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/Ghosthand.lIIlIIlll : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/Ghosthand.lIIlIIlll : [I
    //   56: iconst_4
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/Ghosthand.lIIlIIlll : [I
    //   71: iconst_4
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	3	lIllIllIllIIll	J
    //   0	113	2	IlllIllIllIIll	Z
    //   0	113	1	lIIIlllIllIIll	Ljava/lang/Exception;
    //   47	59	2	IlIIlllIllIIll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	113	0	IIIIlllIllIIll	I
    //   0	113	3	lllIlllIllIIll	I
    //   0	113	1	llllIllIllIIll	D
    //   0	113	1	IIIllllIllIIll	Ljava/lang/String;
    //   0	113	0	lIIllllIllIIll	S
    //   64	42	3	llIIlllIllIIll	Ljavax/crypto/Cipher;
    //   0	113	2	IIlIlllIllIIll	Ljava/lang/Exception;
    //   107	4	2	lIlIlllIllIIll	Ljava/lang/Exception;
    //   0	113	0	IllIlllIllIIll	Ljava/lang/String;
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\Ghosthand.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */