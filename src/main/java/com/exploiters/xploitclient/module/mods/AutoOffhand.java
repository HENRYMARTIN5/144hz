package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventTick;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.google.common.eventbus.Subscribe;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.BlowfishEncryptionAlgorithm;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;
import net.minecraft.class_1802;
import net.minecraft.class_310;

public class AutoOffhand extends Module {
  public AutoOffhand() {
    super(lllIllIIl[IIIlllIIl[0]], IIIlllIIl[1], Category.COMBAT, lllIllIIl[IIIlllIIl[2]], new com.exploiters.xploitclient.setting.base.SettingBase[IIIlllIIl[3]]);
  }
  
  private static boolean IIIlIIllll(short lllllllllIIlIIl, boolean IllllllllIIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static boolean IIlIIIllll(byte IIIllllllIIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  private static String IlllllIlll(String llIIIlIIIlIlIIl, float IlIlIlIIIlIlIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/AutoOffhand.IIIlllIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/module/mods/AutoOffhand.IIIlllIIl : [I
    //   36: iconst_2
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/module/mods/AutoOffhand.IIIlllIIl : [I
    //   51: iconst_3
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/module/mods/AutoOffhand.IIIlllIIl : [I
    //   68: iconst_4
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/module/mods/AutoOffhand.IIIlllIIl : [I
    //   83: iconst_4
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   119	4	2	lllIIlIIIlIlIIl	Ljava/lang/Exception;
    //   0	125	1	IllIIlIIIlIlIIl	Ljava/lang/String;
    //   0	125	0	IlIIIlIIIlIlIIl	Z
    //   0	125	2	IIIIIlIIIlIlIIl	I
    //   59	59	2	IIIlIlIIIlIlIIl	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	2	lIlIIlIIIlIlIIl	C
    //   0	125	1	IlIlIlIIIlIlIIl	F
    //   0	125	0	llIIIlIIIlIlIIl	Ljava/lang/String;
    //   0	125	3	lllllIIIIlIlIIl	C
    //   76	42	3	IIlIIlIIIlIlIIl	Ljavax/crypto/Cipher;
    //   0	125	1	lIIIIlIIIlIlIIl	I
    //   0	125	0	lIIlIlIIIlIlIIl	J
    //   0	125	3	llIlIlIIIlIlIIl	I
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  private static boolean IllIIIllll(int llIIIIIIIlIlIIl, char IlIIIIIIIlIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 < SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  @Subscribe
  public void onTick(EventTick IIlIlIlIIlIlIIl) {
    if (llIIIIllll(IlIIIIllll(getSetting(IIIlllIIl[2]).asSlider().getValue(), (class_310.method_1551()).field_1724.method_6032()))) {
      if (!IIlIIIllll(this.mc.field_1755 instanceof net.minecraft.class_490) || lIlIIIllll(this.mc.field_1755)) {
        int IlIllIlIIlIlIIl = IIIlllIIl[9];
        while (IllIIIllll(IlIllIlIIlIlIIl, IIIlllIIl[10])) {
          if (lllIIIllll(IlIllIlIIlIlIIl, IIIlllIIl[11])) {
            "".length();
            if ((0x19 ^ 0x1D) <= ((0x84 ^ 0xC4) & (0xC0 ^ 0x80 ^ 0xFFFFFFFF)))
              return; 
          } else {
          
          } 
          if (IIIlIIllll(this.mc.field_1724.field_7514.method_5438(IlIllIlIIlIlIIl).method_7909(), class_1802.field_8288)) {
            if (IIlIIIllll(this.mc.field_1724.method_6079().method_7960())) {
              "".length();
              if (((0x57 ^ 0x63) & (0x5B ^ 0x6F ^ 0xFFFFFFFF)) > 0)
                return; 
            } else {
            
            } 
            int i = IIIlllIIl[0];
            "".length();
            "".length();
            if (lIIlIIllll(i))
              "".length(); 
            return;
          } 
          IlIllIlIIlIlIIl++;
          "".length();
          if (-" ".length() >= 0)
            return; 
        } 
        "".length();
        if (null != null)
          return; 
      } 
    } else if (IIlIIIllll((getSetting(IIIlllIIl[0]).asMode()).mode)) {
      if (!IIlIIIllll(this.mc.field_1755 instanceof net.minecraft.class_490) || lIlIIIllll(this.mc.field_1755)) {
        int IIIllIlIIlIlIIl = IIIlllIIl[9];
        while (IllIIIllll(IIIllIlIIlIlIIl, IIIlllIIl[10])) {
          if (lllIIIllll(IIIllIlIIlIlIIl, IIIlllIIl[11])) {
            "".length();
            if (" ".length() <= -" ".length())
              return; 
          } else {
          
          } 
          if (IIIlIIllll(this.mc.field_1724.field_7514.method_5438(IIIllIlIIlIlIIl).method_7909(), class_1802.field_8301)) {
            if (IIlIIIllll(this.mc.field_1724.method_6079().method_7960())) {
              "".length();
              if (-" ".length() > -" ".length())
                return; 
            } else {
            
            } 
            int i = IIIlllIIl[0];
            "".length();
            "".length();
            if (lIIlIIllll(i))
              "".length(); 
            return;
          } 
          IIIllIlIIlIlIIl++;
          "".length();
          if (-"  ".length() > 0)
            return; 
        } 
        "".length();
        if (" ".length() >= "  ".length())
          return; 
      } 
    } else if (IlIlIIllll((getSetting(IIIlllIIl[2]).asMode()).mode, IIIlllIIl[2]) && (!IIlIIIllll(this.mc.field_1755 instanceof net.minecraft.class_490) || lIlIIIllll(this.mc.field_1755))) {
      int IllIlIlIIlIlIIl = IIIlllIIl[9];
      while (IllIIIllll(IllIlIlIIlIlIIl, IIIlllIIl[10])) {
        if (lllIIIllll(IllIlIlIIlIlIIl, IIIlllIIl[11])) {
          "".length();
          if (" ".length() == -" ".length())
            return; 
        } else {
        
        } 
        if (IIIlIIllll(this.mc.field_1724.field_7514.method_5438(IllIlIlIIlIlIIl).method_7909(), class_1802.field_8463)) {
          if (IIlIIIllll(this.mc.field_1724.method_6079().method_7960())) {
            "".length();
            if (null != null)
              return; 
          } else {
          
          } 
          int i = IIIlllIIl[0];
          "".length();
          "".length();
          if (lIIlIIllll(i))
            "".length(); 
          return;
        } 
        IllIlIlIIlIlIIl++;
        "".length();
        if (-(0x68 ^ 0x3A ^ 0x1 ^ 0x57) > 0)
          return; 
      } 
    } 
  }
  
  private static boolean lllIIIllll(int lllIIIIIIlIlIIl, char IllIIIIIIlIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 >= SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static void lIIIIIllll() {
    IIIlllIIl = new int[25];
    IIIlllIIl[0] = (0xFB ^ 0xBC ^ 0x22 ^ 0x44) & (0x90 ^ 0xA4 ^ 0x4 ^ 0x11 ^ -" ".length());
    IIIlllIIl[1] = -"  ".length();
    IIIlllIIl[2] = " ".length();
    IIIlllIIl[3] = "  ".length();
    IIIlllIIl[4] = "   ".length();
    IIIlllIIl[5] = 0xB8 ^ 0xBC;
    IIIlllIIl[6] = 0x3D ^ 0x4C ^ 0xDA ^ 0xAE;
    IIIlllIIl[7] = 0x44 ^ 0x42;
    IIIlllIIl[8] = 0xAF ^ 0xA8;
    IIIlllIIl[9] = 86 + 99 - 94 + 77 ^ 50 + 35 - 26 + 102;
    IIIlllIIl[10] = 0x53 ^ 0x7E;
    IIIlllIIl[11] = 0x13 ^ 0x37;
    IIIlllIIl[12] = 33 + 137 - 30 + 19 ^ 12 + 89 - 85 + 135;
    IIIlllIIl[13] = 0x78 ^ 0x3E ^ 0x62 ^ 0x77;
    IIIlllIIl[14] = -(0x2B ^ 0x34);
    IIIlllIIl[15] = 0x8B ^ 0x86;
    IIIlllIIl[16] = 175 + 179 - 162 + 4;
    IIIlllIIl[17] = (0x49 ^ 0x40) + (0xFD ^ 0x90) - (0x1B ^ 0x6A) + 134 + 68 - 105 + 53;
    IIIlllIIl[18] = 136 + 56 - 78 + 37;
    IIIlllIIl[19] = 0x1B ^ 0x2C ^ 0x60 ^ 0x1A;
    IIIlllIIl[20] = 15 + 135 - 123 + 182;
    IIIlllIIl[21] = (0x3A ^ 0x1) + (0x55 ^ 0x69) - (0xDF ^ 0xC6) + (0xC3 ^ 0x82);
    IIIlllIIl[22] = 0x3E ^ 0x5A ^ 0xA4 ^ 0xAE;
    IIIlllIIl[23] = 0xE6 ^ 0xA8 ^ 0x73 ^ 0x7E;
    IIIlllIIl[24] = 48 + 113 - 85 + 146 ^ 76 + 36 - 82 + 98;
  }
  
  private static void IIIIIIllll() {
    lllIllIIl = new String[IIIlllIIl[12]];
    lllIllIIl[IIIlllIIl[0]] = lIllllIlll("IycAAwwENBwNLQY=", "bRtlC");
    lllIllIIl[IIIlllIIl[2]] = IlllllIlll("WkV8PwoMlvqR70xi3xMlqXlrOBBOtuaTgwxW67BYXVM=", "LwBrP");
    lllIllIIl[IIIlllIIl[3]] = lIllllIlll("BRwCIA==", "LhgMQ");
    lllIllIIl[IIIlllIIl[4]] = lIllllIlll("JRoaBAIHBA==", "fhcwv");
    lllIllIIl[IIIlllIIl[5]] = IlllllIlll("IQZnWNuuRFQ=", "hTbdu");
    lllIllIIl[IIIlllIIl[6]] = llllllIlll("gHmTrWzdrjqyOoSjzWF1tQn3Vo4s7w18dQL4QKhBDqOfy0MbrrvA+Swe19VcS8Kem8TW4wRqvik=", "TmiZJ");
    lllIllIIl[IIIlllIIl[7]] = llllllIlll("fRZM61wUUxz4jaAmj8LdYg==", "mRNMq");
    lllIllIIl[IIIlllIIl[8]] = lIllllIlll("HDYCPD48cxQ4LzpzGj8/JnMKJC85cwo+ajs1BTgrOjdDJyM4P0MjPT0nADhqIDxDJCUgNg4=", "TScPJ");
  }
  
  private static boolean IlIlIIllll(String llIlIIIIIlIlIIl, double IlIlIIIIIlIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static String lIllllIlll(String lIIlllIIIlIlIIl, String IIllllIIIlIlIIl) {
    IlIlllIIIlIlIIl = new String(Base64.getDecoder().decode(lIIlllIIIlIlIIl.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder IllIIIlIIlIlIIl = new StringBuilder();
    char[] llllllIIIlIlIIl = IIllllIIIlIlIIl.toCharArray();
    int IlllllIIIlIlIIl = XOREncryptionAlgorithm.lIlIIlIlIIIlI[IIIlllIIl[0]];
    char[] arrayOfChar1 = IlIlllIIIlIlIIl.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[IIIlllIIl[0]];
    while (lIIlIIllll(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char IlIIIIlIIlIlIIl = arrayOfChar1[j];
      "".length();
      IlllllIIIlIlIIl++;
      j++;
      "".length();
      if (lIIlIIllll((IIIlllIIl[0] + IIIlllIIl[13] - IIIlllIIl[14] + IIIlllIIl[15] ^ IIIlllIIl[16] ^ IIIlllIIl[17]) & (IIIlllIIl[18] + IIIlllIIl[19] - IIIlllIIl[20] + IIIlllIIl[21] ^ IIIlllIIl[9] + IIIlllIIl[22] - IIIlllIIl[23] + IIIlllIIl[24] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(IllIIIlIIlIlIIl);
  }
  
  static {
    lIIIIIllll();
    IIIIIIllll();
  }
  
  private static String llllllIlll(String lllIlIIIIlIlIIl, Exception IlIIlIIIIlIlIIl) {
    try {
      SecretKeySpec llIIlIIIIlIlIIl = new SecretKeySpec(MessageDigest.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IIIlllIIl[0]]]).digest(IlIIlIIIIlIlIIl.getBytes(StandardCharsets.UTF_8)), BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IIIlllIIl[2]]]);
      Cipher IIlIlIIIIlIlIIl = Cipher.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IIIlllIIl[3]]]);
      IIlIlIIIIlIlIIl.init(BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IIIlllIIl[3]], llIIlIIIIlIlIIl);
      return new String(IIlIlIIIIlIlIIl.doFinal(Base64.getDecoder().decode(lllIlIIIIlIlIIl.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception IllIlIIIIlIlIIl) {
      lIlIlIIIIlIlIIl.printStackTrace();
      return null;
    } 
  }
  
  private static boolean llIIIIllll(char IllIlllllIIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 > null);
  }
  
  private static int IlIIIIllll(double paramDouble1, double paramDouble2) {
    return paramDouble1 cmp paramDouble2;
  }
  
  private static boolean lIlIIIllll(String IIlllllllIIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  private static boolean lIIlIIllll(int IlIllllllIIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\AutoOffhand.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */