package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventSendPacket;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.exploiters.xploitclient.module.ModuleManager;
import com.google.common.eventbus.Subscribe;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Arrays;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.DESEncryptionAlgorithm;
import net.minecraft.class_2797;

public class FabritoneFix extends Module {
  private static void lllllIIlll() {
    llIlIlIIl = new int[6];
    llIlIlIIl[0] = (0xBA ^ 0xA1) & (0xBC ^ 0xA7 ^ 0xFFFFFFFF);
    llIlIlIIl[1] = -"  ".length();
    llIlIlIIl[2] = " ".length();
    llIlIlIIl[3] = "  ".length();
    llIlIlIIl[4] = "   ".length();
    llIlIlIIl[5] = 0xBA ^ 0xBE;
  }
  
  private static boolean lIIIIlIlll(String IllIlIIlllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  @Subscribe
  public void onPacketSend(EventSendPacket IlllllIlllIlIIl) {
    if (IIIIIlIlll(IlllllIlllIlIIl.getPacket() instanceof class_2797)) {
      String IIIIIIllllIlIIl = ((class_2797)IlllllIlllIlIIl.getPacket()).method_12114();
      if ((IIIIIlIlll(IIIIIIllllIlIIl.equals(IlIlIlIIl[llIlIlIIl[3]])) && !lIIIIlIlll(ModuleManager.getModule(Freecam.class).isToggled())) || (IIIIIlIlll(IIIIIIllllIlIIl.equals(IlIlIlIIl[llIlIlIIl[4]])) && IIIIIlIlll(ModuleManager.getModule(Freecam.class).isToggled())))
        ModuleManager.getModule(Freecam.class).toggle(); 
    } 
  }
  
  private static boolean IIIIIlIlll(float IIIllIIlllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  public FabritoneFix() {
    super(IlIlIlIIl[llIlIlIIl[0]], llIlIlIIl[1], Category.MISC, IlIlIlIIl[llIlIlIIl[2]], new com.exploiters.xploitclient.setting.base.SettingBase[llIlIlIIl[0]]);
  }
  
  static {
    lllllIIlll();
    IllllIIlll();
  }
  
  private static void IllllIIlll() {
    IlIlIlIIl = new String[llIlIlIIl[5]];
    IlIlIlIIl[llIlIlIIl[0]] = IIlllIIlll("4DT80M8tRamJmfJQde3Lyw==", "qDANj");
    IlIlIlIIl[llIlIlIIl[2]] = lIlllIIlll("hSmQjF1rKV9s1qePklSRcGRegViA/l44saLaBceM3kG7GFps2R5pGg==", "Uoxmj");
    IlIlIlIIl[llIlIlIIl[3]] = IIlllIIlll("Ijbtmfx1cUM=", "zCOpZ");
    IlIlIlIIl[llIlIlIIl[4]] = IIlllIIlll("0fD419H8Yww=", "Tlmsc");
  }
  
  private static String lIlllIIlll(double lIlllIIlllIlIIl, Exception lIIIIlIlllIlIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/FabritoneFix.llIlIlIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/FabritoneFix.llIlIlIIl : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/FabritoneFix.llIlIlIIl : [I
    //   56: iconst_3
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/FabritoneFix.llIlIlIIl : [I
    //   71: iconst_3
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	2	lIIIIlIlllIlIIl	Ljava/lang/Exception;
    //   0	113	0	llIIIlIlllIlIIl	Ljava/lang/String;
    //   0	113	1	IIlllIIlllIlIIl	S
    //   0	113	1	IllllIIlllIlIIl	Ljava/lang/Exception;
    //   47	59	2	lllllIIlllIlIIl	Ljavax/crypto/spec/SecretKeySpec;
    //   0	113	3	IlIllIIlllIlIIl	S
    //   107	4	2	IlIIIlIlllIlIIl	Ljava/lang/Exception;
    //   0	113	1	lIlIIlIlllIlIIl	Ljava/lang/String;
    //   64	42	3	IIIIIlIlllIlIIl	Ljavax/crypto/Cipher;
    //   0	113	0	lIlllIIlllIlIIl	D
    //   0	113	3	IIlIIlIlllIlIIl	I
    //   0	113	2	llIllIIlllIlIIl	B
    //   0	113	0	IllIIlIlllIlIIl	S
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  private static String IIlllIIlll(String llllIlIlllIlIIl, String IlIIllIlllIlIIl) {
    try {
      SecretKeySpec IIlIllIlllIlIIl = new SecretKeySpec(Arrays.copyOf(MessageDigest.getInstance(DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[llIlIlIIl[0]]]).digest(IlIIllIlllIlIIl.getBytes(StandardCharsets.UTF_8)), DESEncryptionAlgorithm.lIlllllIlllII[llIlIlIIl[2]]), DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[llIlIlIIl[3]]]);
      Cipher IIIIllIlllIlIIl = Cipher.getInstance(DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[llIlIlIIl[4]]]);
      IIIIllIlllIlIIl.init(DESEncryptionAlgorithm.lIlllllIlllII[llIlIlIIl[4]], IIlIllIlllIlIIl);
      return new String(IIIIllIlllIlIIl.doFinal(Base64.getDecoder().decode(llllIlIlllIlIIl.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception llIIllIlllIlIIl) {
      Exception exception1;
      exception1.printStackTrace();
      return null;
    } 
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\FabritoneFix.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */