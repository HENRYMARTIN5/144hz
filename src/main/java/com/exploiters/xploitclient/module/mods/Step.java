package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventTick;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.exploiters.xploitclient.utils.WorldUtils;
import com.google.common.eventbus.Subscribe;
import net.minecraft.class_2596;
import net.minecraft.class_2828;

public class Step extends Module {
  private static boolean IIIIllIlIIl(float llllllIlllllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  public void onDisable() {
    super.onDisable();
    ((Step)this).mc.field_1724.field_6013 = 0.5F;
  }
  
  private static String IlIlIlIlIIl(short lIlIIIIIIIIIIIl, String IIlIIIIIIIIIIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   56: iconst_3
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   71: iconst_3
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	1	lIllllllllllll	Ljava/lang/Exception;
    //   0	113	3	lIIlllllllllll	C
    //   0	113	2	IIIIIIIIIIIIIIl	Ljava/lang/Exception;
    //   0	113	0	IlIIIIIIIIIIIIl	Ljava/lang/String;
    //   0	113	1	IIlIIIIIIIIIIIl	Ljava/lang/String;
    //   0	113	0	lIlIIIIIIIIIIIl	S
    //   47	59	2	Illlllllllllll	Ljavax/crypto/spec/SecretKeySpec;
    //   107	4	2	lIIIIIIIIIIIIIl	Ljava/lang/Exception;
    //   0	113	0	IIllllllllllll	Ljava/lang/Exception;
    //   64	42	3	llllllllllllll	Ljavax/crypto/Cipher;
    //   0	113	2	IlIlllllllllll	S
    //   0	113	1	llIlllllllllll	C
    //   0	113	3	llIIIIIIIIIIIIl	I
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  private static String llIlIlIlIIl(char llIlIlllllllll, String llllIlllllllll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   36: iconst_2
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   51: iconst_3
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   68: iconst_4
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   83: iconst_4
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   119	4	2	IIIIllllllllll	Ljava/lang/Exception;
    //   59	59	2	lIIIllllllllll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	2	IlllIlllllllll	C
    //   0	125	0	IIllIlllllllll	Ljava/lang/String;
    //   76	42	3	lIllIlllllllll	Ljavax/crypto/Cipher;
    //   0	125	1	IlIlIlllllllll	D
    //   0	125	0	llIlIlllllllll	C
    //   0	125	1	llllIlllllllll	Ljava/lang/String;
    //   0	125	2	lIIlIlllllllll	I
    //   0	125	1	llIIllllllllll	F
    //   0	125	3	IIlIllllllllll	I
    //   0	125	3	IIIlIlllllllll	F
    //   0	125	0	IlIIllllllllll	J
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  public Step() {
    super(IlIllllIl[llIllllIl[0]], llIllllIl[1], Category.MOVEMENT, IlIllllIl[llIllllIl[2]], new com.exploiters.xploitclient.setting.base.SettingBase[llIllllIl[2]]);
  }
  
  private static int llllIlIlIIl(double paramDouble1, double paramDouble2) {
    return paramDouble1 cmp paramDouble2;
  }
  
  private static boolean lIIIllIlIIl(float IIlIIIllllllll, float llIIIIllllllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  @Subscribe
  public void onTick(EventTick llIlIIIIIIIIIIl) {
    if (IIIIllIlIIl(WorldUtils.NONSOLID_BLOCKS.contains(this.mc.field_1687.method_8320(this.mc.field_1724.method_24515().method_10080(0.0D, (this.mc.field_1724.method_17682() + 1.0F), 0.0D)).method_26204())))
      return; 
    if (IIIIllIlIIl((getSetting(llIllllIl[0]).asMode()).mode)) {
      this.mc.field_1724.field_6013 = 1.065F;
      "".length();
      if ("   ".length() <= 0)
        return; 
    } else if (lIIIllIlIIl((getSetting(llIllllIl[0]).asMode()).mode, llIllllIl[2])) {
      if (IIIIllIlIIl(this.mc.field_1724.field_5976) && IlIIllIlIIl(this.flag)) {
        this.mc.field_1724.method_18800((this.mc.field_1724.method_18798()).field_1352, -0.1D, (this.mc.field_1724.method_18798()).field_1350);
        "".length();
        if ("  ".length() <= 0)
          return; 
      } else if (IlIIllIlIIl(this.mc.field_1724.field_5976)) {
        this.mc.field_1724.method_18800((this.mc.field_1724.method_18798()).field_1352, 1.0D, (this.mc.field_1724.method_18798()).field_1350);
        this.mc.field_1724.field_3944.method_2883((class_2596)new class_2828(llIllllIl[2]));
        this.mc.field_1724.method_6043();
        this.flag = llIllllIl[2];
      } 
      if (IIIIllIlIIl(this.mc.field_1724.field_5976)) {
        this.flag = llIllllIl[0];
        "".length();
        if ("  ".length() != "  ".length())
          return; 
      } 
    } else if (lIIIllIlIIl((getSetting(llIllllIl[0]).asMode()).mode, llIllllIl[3])) {
      if (IlIIllIlIIl(this.mc.field_1724.field_5976) && IlIIllIlIIl(this.mc.field_1724.method_24828())) {
        this.pos = this.mc.field_1724.method_23318();
        this.mc.field_1724.method_6043();
        this.flag = llIllllIl[2];
      } 
      if (IlIIllIlIIl(this.flag) && llIIllIlIIl(llllIlIlIIl(this.pos + 1.065D, this.mc.field_1724.method_23318()))) {
        this.mc.field_1724.method_18800((this.mc.field_1724.method_18798()).field_1352, -0.1D, (this.mc.field_1724.method_18798()).field_1350);
        this.flag = llIllllIl[0];
      } 
    } 
  }
  
  static {
    IlllIlIlIIl();
    lIllIlIlIIl();
  }
  
  private static void lIllIlIlIIl() {
    IlIllllIl = new String[llIllllIl[7]];
    IlIllllIl[llIllllIl[0]] = IlIlIlIlIIl("WP2B/2ojXJs=", "uxQHs");
    IlIllllIl[llIllllIl[2]] = llIlIlIlIIl("v7C2yw+Wx8Fq2Hh2sGGh917lRUcfGe+lssySwSV1EAQs3TpXPQVVbPsjF8/ELhQR", "LzEbl");
    IlIllllIl[llIllllIl[3]] = IIllIlIlIIl("HgQCAw==", "Skffk");
    IlIllllIl[llIllllIl[4]] = IlIlIlIlIIl("B2YipfCPX5o=", "nGlfG");
    IlIllllIl[llIllllIl[5]] = IIllIlIlIIl("KRkaLAAI", "zisHe");
    IlIllllIl[llIllllIl[6]] = IlIlIlIlIIl("U3o657MDDcQ=", "Cyhwg");
  }
  
  private static boolean IlIIllIlIIl(float lIIIIIllllllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static boolean llIIllIlIIl(char lIllllIlllllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 < null);
  }
  
  private static String IIllIlIlIIl(int llllIIllllllll, String llIIlIllllllll) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   43: iconst_0
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   65: iconst_0
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic IlIIllIlIIl : (I)Z
    //   80: ifeq -> 240
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   131: iconst_0
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   136: bipush #8
    //   138: iaload
    //   139: iadd
    //   140: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   143: bipush #9
    //   145: iaload
    //   146: isub
    //   147: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   150: bipush #10
    //   152: iaload
    //   153: iadd
    //   154: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   157: bipush #11
    //   159: iaload
    //   160: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   163: bipush #12
    //   165: iaload
    //   166: ixor
    //   167: ixor
    //   168: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   171: bipush #13
    //   173: iaload
    //   174: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   177: bipush #14
    //   179: iaload
    //   180: iadd
    //   181: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   184: bipush #15
    //   186: iaload
    //   187: isub
    //   188: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   191: bipush #16
    //   193: iaload
    //   194: iadd
    //   195: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   198: bipush #17
    //   200: iaload
    //   201: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   204: bipush #18
    //   206: iaload
    //   207: iadd
    //   208: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   211: bipush #19
    //   213: iaload
    //   214: isub
    //   215: getstatic com/exploiters/xploitclient/module/mods/Step.llIllllIl : [I
    //   218: bipush #20
    //   220: iaload
    //   221: iadd
    //   222: ixor
    //   223: ldc_w ' '
    //   226: invokevirtual length : ()I
    //   229: ineg
    //   230: ixor
    //   231: iand
    //   232: invokestatic IlIIllIlIIl : (I)Z
    //   235: ifeq -> 70
    //   238: aconst_null
    //   239: areturn
    //   240: aload_2
    //   241: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   244: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	245	0	lIIIlIllllllll	Ljava/lang/String;
    //   0	245	3	IIllIIllllllll	Ljava/lang/Exception;
    //   0	245	6	lIIlIIllllllll	D
    //   0	245	3	IIlllIllllllll	J
    //   0	245	2	lIllIIllllllll	Ljava/lang/Exception;
    //   0	245	4	llIlIIllllllll	Z
    //   37	208	3	IllIlIllllllll	[C
    //   0	245	1	IlIIlIllllllll	Ljava/lang/String;
    //   0	245	4	IlIllIllllllll	S
    //   0	245	2	llIllIllllllll	F
    //   0	245	6	IIIllIllllllll	S
    //   0	245	5	IlIlIIllllllll	C
    //   90	24	8	lIIllIllllllll	C
    //   0	245	7	IIIlIIllllllll	B
    //   0	245	8	IllllIllllllll	S
    //   0	245	0	llllIIllllllll	I
    //   0	245	8	lllIIIllllllll	Ljava/lang/Exception;
    //   0	245	0	IIIIlIllllllll	Ljava/lang/String;
    //   48	197	4	lIlIlIllllllll	I
    //   0	245	1	llIIlIllllllll	Ljava/lang/String;
    //   0	245	5	lllIlIllllllll	F
    //   0	245	1	IlllIIllllllll	Ljava/lang/String;
    //   32	213	2	lIlllIllllllll	Ljava/lang/StringBuilder;
    //   0	245	7	IIlIlIllllllll	D
  }
  
  private static void IlllIlIlIIl() {
    llIllllIl = new int[21];
    llIllllIl[0] = (0xD ^ 0x53 ^ 0xFA ^ 0xAB) & (" ".length() ^ 0x12 ^ 0x1C ^ -" ".length());
    llIllllIl[1] = -"  ".length();
    llIllllIl[2] = " ".length();
    llIllllIl[3] = "  ".length();
    llIllllIl[4] = "   ".length();
    llIllllIl[5] = 54 + 29 - 10 + 82 ^ 134 + 133 - 218 + 110;
    llIllllIl[6] = 9 + 56 - -125 + 9 ^ 38 + 58 - 56 + 154;
    llIllllIl[7] = 0x72 ^ 0x74;
    llIllllIl[8] = 0xCD ^ 0x9E;
    llIllllIl[9] = -(0xDF ^ 0xC0);
    llIllllIl[10] = 0x57 ^ 0x5A;
    llIllllIl[11] = (0xB8 ^ 0xAC) + (0x4D ^ 0x2D) - -(0x91 ^ 0xA8) + (0x94 ^ 0x83);
    llIllllIl[12] = 95 + 15 - 10 + 55;
    llIllllIl[13] = (0xE8 ^ 0x83) + 107 + 55 - 121 + 96 - 97 + 170 - 222 + 184 + 68 + 111 - 129 + 86;
    llIllllIl[14] = 0xDF ^ 0xBB ^ 0x26 ^ 0xF;
    llIllllIl[15] = 167 + 173 - 149 + 18;
    llIllllIl[16] = 30 + 46 - 31 + 114;
    llIllllIl[17] = 135 + 86 - 205 + 152 ^ 10 + 111 - 101 + 141;
    llIllllIl[18] = 0x20 ^ 0x76 ^ 0x16 ^ 0x2E;
    llIllllIl[19] = 18 + 78 - -115 + 30 ^ 152 + 120 - 134 + 40;
    llIllllIl[20] = 0x16 ^ 0x48;
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\Step.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */