package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.XploitClient;
import com.exploiters.xploitclient.event.events.EventTick;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.exploiters.xploitclient.utils.EntityUtils;
import com.exploiters.xploitclient.utils.WorldUtils;
import com.google.common.collect.Streams;
import com.google.common.eventbus.Subscribe;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Base64;
import java.util.Iterator;
import java.util.List;
import java.util.stream.Collectors;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.BlowfishEncryptionAlgorithm;
import net.minecraft.class_1268;
import net.minecraft.class_1297;
import net.minecraft.class_1309;
import net.minecraft.class_1657;
import net.minecraft.class_2596;
import net.minecraft.class_2848;

public class Killaura extends Module {
  private static int IlIlIllIlll(float paramFloat1, float paramFloat2) {
    return paramFloat1 cmp paramFloat2;
  }
  
  public Killaura() {
    super(IlIlIIlIIl[IlIllIlIIl[0]], IlIllIlIIl[1], Category.COMBAT, IlIlIIlIIl[IlIllIlIIl[2]], new com.exploiters.xploitclient.setting.base.SettingBase[IlIllIlIIl[3]]);
  }
  
  private static int lIIlIllIlll(double paramDouble1, double paramDouble2) {
    return paramDouble1 cmp paramDouble2;
  }
  
  private static String llIlIlIIlll(Exception llIllIIlIllll, String llIIIlIlIllll) {
    try {
      SecretKeySpec lIlllIIlIllll = new SecretKeySpec(MessageDigest.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IlIllIlIIl[0]]]).digest(llIIIlIlIllll.getBytes(StandardCharsets.UTF_8)), BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IlIllIlIIl[2]]]);
      Cipher IllllIIlIllll = Cipher.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IlIllIlIIl[4]]]);
      IllllIIlIllll.init(BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IlIllIlIIl[4]], lIlllIIlIllll);
      return new String(IllllIIlIllll.doFinal(Base64.getDecoder().decode(llIllIIlIllll.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception IIIIIlIlIllll) {
      Exception exception1;
      exception1.printStackTrace();
      return null;
    } 
  }
  
  private static int llIlIllIlll(float paramFloat1, float paramFloat2) {
    return paramFloat1 cmp paramFloat2;
  }
  
  private static boolean lIllIllIlll(Exception lIIlIllIIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 <= null);
  }
  
  private static void IlllIlIIlll() {
    IlIlIIlIIl = new String[IlIllIlIIl[11]];
    IlIlIIlIIl[IlIllIlIIl[0]] = llIlIlIIlll("Il9mVnmoLaU5QdIrdgCd/A==", "LpxMu");
    IlIlIIlIIl[IlIllIlIIl[2]] = IIllIlIIlll("NB8FJisUHhgqJxkGCGknAR4QKi0GShQnMhweGCw1", "ujqIF");
    IlIlIIlIIl[IlIllIlIIl[4]] = lIllIlIIlll("3dcEj0OnGjw=", "Prfhu");
    IlIlIIlIIl[IlIllIlIIl[5]] = IIllIlIIlll("FRUjFA==", "XzAgR");
    IlIlIIlIIl[IlIllIlIIl[6]] = IIllIlIIlll("ICciAAwNOg==", "aIKmm");
    IlIlIIlIIl[IlIllIlIIl[7]] = lIllIlIIlll("FAELP2hRpSIg+38Qjv8P2g==", "RPEQy");
    IlIlIIlIIl[IlIllIlIIl[8]] = llIlIlIIlll("3MrBOsTqZ7CSk9OMnU3jNQ==", "CEOtF");
    IlIlIIlIIl[IlIllIlIIl[9]] = lIllIlIIlll("gcMpSxtW76GNKfZuWO6Irg==", "KQkdZ");
    IlIlIIlIIl[IlIllIlIIl[10]] = IIllIlIIlll("MSs6Agg=", "cJTem");
    IlIlIIlIIl[IlIllIlIIl[3]] = lIllIlIIlll("yQ+fp/3L94Y=", "ePfMT");
  }
  
  private static boolean IIIIlllIlll(Exception IIIIlllIIllll, Exception llllIllIIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static boolean IIllIllIlll(long lIllIllIIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static boolean IlllIllIlll(String lllIIllIIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 > null);
  }
  
  private static String IIllIlIIlll(byte lllllllIIllll, String IlIIIIIlIllll) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   43: iconst_0
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   65: iconst_0
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic IIllIllIlll : (I)Z
    //   80: ifeq -> 238
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   131: iconst_0
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   136: bipush #12
    //   138: iaload
    //   139: iadd
    //   140: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   143: bipush #13
    //   145: iaload
    //   146: isub
    //   147: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   150: bipush #14
    //   152: iaload
    //   153: iadd
    //   154: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   157: bipush #15
    //   159: iaload
    //   160: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   163: bipush #16
    //   165: iaload
    //   166: ixor
    //   167: ixor
    //   168: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   171: bipush #17
    //   173: iaload
    //   174: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   177: bipush #18
    //   179: iaload
    //   180: iadd
    //   181: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   184: bipush #19
    //   186: iaload
    //   187: isub
    //   188: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   191: bipush #20
    //   193: iaload
    //   194: iadd
    //   195: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   198: iconst_3
    //   199: iaload
    //   200: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   203: bipush #21
    //   205: iaload
    //   206: iadd
    //   207: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   210: bipush #22
    //   212: iaload
    //   213: isub
    //   214: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   217: bipush #23
    //   219: iaload
    //   220: iadd
    //   221: ixor
    //   222: ldc ' '
    //   224: invokevirtual length : ()I
    //   227: ineg
    //   228: ixor
    //   229: iand
    //   230: invokestatic IIllIllIlll : (I)Z
    //   233: ifeq -> 70
    //   236: aconst_null
    //   237: areturn
    //   238: aload_2
    //   239: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   242: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	243	1	llIIIIIlIllll	Ljava/lang/String;
    //   37	206	3	IllIIIIlIllll	[C
    //   0	243	4	llIllllIIllll	C
    //   90	24	8	lIIlIIIlIllll	C
    //   0	243	5	lllIIIIlIllll	F
    //   0	243	0	IIIIIIIlIllll	Ljava/lang/String;
    //   0	243	8	IlllIIIlIllll	S
    //   0	243	7	IIIllllIIllll	B
    //   0	243	1	IlIIIIIlIllll	Ljava/lang/String;
    //   0	243	0	lllllllIIllll	B
    //   0	243	0	lIIIIIIlIllll	Ljava/lang/String;
    //   48	195	4	lIlIIIIlIllll	I
    //   0	243	2	llIlIIIlIllll	F
    //   0	243	3	IIlllllIIllll	C
    //   0	243	8	lllIlllIIllll	C
    //   0	243	3	IIllIIIlIllll	J
    //   0	243	5	IlIllllIIllll	F
    //   0	243	2	lIlllllIIllll	Z
    //   0	243	6	lIIllllIIllll	S
    //   0	243	6	IIIlIIIlIllll	S
    //   0	243	7	IIlIIIIlIllll	D
    //   32	211	2	lIllIIIlIllll	Ljava/lang/StringBuilder;
    //   0	243	1	IllllllIIllll	C
    //   0	243	4	IlIlIIIlIllll	S
  }
  
  private static boolean lIIIlllIlll(float IIlIlllIIllll, byte llIIlllIIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 <= SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static boolean llllIllIlll(boolean llIlIllIIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  static {
    IIIlIllIlll();
    IlllIlIIlll();
  }
  
  private static String lIllIlIIlll(String IIllIlIlIllll, char llIlIlIlIllll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   36: iconst_2
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   51: iconst_4
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   68: iconst_5
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/module/mods/Killaura.IlIllIlIIl : [I
    //   83: iconst_5
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	1	IIlIllIlIllll	F
    //   59	59	2	IlIIllIlIllll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	1	llIlIlIlIllll	C
    //   0	125	3	lIIlIlIlIllll	Ljava/lang/Exception;
    //   0	125	0	llIIllIlIllll	J
    //   0	125	2	llllIlIlIllll	C
    //   0	125	0	IIllIlIlIllll	Ljava/lang/String;
    //   119	4	2	lIIIllIlIllll	Ljava/lang/Exception;
    //   76	42	3	IlllIlIlIllll	Ljavax/crypto/Cipher;
    //   0	125	0	lIllIlIlIllll	Ljava/lang/String;
    //   0	125	2	IlIlIlIlIllll	Ljava/lang/String;
    //   0	125	3	lIlIllIlIllll	I
    //   0	125	1	IIIIllIlIllll	Ljava/lang/String;
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  private static void IIIlIllIlll() {
    IlIllIlIIl = new int[24];
    IlIllIlIIl[0] = (0x7C ^ 0x6B) & (0x21 ^ 0x36 ^ 0xFFFFFFFF);
    IlIllIlIIl[1] = -"  ".length();
    IlIllIlIIl[2] = " ".length();
    IlIllIlIIl[3] = 0x23 ^ 0x2A;
    IlIllIlIIl[4] = "  ".length();
    IlIllIlIIl[5] = "   ".length();
    IlIllIlIIl[6] = 0x32 ^ 0x36;
    IlIllIlIIl[7] = 0x72 ^ 0x77;
    IlIllIlIIl[8] = 0xF3 ^ 0xA5 ^ 0xD4 ^ 0x84;
    IlIllIlIIl[9] = 0x36 ^ 0x68 ^ 0xDA ^ 0x83;
    IlIllIlIIl[10] = 0xD2 ^ 0xC2 ^ 0xDF ^ 0xC7;
    IlIllIlIIl[11] = 0x25 ^ 0x2F;
    IlIllIlIIl[12] = 0x10 ^ 0x43;
    IlIllIlIIl[13] = -(0x51 ^ 0x5A ^ 0x87 ^ 0x93);
    IlIllIlIIl[14] = 0xFC ^ 0x84 ^ 0xFE ^ 0x8B;
    IlIllIlIIl[15] = 105 + 94 - 121 + 54 + "   ".length() - (0xA5 ^ 0xB3) + (0x7D ^ 0x2E);
    IlIllIlIIl[16] = (0xD5 ^ 0xA5) + (0xDD ^ 0x88) - (0x7A ^ 0x4C) + (0x9F ^ 0x93);
    IlIllIlIIl[17] = (0x1D ^ 0x42) + (0x8F ^ 0xB9) - (0xC7 ^ 0x9F) + (0x55 ^ 0xF);
    IlIllIlIIl[18] = 0x4 ^ 0x49;
    IlIllIlIIl[19] = (0xE2 ^ 0x8B) + 137 + 71 - 117 + 71 - (0x74 ^ 0x48) + "  ".length();
    IlIllIlIIl[20] = (0x6D ^ 0x29) + (0xFD ^ 0xC0) - (0x31 ^ 0x24) + (0x34 ^ 0x7);
    IlIllIlIIl[21] = 0xD ^ 0x63;
    IlIllIlIIl[22] = 0x33 ^ 0x70;
    IlIllIlIIl[23] = 0x22 ^ 0x7C;
  }
  
  @Subscribe
  public void onTick(EventTick lIIIlIllIllll) {
    this.delay += IlIllIlIIl[2];
    int IIIIlIllIllll = (int)Math.round(20.0D / getSetting(IlIllIlIIl[10]).asSlider().getValue());
    List<class_1297> llllIIllIllll = (List<class_1297>)Streams.stream(this.mc.field_1687.method_18112()).filter(IIllllIlIllll -> {
          if ((IIllIllIlll(IIllllIlIllll instanceof class_1657) && IIllIllIlll((getSetting(IlIllIlIIl[0]).asToggle()).state) && !IIllIllIlll(XploitClient.friendMang.has(IIllllIlIllll.method_5477().method_10851()))) || (IIllIllIlll(IIllllIlIllll instanceof net.minecraft.class_1569) && !llllIllIlll((getSetting(IlIllIlIIl[2]).asToggle()).state)) || (IIllIllIlll(EntityUtils.isAnimal(IIllllIlIllll)) && !llllIllIlll((getSetting(IlIllIlIIl[4]).asToggle()).state)) || (IIllIllIlll(IIllllIlIllll instanceof net.minecraft.class_1531) && IIllIllIlll((getSetting(IlIllIlIIl[5]).asToggle()).state))) {
            "".length();
            if (-" ".length() != -" ".length())
              return (0xE3 ^ 0x94 ^ 0x99 ^ 0xA6) & (0x75 ^ 0x50 ^ 0xC ^ 0x61 ^ -" ".length()); 
          } else {
          
          } 
          return IlIllIlIIl[0];
        }).sorted((lIIIIIllIllll, llIIIIllIllll) -> {
          // Byte code:
          //   0: aload_1
          //   1: aload_0
          //   2: getfield mc : Lnet/minecraft/class_310;
          //   5: getfield field_1724 : Lnet/minecraft/class_746;
          //   8: invokevirtual method_5739 : (Lnet/minecraft/class_1297;)F
          //   11: aload_2
          //   12: aload_0
          //   13: getfield mc : Lnet/minecraft/class_310;
          //   16: getfield field_1724 : Lnet/minecraft/class_746;
          //   19: invokevirtual method_5739 : (Lnet/minecraft/class_1297;)F
          //   22: invokestatic compare : (FF)I
          //   25: ireturn
          // Local variable table:
          //   start	length	slot	name	descriptor
          //   0	26	1	IIlIIIllIllll	Lnet/minecraft/class_1297;
          //   0	26	2	IIIIIIllIllll	C
          //   0	26	0	lIlIIIllIllll	Lcom/exploiters/xploitclient/module/mods/Killaura;
          //   0	26	0	IlIIIIllIllll	J
          //   0	26	2	llIIIIllIllll	Lnet/minecraft/class_1297;
          //   0	26	1	lIIIIIllIllll	F
        }).collect(Collectors.toList());
    Iterator<class_1297> iterator = llllIIllIllll.iterator();
    while (IIllIllIlll(iterator.hasNext())) {
      class_1297 llIIlIllIllll = iterator.next();
      if (lIllIllIlll(lIIlIllIlll(this.mc.field_1724.method_5739(llIIlIllIllll), getSetting(IlIllIlIIl[9]).asSlider().getValue())) && IlllIllIlll(IlIlIllIlll(((class_1309)llIIlIllIllll).method_6032(), 0.0F)) && llllIllIlll(llIIlIllIllll.method_5820().equals(this.mc.method_1548().method_1676())) && IIIIlllIlll(llIIlIllIllll, this.mc.field_1724.method_5854())) {
        if (llllIllIlll(this.mc.field_1724.method_6057(llIIlIllIllll)) && llllIllIlll((getSetting(IlIllIlIIl[7]).asToggle()).state)) {
          "".length();
          if ((94 + 38 - 11 + 11 ^ 85 + 49 - 37 + 31) <= "  ".length())
            return; 
          continue;
        } 
        if (IIllIllIlll((getSetting(IlIllIlIIl[6]).asRotate()).state))
          WorldUtils.facePosAuto(llIIlIllIllll.method_23317(), llIIlIllIllll.method_23318() + (llIIlIllIllll.method_17682() / 2.0F), llIIlIllIllll.method_23321(), getSetting(IlIllIlIIl[6]).asRotate()); 
        if (((!lIIIlllIlll(this.delay, IIIIlIllIllll) || llllIllIlll(IIIIlIllIllll)) && !IIllIllIlll((getSetting(IlIllIlIIl[8]).asToggle()).state)) || (llllIllIlll(llIlIllIlll(this.mc.field_1724.method_7261(this.mc.method_1488()), 1.0F)) && IIllIllIlll((getSetting(IlIllIlIIl[8]).asToggle()).state))) {
          boolean IIlIlIllIllll = this.mc.field_1724.method_5624();
          if (IIllIllIlll(IIlIlIllIllll))
            this.mc.field_1724.field_3944.method_2883((class_2596)new class_2848((class_1297)this.mc.field_1724, class_2848.class_2849.field_12985)); 
          this.mc.field_1761.method_2918((class_1657)this.mc.field_1724, llIIlIllIllll);
          this.mc.field_1724.method_6104(class_1268.field_5808);
          if (IIllIllIlll(IIlIlIllIllll))
            this.mc.field_1724.field_3944.method_2883((class_2596)new class_2848((class_1297)this.mc.field_1724, class_2848.class_2849.field_12981)); 
          this.delay = IlIllIlIIl[0];
        } 
        "".length();
        if (-" ".length() < -" ".length())
          return; 
      } 
    } 
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\Killaura.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */