package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventTick;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.exploiters.xploitclient.utils.FabricReflect;
import com.google.common.eventbus.Subscribe;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;
import net.minecraft.class_2664;
import net.minecraft.class_2743;

public class NoVelocity extends Module {
  private static String lllIIllIl(short IIIlIIlllllIIll, String IIIIlIlllllIIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/NoVelocity.lIIIlll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/NoVelocity.lIIIlll : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/NoVelocity.lIIIlll : [I
    //   56: iconst_4
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/NoVelocity.lIIIlll : [I
    //   71: iconst_4
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	1	lIIlIIlllllIIll	Ljava/lang/Exception;
    //   107	4	2	lIllIIlllllIIll	Ljava/lang/Exception;
    //   0	113	2	IllIIIlllllIIll	B
    //   0	113	0	IlllIIlllllIIll	Ljava/lang/String;
    //   0	113	3	lIlIIIlllllIIll	Z
    //   0	113	0	IIIlIIlllllIIll	S
    //   0	113	3	llllIIlllllIIll	I
    //   64	42	3	llIlIIlllllIIll	Ljavax/crypto/Cipher;
    //   47	59	2	IlIlIIlllllIIll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	113	1	IIIIlIlllllIIll	Ljava/lang/String;
    //   0	113	1	lllIIIlllllIIll	S
    //   0	113	2	IIllIIlllllIIll	Ljava/lang/Exception;
    //   0	113	0	lIIIlIlllllIIll	S
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  public NoVelocity() {
    super(llllIll[lIIIlll[0]], lIIIlll[1], Category.PLAYER, llllIll[lIIIlll[2]], new com.exploiters.xploitclient.setting.base.SettingBase[lIIIlll[3]]);
  }
  
  private static void llIIlllIl() {
    lIIIlll = new int[45];
    lIIIlll[0] = (0x79 ^ 0x9 ^ 0 + 4 - -42 + 81) & (0x44 ^ 0x67 ^ 0x62 ^ 0x4E ^ -" ".length());
    lIIIlll[1] = -"  ".length();
    lIIIlll[2] = " ".length();
    lIIIlll[3] = 0x58 ^ 0x60 ^ 0x10 ^ 0x2C;
    lIIIlll[4] = "  ".length();
    lIIIlll[5] = "   ".length();
    lIIIlll[6] = 0x4B ^ 0x4E;
    lIIIlll[7] = 0x54 ^ 0x52;
    lIIIlll[8] = 0x15 ^ 0x12;
    lIIIlll[9] = 0x8B ^ 0x83;
    lIIIlll[10] = 0x96 ^ 0x9F;
    lIIIlll[11] = 152 + 63 - 90 + 64 ^ 24 + 80 - -19 + 60;
    lIIIlll[12] = 0x76 ^ 0x7D;
    lIIIlll[13] = 0x2B ^ 0x7A ^ 0x2B ^ 0x76;
    lIIIlll[14] = 0xA5 ^ 0xA8;
    lIIIlll[15] = 0x46 ^ 0x48;
    lIIIlll[16] = 0x9 ^ 0x6;
    lIIIlll[17] = 0xAE ^ 0xBE;
    lIIIlll[18] = 0xA8 ^ 0xB9;
    lIIIlll[19] = 9 + 17 - 3 + 124 ^ 28 + 105 - 74 + 70;
    lIIIlll[20] = 0x43 ^ 0x50;
    lIIIlll[21] = 0x2A ^ 0x3E;
    lIIIlll[22] = 0x67 ^ 0x72;
    lIIIlll[23] = 0xB1 ^ 0x9E ^ 0x70 ^ 0x49;
    lIIIlll[24] = 0xD5 ^ 0xB7 ^ 0xC0 ^ 0xB5;
    lIIIlll[25] = 117 + 121 - 132 + 27 ^ 28 + 105 - 50 + 74;
    lIIIlll[26] = 0xCE ^ 0x88 ^ 0xC3 ^ 0x9C;
    lIIIlll[27] = 0x41 ^ 0x5B;
    lIIIlll[28] = 0xAA ^ 0xB1;
    lIIIlll[29] = 0x6A ^ 0x6E ^ 0x47 ^ 0x5F;
    lIIIlll[30] = 175 + 176 - 234 + 61 ^ 145 + 118 - 188 + 100;
    lIIIlll[31] = 83 + 86 - 107 + 111 ^ 88 + 7 - -15 + 69;
    lIIIlll[32] = 0x75 ^ 0x49 ^ 0x60 ^ 0x43;
    lIIIlll[33] = 0xE7 ^ 0xC7;
    lIIIlll[34] = 0x1D ^ 0x4E;
    lIIIlll[35] = -(123 + 132 - 186 + 103 ^ 120 + 85 - 191 + 165);
    lIIIlll[36] = 59 + 166 - 140 + 111;
    lIIIlll[37] = 91 + 141 - 100 + 23;
    lIIIlll[38] = 87 + 111 - 143 + 96;
    lIIIlll[39] = 0x1D ^ 0x50;
    lIIIlll[40] = 6 + 95 - 13 + 121;
    lIIIlll[41] = (0x8D ^ 0x95) + 80 + 131 - 145 + 91 - 50 + 53 - -3 + 24 + (0xCC ^ 0xA0);
    lIIIlll[42] = 0x10 ^ 0x5C ^ 0x3F ^ 0x1D;
    lIIIlll[43] = 0xD0 ^ 0x93;
    lIIIlll[44] = 0xE6 ^ 0xB8;
  }
  
  public void onDisable() {
    this.mc.field_1724.field_5968 = 0.0F;
    super.onDisable();
  }
  
  private static void IIIIlllIl() {
    llllIll = new String[lIIIlll[33]];
    llllIll[lIIIlll[0]] = lIlIIllIl("EWhzvvnaaOtOQoLlGvHmmA==", "aqCil");
    llllIll[lIIIlll[2]] = IllIIllIl("LRFJHwYRVx0HAgFXGgkEAVcNBwQFEAxKSR0YHEYNCxlOEkkJGB8DRw==", "dwifi");
    llllIll[lIIIlll[4]] = lIlIIllIl("FOyui+J2tDEGabxFpizavw==", "EwmFa");
    llllIll[lIIIlll[5]] = IllIIllIl("CzEGIxM8J0I9HjY3CTQROj9CMAI2OUI5BDExEHYVNyALIhUq", "YTbVp");
    llllIll[lIIIlll[3]] = IllIIllIl("AR8YKh0=", "WztrG");
    llllIll[lIIIlll[6]] = lllIIllIl("sqfTdL+9YkS5/Zysxx6oVGRkG02kt3W4i4c8lc1pX8g=", "xGhhZ");
    llllIll[lIIIlll[7]] = IllIIllIl("BjU8HQ==", "PPPDg");
    llllIll[lIIIlll[8]] = IllIIllIl("JD0FRx8ZMRpHBAkgBg4RDT5SERcAPREOBhU=", "lRrgr");
    llllIll[lIIIlll[9]] = lIlIIllIl("/pfB6MGNLA2WGHf/dKbb7g==", "wUXJY");
    llllIll[lIIIlll[10]] = lllIIllIl("55paZrJDUl5dz4shpVBbxi2TJxYYXWYIj0Wuxq1H+Gk=", "WkKXs");
    llllIll[lIIIlll[11]] = lllIIllIl("eIhRvSlf2f4=", "zgClu");
    llllIll[lIIIlll[12]] = lIlIIllIl("n2eLzSOY15T8w7n+h2qqejA59pukP/7kb8UG+yhtIag=", "ikAFm");
    llllIll[lIIIlll[13]] = lllIIllIl("bygCsezro/c=", "RrIAH");
    llllIll[lIIIlll[14]] = lllIIllIl("gmYGb7LpANPSO5DMfmCKWP2pIGdaJtE4MoirujRrUfY=", "xJFlr");
    llllIll[lIIIlll[15]] = IllIIllIl("FDocJTkqKA==", "DOoMP");
    llllIll[lIIIlll[16]] = lllIIllIl("vyPBUz4+G34SocD6cpD0ZciFgnCcZpmI9MjrcQn1SRhzGCtOJ+WiiYj25Ms44d+5", "Psedr");
    llllIll[lIIIlll[17]] = lIlIIllIl("h3mNRzPOgvM=", "LBPiV");
    llllIll[lIIIlll[18]] = lIlIIllIl("QL99OoFFT62gPF9RS7h0FaJxeN7diWqbR5tSBobWV/k=", "wGBcb");
    llllIll[lIIIlll[19]] = lIlIIllIl("46GaziQPkDc=", "aTmeZ");
    llllIll[lIIIlll[20]] = lllIIllIl("NhTjOP1XYMTLqhFOIvTeZWJVE39aBMYRSGuYbQkxEo2bHEFN8rXocrPDgtp3Ooc5", "xJNUO");
    llllIll[lIIIlll[21]] = lIlIIllIl("pOKKcUiHvGLq1K/6Q815lw==", "vpnVl");
    llllIll[lIIIlll[22]] = lIlIIllIl("iSSKh6Rt73juk1SCXTC7/g==", "XanWJ");
    llllIll[lIIIlll[23]] = lIlIIllIl("O46TFhuM5lf0Q8hc1pDaxQ==", "EhEFj");
    llllIll[lIIIlll[24]] = lIlIIllIl("WSnOTjruhgQF1qmrseLYAA==", "WjPOb");
    llllIll[lIIIlll[25]] = lllIIllIl("MGvhn4nsMA0F0RGnFPzvZQ==", "JCNYf");
    llllIll[lIIIlll[26]] = IllIIllIl("GA84JBIHHi0R", "njTKq");
    llllIll[lIIIlll[27]] = lllIIllIl("1ZNKapWpJE7g92hu49Qi7w==", "vneJo");
    llllIll[lIIIlll[28]] = lllIIllIl("apn7gB1R5D1XjNI7nRHWKw==", "nUlpO");
    llllIll[lIIIlll[29]] = lIlIIllIl("9NMV4Qhj4z6XTLCa5s0PEw==", "XPCTa");
    llllIll[lIIIlll[30]] = IllIIllIl("HyYvKCMdHCs9KQwjOigf", "oJNQF");
    llllIll[lIIIlll[31]] = lIlIIllIl("sXiZvO0isB/kxVNmgAIIPQ==", "CktGq");
    llllIll[lIIIlll[32]] = lIlIIllIl("0Mps5SRlNcTtqlFn/feqGQ==", "hAkKN");
  }
  
  @Subscribe
  public void readPacket(boolean lIIllIlllllIIll) {
    if (lIlIlllIl(this.mc.field_1724))
      return; 
    if (IIlIlllIl(lIIllIlllllIIll.getPacket() instanceof class_2743) && IIlIlllIl((getSetting(lIIIlll[0]).asToggle()).state)) {
      class_2743 IIIIIllllllIIll = (class_2743)lIIllIlllllIIll.getPacket();
      if (IllIlllIl(IIIIIllllllIIll.method_11818(), this.mc.field_1724.method_5628())) {
        double IlIIIllllllIIll = getSetting(lIIIlll[0]).asToggle().getChild(lIIIlll[0]).asSlider().getValue() / 100.0D;
        double lIIIIllllllIIll = getSetting(lIIIlll[0]).asToggle().getChild(lIIIlll[2]).asSlider().getValue() / 100.0D;
        FabricReflect.writeField(IIIIIllllllIIll, Integer.valueOf((int)(IIIIIllllllIIll.method_11815() * IlIIIllllllIIll)), llllIll[lIIIlll[21]], llllIll[lIIIlll[22]]);
        FabricReflect.writeField(IIIIIllllllIIll, Integer.valueOf((int)(IIIIIllllllIIll.method_11816() * lIIIIllllllIIll)), llllIll[lIIIlll[23]], llllIll[lIIIlll[24]]);
        FabricReflect.writeField(IIIIIllllllIIll, Integer.valueOf((int)(IIIIIllllllIIll.method_11819() * IlIIIllllllIIll)), llllIll[lIIIlll[25]], llllIll[lIIIlll[26]]);
      } 
      "".length();
      if (" ".length() == "  ".length())
        return; 
    } else if (IIlIlllIl(lIIllIlllllIIll.getPacket() instanceof class_2664) && IIlIlllIl((getSetting(lIIIlll[2]).asToggle()).state)) {
      class_2664 lllllIlllllIIll = (class_2664)lIIllIlllllIIll.getPacket();
      double IllllIlllllIIll = getSetting(lIIIlll[2]).asToggle().getChild(lIIIlll[0]).asSlider().getValue() / 100.0D;
      double lIlllIlllllIIll = getSetting(lIIIlll[2]).asToggle().getChild(lIIIlll[2]).asSlider().getValue() / 100.0D;
      FabricReflect.writeField(lIIllIlllllIIll.getPacket(), Float.valueOf((float)(lllllIlllllIIll.method_11472() * IllllIlllllIIll)), llllIll[lIIIlll[27]], llllIll[lIIIlll[28]]);
      FabricReflect.writeField(lIIllIlllllIIll.getPacket(), Float.valueOf((float)(lllllIlllllIIll.method_11473() * lIlllIlllllIIll)), llllIll[lIIIlll[29]], llllIll[lIIIlll[30]]);
      FabricReflect.writeField(lIIllIlllllIIll.getPacket(), Float.valueOf((float)(lllllIlllllIIll.method_11474() * IllllIlllllIIll)), llllIll[lIIIlll[31]], llllIll[lIIIlll[32]]);
    } 
  }
  
  private static boolean IllIlllIl(boolean IIIIlIIllllIIll, boolean llllIIIllllIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static boolean lIlIlllIl(String lIllIIIllllIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  static {
    llIIlllIl();
    IIIIlllIl();
  }
  
  private static String IllIIllIl(String lIlllIIllllIIll, String lllllIIllllIIll) {
    IIlllIIllllIIll = new String(Base64.getDecoder().decode(lIlllIIllllIIll.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder lIIlIlIllllIIll = new StringBuilder();
    char[] IlIIIlIllllIIll = lllllIIllllIIll.toCharArray();
    int lIIIIlIllllIIll = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lIIIlll[0]];
    char[] arrayOfChar1 = IIlllIIllllIIll.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lIIIlll[0]];
    while (IIlIlllIl(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char lIlIIlIllllIIll = arrayOfChar1[j];
      "".length();
      lIIIIlIllllIIll++;
      j++;
      "".length();
      if (IIlIlllIl((lIIIlll[0] + lIIIlll[34] - lIIIlll[35] + lIIIlll[14] ^ lIIIlll[36] ^ lIIIlll[37]) & (lIIIlll[38] + lIIIlll[39] - lIIIlll[40] + lIIIlll[41] ^ lIIIlll[10] + lIIIlll[42] - lIIIlll[43] + lIIIlll[44] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(lIIlIlIllllIIll);
  }
  
  private static boolean IIlIlllIl(long llIlIIIllllIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static String lIlIIllIl(double lllIllIllllIIll, char IlIlllIllllIIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/NoVelocity.lIIIlll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/module/mods/NoVelocity.lIIIlll : [I
    //   36: iconst_2
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/module/mods/NoVelocity.lIIIlll : [I
    //   51: iconst_4
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/module/mods/NoVelocity.lIIIlll : [I
    //   68: iconst_5
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/module/mods/NoVelocity.lIIIlll : [I
    //   83: iconst_5
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	2	IlIlllIllllIIll	C
    //   119	4	2	IIllllIllllIIll	Ljava/lang/Exception;
    //   0	125	1	llllllIllllIIll	F
    //   0	125	0	IlllllIllllIIll	J
    //   59	59	2	lIllllIllllIIll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	0	lllIllIllllIIll	D
    //   0	125	3	IIIIIIlllllIIll	I
    //   0	125	1	llIlllIllllIIll	Ljava/lang/String;
    //   0	125	0	IIIlllIllllIIll	Ljava/lang/String;
    //   0	125	1	IllIllIllllIIll	Ljava/lang/Exception;
    //   76	42	3	lIIlllIllllIIll	Ljavax/crypto/Cipher;
    //   0	125	3	IIlIllIllllIIll	D
    //   0	125	2	lIlIllIllllIIll	Z
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  @Subscribe
  public void onTick(EventTick lIIlIllllllIIll) {
    if (IIlIlllIl((getSetting(lIIIlll[4]).asToggle()).state))
      this.mc.field_1724.field_5968 = (float)(1.0D - getSetting(lIIIlll[4]).asToggle().getChild(lIIIlll[0]).asSlider().getValue() / 100.0D); 
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\NoVelocity.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */