package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventTick;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.google.common.eventbus.Subscribe;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;
import net.minecraft.class_2338;
import net.minecraft.class_2350;
import net.minecraft.class_2596;
import net.minecraft.class_2828;
import net.minecraft.class_2846;

public class OffhandCrash extends Module {
  @Subscribe
  private void EventDisconnect(Exception lllIIIllIIIIIIl) {
    if (IIIIIlIlIIl(lllIIIllIIIIIIl.getPacket() instanceof net.minecraft.class_2661) && IIIIIlIlIIl((getSetting(lllIlllIl[4]).asToggle()).state))
      setToggled(lllIlllIl[0]); 
  }
  
  private static String lIIllIIlIIl(char IIIlIlIlIIIIIIl, float IIIIllIlIIIIIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/OffhandCrash.lllIlllIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/module/mods/OffhandCrash.lllIlllIl : [I
    //   36: iconst_2
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/module/mods/OffhandCrash.lllIlllIl : [I
    //   51: iconst_4
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/module/mods/OffhandCrash.lllIlllIl : [I
    //   68: iconst_3
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/module/mods/OffhandCrash.lllIlllIl : [I
    //   83: iconst_3
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	0	lIIlIlIlIIIIIIl	Ljava/lang/String;
    //   59	59	2	IlllIlIlIIIIIIl	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	3	lIIIllIlIIIIIIl	I
    //   0	125	0	IIIlIlIlIIIIIIl	C
    //   0	125	0	llllIlIlIIIIIIl	J
    //   0	125	1	lllIIlIlIIIIIIl	Ljava/lang/String;
    //   0	125	1	IIIIllIlIIIIIIl	F
    //   0	125	2	llIlIlIlIIIIIIl	C
    //   0	125	1	IIllIlIlIIIIIIl	Ljava/lang/String;
    //   0	125	2	IllIIlIlIIIIIIl	J
    //   119	4	2	lIllIlIlIIIIIIl	Ljava/lang/Exception;
    //   0	125	3	lIlIIlIlIIIIIIl	C
    //   76	42	3	IlIlIlIlIIIIIIl	Ljavax/crypto/Cipher;
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  private static String IlIllIIlIIl(Exception lIIlllIlIIIIIIl, byte IIIlllIlIIIIIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/OffhandCrash.lllIlllIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/OffhandCrash.lllIlllIl : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/OffhandCrash.lllIlllIl : [I
    //   56: iconst_4
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/OffhandCrash.lllIlllIl : [I
    //   71: iconst_4
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	1	lIIIIIllIIIIIIl	Ljava/lang/String;
    //   0	113	2	lIllllIlIIIIIIl	Ljava/lang/Exception;
    //   0	113	0	IlIIIIllIIIIIIl	S
    //   0	113	2	lllIllIlIIIIIIl	Ljava/lang/Exception;
    //   0	113	3	IIIIIIllIIIIIIl	I
    //   0	113	1	IIIlllIlIIIIIIl	B
    //   0	113	1	IlIlllIlIIIIIIl	Ljava/lang/Exception;
    //   0	113	0	lIIlllIlIIIIIIl	Ljava/lang/Exception;
    //   0	113	3	IllIllIlIIIIIIl	Ljava/lang/String;
    //   107	4	2	IlllllIlIIIIIIl	Ljava/lang/Exception;
    //   64	42	3	IIllllIlIIIIIIl	Ljavax/crypto/Cipher;
    //   0	113	0	llllllIlIIIIIIl	Ljava/lang/String;
    //   47	59	2	llIlllIlIIIIIIl	Ljavax/crypto/spec/SecretKeySpec;
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  static {
    lIlllIIlIIl();
    IIlllIIlIIl();
  }
  
  private static String llIllIIlIIl(String IlllIIIlIIIIIIl, String IIIIlIIlIIIIIIl) {
    IIllIIIlIIIIIIl = new String(Base64.getDecoder().decode(IlllIIIlIIIIIIl.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder IlIllIIlIIIIIIl = new StringBuilder();
    char[] llIIlIIlIIIIIIl = IIIIlIIlIIIIIIl.toCharArray();
    int IlIIlIIlIIIIIIl = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lllIlllIl[0]];
    char[] arrayOfChar1 = IIllIIIlIIIIIIl.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lllIlllIl[0]];
    while (IIIIIlIlIIl(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char IllIlIIlIIIIIIl = arrayOfChar1[j];
      "".length();
      IlIIlIIlIIIIIIl++;
      j++;
      "".length();
      if (IIIIIlIlIIl((lllIlllIl[0] + lllIlllIl[7] - lllIlllIl[8] + lllIlllIl[9] ^ lllIlllIl[10] ^ lllIlllIl[11]) & (lllIlllIl[12] + lllIlllIl[13] - lllIlllIl[14] + lllIlllIl[15] ^ lllIlllIl[16] + lllIlllIl[17] - lllIlllIl[18] + lllIlllIl[19] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(IlIllIIlIIIIIIl);
  }
  
  private static boolean lllllIIlIIl(long IIIIIIIlIIIIIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 < null);
  }
  
  @Subscribe
  public void onTick(EventTick llllIIllIIIIIIl) {
    int lIIIlIllIIIIIIl = lllIlllIl[0];
    while (lllllIIlIIl(IllllIIlIIl(lIIIlIllIIIIIIl, getSetting(lllIlllIl[0]).asSlider().getValue()))) {
      this.mc.field_1724.field_3944.method_2883((class_2596)new class_2846(class_2846.class_2847.field_12969, class_2338.field_10980, class_2350.field_11036));
      if (IIIIIlIlIIl((getSetting(lllIlllIl[2]).asToggle()).state))
        this.mc.field_1724.field_3944.method_2883((class_2596)new class_2828(lllIlllIl[2])); 
      lIIIlIllIIIIIIl++;
      "".length();
      if ((0x97 ^ 0x9C ^ 0x65 ^ 0x6A) < 0)
        return; 
    } 
  }
  
  private static boolean IIIIIlIlIIl(Exception IlIIIIIlIIIIIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  public OffhandCrash() {
    super(IllIlllIl[lllIlllIl[0]], lllIlllIl[1], Category.EXPLOITS, IllIlllIl[lllIlllIl[2]], new com.exploiters.xploitclient.setting.base.SettingBase[lllIlllIl[3]]);
  }
  
  private static int IllllIIlIIl(double paramDouble1, double paramDouble2) {
    return paramDouble1 cmp paramDouble2;
  }
  
  private static void IIlllIIlIIl() {
    IllIlllIl = new String[lllIlllIl[6]];
    IllIlllIl[lllIlllIl[0]] = lIIllIIlIIl("GeNmiV9DvoQyMl/CKbfUPw==", "QXbgJ");
    IllIlllIl[lllIlllIl[2]] = IlIllIIlIIl("hLDi167wD1zH/gU/I/x+HYZ4Mwbv8Y+cmsgMoZdFbHoM9LsbSEfECA==", "KfOBN");
    IllIlllIl[lllIlllIl[4]] = lIIllIIlIIl("43EqYb//9Lphtyf8KAVHgw==", "myCFV");
    IllIlllIl[lllIlllIl[3]] = lIIllIIlIIl("Fge7WHDqC5S6gu1/kNPNtg==", "ZrbIE");
    IllIlllIl[lllIlllIl[5]] = llIllIIlIIl("Iz09JWktLi8=", "bHIJD");
  }
  
  private static void lIlllIIlIIl() {
    lllIlllIl = new int[20];
    lllIlllIl[0] = (0x82 ^ 0xA1) & (0xE3 ^ 0xC0 ^ 0xFFFFFFFF);
    lllIlllIl[1] = -"  ".length();
    lllIlllIl[2] = " ".length();
    lllIlllIl[3] = "   ".length();
    lllIlllIl[4] = "  ".length();
    lllIlllIl[5] = 0x48 ^ 0x4C;
    lllIlllIl[6] = 0x70 ^ 0x75;
    lllIlllIl[7] = 69 + 126 - 29 + 67 ^ 163 + 106 - 223 + 140;
    lllIlllIl[8] = -(0xDD ^ 0xC2);
    lllIlllIl[9] = 0x93 ^ 0x9E;
    lllIlllIl[10] = 9 + 30 - -29 + 128;
    lllIlllIl[11] = (0x8F ^ 0xC7) + 93 + 65 - 90 + 59 - 13 + 121 - 115 + 113 + (0x36 ^ 0x6E);
    lllIlllIl[12] = 38 + 10 - -70 + 33;
    lllIlllIl[13] = 0xF4 ^ 0xB9;
    lllIlllIl[14] = 2 + 135 - -40 + 32;
    lllIlllIl[15] = 109 + 143 - 134 + 41;
    lllIlllIl[16] = 0x37 ^ 0x74 ^ 0x70 ^ 0x3A;
    lllIlllIl[17] = 0x17 ^ 0x3 ^ 0x30 ^ 0x4A;
    lllIlllIl[18] = 0x44 ^ 0x7;
    lllIlllIl[19] = 0x74 ^ 0x34 ^ 0x9C ^ 0x82;
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\OffhandCrash.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */