package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventSendPacket;
import com.exploiters.xploitclient.event.events.EventTick;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.google.common.eventbus.Subscribe;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Base64;
import java.util.Iterator;
import java.util.List;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.BlowfishEncryptionAlgorithm;
import me.superblaubeere27.jobf.processors.encryption.string.DESEncryptionAlgorithm;
import net.minecraft.class_2596;
import net.minecraft.class_2828;

public class FakeLag extends Module {
  @Subscribe
  public void sendPacket(EventSendPacket lIIIIIlIllIIll) {
    // Byte code:
    //   0: aload_1
    //   1: invokevirtual getPacket : ()Lnet/minecraft/class_2596;
    //   4: instanceof net/minecraft/class_2828
    //   7: invokestatic IIllllIllIl : (I)Z
    //   10: ifeq -> 53
    //   13: aload_1
    //   14: invokevirtual getPacket : ()Lnet/minecraft/class_2596;
    //   17: instanceof net/minecraft/class_2828$class_2829
    //   20: invokestatic IIllllIllIl : (I)Z
    //   23: ifeq -> 53
    //   26: aload_1
    //   27: invokevirtual getPacket : ()Lnet/minecraft/class_2596;
    //   30: instanceof net/minecraft/class_2828$class_2831
    //   33: invokestatic IIllllIllIl : (I)Z
    //   36: ifeq -> 53
    //   39: aload_1
    //   40: invokevirtual getPacket : ()Lnet/minecraft/class_2596;
    //   43: instanceof net/minecraft/class_2828$class_2830
    //   46: invokestatic IIllllIllIl : (I)Z
    //   49: ifeq -> 53
    //   52: return
    //   53: aload_0
    //   54: getfield queue : Ljava/util/List;
    //   57: aload_1
    //   58: invokevirtual getPacket : ()Lnet/minecraft/class_2596;
    //   61: checkcast net/minecraft/class_2828
    //   64: invokeinterface add : (Ljava/lang/Object;)Z
    //   69: ldc ''
    //   71: invokevirtual length : ()I
    //   74: pop2
    //   75: aload_1
    //   76: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   79: iconst_2
    //   80: iaload
    //   81: invokevirtual setCancelled : (Z)V
    //   84: return
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	85	1	llllllIIllIIll	Z
    //   0	85	0	IlIIIIlIllIIll	Lcom/exploiters/xploitclient/module/mods/FakeLag;
    //   0	85	1	lIIIIIlIllIIll	Lcom/exploiters/xploitclient/event/events/EventSendPacket;
    //   0	85	0	IIIIIIlIllIIll	I
  }
  
  private static boolean IlllllIllIl(long IlllIlIlIlIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static boolean IIllllIllIl(String IIllIlIlIlIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  private static String lllllIllll(String lIlIlIIIllIIll, String IIIllIIIllIIll) {
    try {
      SecretKeySpec IlIllIIIllIIll = new SecretKeySpec(Arrays.copyOf(MessageDigest.getInstance(DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[IlIlIIlll[0]]]).digest(IIIllIIIllIIll.getBytes(StandardCharsets.UTF_8)), DESEncryptionAlgorithm.lIlllllIlllII[IlIlIIlll[2]]), DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[IlIlIIlll[4]]]);
      Cipher IllIlIIIllIIll = Cipher.getInstance(DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[IlIlIIlll[5]]]);
      IllIlIIIllIIll.init(DESEncryptionAlgorithm.lIlllllIlllII[IlIlIIlll[5]], IlIllIIIllIIll);
      return new String(IllIlIIIllIIll.doFinal(Base64.getDecoder().decode(lIlIlIIIllIIll.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception lIIllIIIllIIll) {
      Exception exception1;
      exception1.printStackTrace();
      return null;
    } 
  }
  
  private static boolean IIIIIIlllIl(boolean lIIIllIlIlIIll, short IIIIllIlIlIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static int lIllllIllIl(double paramDouble1, double paramDouble2) {
    return paramDouble1 cmp paramDouble2;
  }
  
  static {
    llIlllIllIl();
    IIIIIlllll();
  }
  
  public void sendPackets() {
    Iterator<?> iterator = (new ArrayList(this.queue)).iterator();
    while (IlllllIllIl(iterator.hasNext())) {
      class_2828 lllIllIIllIIll = (class_2828)iterator.next();
      if (IlllllIllIl(lllIllIIllIIll instanceof class_2828.class_2831)) {
        "".length();
        if (" ".length() < 0)
          return; 
        continue;
      } 
      this.mc.field_1724.field_3944.method_2883((class_2596)lllIllIIllIIll);
      "".length();
      if ("   ".length() <= 0)
        return; 
    } 
    this.queue.clear();
  }
  
  private static void llIlllIllIl() {
    IlIlIIlll = new int[23];
    IlIlIIlll[0] = (215 + 175 - 167 + 27 ^ 96 + 132 - 108 + 41) & (0x48 ^ 0x41 ^ 0x20 ^ 0x72 ^ -" ".length());
    IlIlIIlll[1] = -"  ".length();
    IlIlIIlll[2] = " ".length();
    IlIlIIlll[3] = 0x14 ^ 0x28 ^ 0x79 ^ 0x41;
    IlIlIIlll[4] = "  ".length();
    IlIlIIlll[5] = "   ".length();
    IlIlIIlll[6] = 0xB8 ^ 0xBD;
    IlIlIIlll[7] = 124 + 97 - 138 + 83 ^ 6 + 122 - 97 + 129;
    IlIlIIlll[8] = 0x52 ^ 0x2A ^ 21 + 114 - 104 + 96;
    IlIlIIlll[9] = 0x47 ^ 0x4F;
    IlIlIIlll[10] = 148 + 228 - 370 + 231 ^ 147 + 97 - 135 + 81;
    IlIlIIlll[11] = -(0x7 ^ 0x18);
    IlIlIIlll[12] = 0x70 ^ 0x5A ^ 0x1F ^ 0x38;
    IlIlIIlll[13] = 180 + 77 - 128 + 67;
    IlIlIIlll[14] = (0xF5 ^ 0x9C) + (0x78 ^ 0x72) - -"   ".length() + (0xAE ^ 0x8B);
    IlIlIIlll[15] = 41 + 72 - 97 + 135;
    IlIlIIlll[16] = 0x35 ^ 0x78;
    IlIlIIlll[17] = (0x3B ^ 0x77) + (0x7C ^ 0x2B) - (0xEF ^ 0xB4) + 94 + 11 - 61 + 93;
    IlIlIIlll[18] = 70 + 20 - 67 + 136;
    IlIlIIlll[19] = 0xFF ^ 0xA2 ^ 0x28 ^ 0x7C;
    IlIlIIlll[20] = 0x6B ^ 0x5;
    IlIlIIlll[21] = 0xD4 ^ 0x9B ^ 0x6F ^ 0x63;
    IlIlIIlll[22] = 0x6 ^ 0x14 ^ 0xEC ^ 0xA0;
  }
  
  public void onEnable() {
    ((FakeLag)super).startTime = System.currentTimeMillis();
    ((FakeLag)super).queue.clear();
    super.onEnable();
  }
  
  private static String llIllIllll(String llIlIlIIllIIll, String lIllIlIIllIIll) {
    try {
      SecretKeySpec lllIIlIIllIIll = new SecretKeySpec(MessageDigest.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IlIlIIlll[0]]]).digest(lIllIlIIllIIll.getBytes(StandardCharsets.UTF_8)), BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IlIlIIlll[2]]]);
      Cipher IIIlIlIIllIIll = Cipher.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IlIlIIlll[4]]]);
      IIIlIlIIllIIll.init(BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IlIlIIlll[4]], lllIIlIIllIIll);
      return new String(IIIlIlIIllIIll.doFinal(Base64.getDecoder().decode(llIlIlIIllIIll.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception IlIlIlIIllIIll) {
      lIIlIlIIllIIll.printStackTrace();
      return null;
    } 
  }
  
  @Subscribe
  public void onTick(EventTick IIllllIIllIIll) {
    if (IIllllIllIl((getSetting(IlIlIIlll[0]).asMode()).mode)) {
      if (IlllllIllIl((getSetting(IlIlIIlll[2]).asToggle()).state) && llllllIllIl(lIllllIllIl((System.currentTimeMillis() - this.startTime), getSetting(IlIlIIlll[4]).asSlider().getValue() * 1000.0D))) {
        setToggled(IlIlIIlll[0]);
        "".length();
        if (" ".length() < 0)
          return; 
      } 
    } else if (IIIIIIlllIl((getSetting(IlIlIIlll[0]).asMode()).mode, IlIlIIlll[2]) && llllllIllIl(lIllllIllIl((System.currentTimeMillis() - this.startTime), getSetting(IlIlIIlll[5]).asSlider().getValue() * 1000.0D))) {
      setToggled(IlIlIIlll[0]);
      setToggled(IlIlIIlll[2]);
    } 
  }
  
  private static String IllllIllll(long IIllllIlIlIIll, boolean IlIlllIlIlIIll) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   43: iconst_0
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   65: iconst_0
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic IlllllIllIl : (I)Z
    //   80: ifeq -> 239
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   131: iconst_0
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   136: bipush #10
    //   138: iaload
    //   139: iadd
    //   140: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   143: bipush #11
    //   145: iaload
    //   146: isub
    //   147: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   150: bipush #12
    //   152: iaload
    //   153: iadd
    //   154: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   157: bipush #13
    //   159: iaload
    //   160: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   163: bipush #14
    //   165: iaload
    //   166: ixor
    //   167: ixor
    //   168: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   171: bipush #15
    //   173: iaload
    //   174: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   177: bipush #16
    //   179: iaload
    //   180: iadd
    //   181: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   184: bipush #17
    //   186: iaload
    //   187: isub
    //   188: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   191: bipush #18
    //   193: iaload
    //   194: iadd
    //   195: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   198: bipush #19
    //   200: iaload
    //   201: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   204: bipush #20
    //   206: iaload
    //   207: iadd
    //   208: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   211: bipush #21
    //   213: iaload
    //   214: isub
    //   215: getstatic com/exploiters/xploitclient/module/mods/FakeLag.IlIlIIlll : [I
    //   218: bipush #22
    //   220: iaload
    //   221: iadd
    //   222: ixor
    //   223: ldc ' '
    //   225: invokevirtual length : ()I
    //   228: ineg
    //   229: ixor
    //   230: iand
    //   231: invokestatic IlllllIllIl : (I)Z
    //   234: ifeq -> 70
    //   237: aconst_null
    //   238: areturn
    //   239: aload_2
    //   240: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   243: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	244	0	lIllllIlIlIIll	Ljava/lang/String;
    //   0	244	6	IllIllIlIlIIll	F
    //   37	207	3	lllIllllIlIIll	[C
    //   0	244	3	lIIlllIlIlIIll	Ljava/lang/Exception;
    //   0	244	8	IIlIllIlIlIIll	I
    //   0	244	5	IIIlllllIlIIll	F
    //   0	244	5	lllIllIlIlIIll	C
    //   0	244	2	IlIlllIlIlIIll	Z
    //   0	244	0	IIllllIlIlIIll	J
    //   48	196	4	lIlIllllIlIIll	I
    //   0	244	0	IlllllIlIlIIll	Ljava/lang/String;
    //   0	244	7	lIlIllIlIlIIll	S
    //   0	244	6	IlIlllllIlIIll	S
    //   0	244	4	IIIlllIlIlIIll	C
    //   0	244	4	IlllllllIlIIll	S
    //   0	244	3	IIIIIIIIllIIll	J
    //   0	244	7	IIlIllllIlIIll	D
    //   90	24	8	IIllllllIlIIll	C
    //   0	244	1	llllllIlIlIIll	Ljava/lang/String;
    //   0	244	1	llIlllIlIlIIll	J
    //   0	244	1	llIIllllIlIIll	Ljava/lang/String;
    //   0	244	8	IlIIIIIIllIIll	S
    //   32	212	2	lIIIIIIIllIIll	Ljava/lang/StringBuilder;
    //   0	244	2	llllllllIlIIll	F
  }
  
  public void onDisable() {
    super.sendPackets();
    super.onDisable();
  }
  
  private static boolean llllllIllIl(byte IlIlIlIlIlIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 > null);
  }
  
  private static void IIIIIlllll() {
    llllllIIl = new String[IlIlIIlll[9]];
    llllllIIl[IlIlIIlll[0]] = llIllIllll("GaJJuqptX6A=", "NwWPM");
    llllllIIl[IlIlIIlll[2]] = IllllIllll("IBodBAIATgcGRx4BBBMKFgAGVhcSDRkTEwA=", "snrvg");
    llllllIIl[IlIlIIlll[4]] = IllllIllll("LhsuPQ==", "ctJXu");
    llllllIIl[IlIlIIlll[5]] = llIllIllll("oxqtGwm5+Ro=", "GLaUS");
    llllllIIl[IlIlIIlll[3]] = IllllIllll("Ogw2JgM=", "jyZUf");
    llllllIIl[IlIlIIlll[6]] = IllllIllll("BDoMGz8=", "HSarK");
    llllllIIl[IlIlIIlll[7]] = llIllIllll("XV+yMFgMayQ=", "fIGeR");
    llllllIIl[IlIlIIlll[8]] = lllllIllll("lh44BImQtZ8=", "NBRjs");
  }
  
  public FakeLag() {
    super(llllllIIl[IlIlIIlll[0]], IlIlIIlll[1], Category.MOVEMENT, llllllIIl[IlIlIIlll[2]], new com.exploiters.xploitclient.setting.base.SettingBase[IlIlIIlll[3]]);
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\FakeLag.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */