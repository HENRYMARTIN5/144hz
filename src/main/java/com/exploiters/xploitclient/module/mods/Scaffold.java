package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventTick;
import com.exploiters.xploitclient.event.events.EventWorldRender;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.exploiters.xploitclient.utils.WorldUtils;
import com.google.common.eventbus.Subscribe;
import java.util.Arrays;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.Set;
import net.minecraft.class_2338;
import net.minecraft.class_243;
import net.minecraft.class_3675;

public class Scaffold extends Module {
  private static boolean IlIlllIlIIl(float lllIlIIIllllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 < null);
  }
  
  private static boolean lIIlllIlIIl(int lIIllIIIllllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  @Subscribe
  public void onWorldRender(EventWorldRender lIllIIIlllllll) {
    // Byte code:
    //   0: aload_0
    //   1: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   4: bipush #7
    //   6: iaload
    //   7: invokevirtual getSetting : (I)Lcom/exploiters/xploitclient/setting/base/SettingBase;
    //   10: invokevirtual asToggle : ()Lcom/exploiters/xploitclient/setting/base/SettingToggle;
    //   13: getfield state : Z
    //   16: invokestatic IllIllIlIIl : (I)Z
    //   19: ifeq -> 164
    //   22: aload_0
    //   23: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   26: bipush #7
    //   28: iaload
    //   29: invokevirtual getSetting : (I)Lcom/exploiters/xploitclient/setting/base/SettingBase;
    //   32: invokevirtual asToggle : ()Lcom/exploiters/xploitclient/setting/base/SettingToggle;
    //   35: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   38: iconst_0
    //   39: iaload
    //   40: invokevirtual getChild : (I)Lcom/exploiters/xploitclient/setting/base/SettingBase;
    //   43: invokevirtual asColor : ()Lcom/exploiters/xploitclient/setting/base/SettingColor;
    //   46: invokevirtual getRGBFloat : ()[F
    //   49: astore_2
    //   50: aload_0
    //   51: getfield renderBlocks : Ljava/util/Set;
    //   54: invokeinterface iterator : ()Ljava/util/Iterator;
    //   59: astore_3
    //   60: aload_3
    //   61: invokeinterface hasNext : ()Z
    //   66: invokestatic IllIllIlIIl : (I)Z
    //   69: ifeq -> 164
    //   72: aload_3
    //   73: invokeinterface next : ()Ljava/lang/Object;
    //   78: checkcast net/minecraft/class_2338
    //   81: astore #4
    //   83: aload #4
    //   85: aload_2
    //   86: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   89: iconst_0
    //   90: iaload
    //   91: faload
    //   92: aload_2
    //   93: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   96: iconst_2
    //   97: iaload
    //   98: faload
    //   99: aload_2
    //   100: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   103: iconst_4
    //   104: iaload
    //   105: faload
    //   106: ldc 0.7
    //   108: invokestatic drawFilledBox : (Lnet/minecraft/class_2338;FFFF)V
    //   111: aload_2
    //   112: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   115: iconst_0
    //   116: iaload
    //   117: fconst_0
    //   118: aload_2
    //   119: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   122: iconst_0
    //   123: iaload
    //   124: faload
    //   125: ldc 0.01
    //   127: fsub
    //   128: invokestatic max : (FF)F
    //   131: fastore
    //   132: aload_2
    //   133: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   136: iconst_4
    //   137: iaload
    //   138: fconst_1
    //   139: aload_2
    //   140: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   143: iconst_4
    //   144: iaload
    //   145: faload
    //   146: ldc 0.01
    //   148: fadd
    //   149: invokestatic min : (FF)F
    //   152: fastore
    //   153: ldc ''
    //   155: invokevirtual length : ()I
    //   158: pop
    //   159: aconst_null
    //   160: ifnull -> 60
    //   163: return
    //   164: return
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	165	0	IlllIIIlllllll	Lcom/exploiters/xploitclient/module/mods/Scaffold;
    //   0	165	1	lIllIIIlllllll	Lcom/exploiters/xploitclient/event/events/EventWorldRender;
    //   0	165	0	IIllIIIlllllll	I
    //   83	70	4	IIIIlIIlllllll	Lnet/minecraft/class_2338;
    //   0	165	3	IlIlIIIlllllll	B
    //   0	165	2	llIlIIIlllllll	F
    //   50	114	2	llllIIIlllllll	[F
    //   0	165	4	lIIlIIIlllllll	J
  }
  
  private static void IIlIllIlIIl() {
    IIlllllIl = new int[36];
    IIlllllIl[0] = (0x25 ^ 0xC ^ 0xEF ^ 0xA7) & (199 + 28 - -27 + 1 ^ 147 + 80 - 99 + 30 ^ -" ".length());
    IIlllllIl[1] = -"  ".length();
    IIlllllIl[2] = " ".length();
    IIlllllIl[3] = 0x32 ^ 0x3A;
    IIlllllIl[4] = "  ".length();
    IIlllllIl[5] = "   ".length();
    IIlllllIl[6] = 0x31 ^ 0x71 ^ 0xEF ^ 0xAB;
    IIlllllIl[7] = 0x3C ^ 0x3B ^ "  ".length();
    IIlllllIl[8] = 0x3D ^ 0x4A ^ 0x12 ^ 0x63;
    IIlllllIl[9] = 0x13 ^ 0x14;
    IIlllllIl[10] = 0xC8 ^ 0xC1;
    IIlllllIl[11] = 0x57 ^ 0x5D;
    IIlllllIl[12] = 0xE5 ^ 0xBF ^ 0x67 ^ 0x36;
    IIlllllIl[13] = 0xCD ^ 0xC1;
    IIlllllIl[14] = 0xCF ^ 0xC2;
    IIlllllIl[15] = 0x0 ^ 0xE;
    IIlllllIl[16] = 0x1E ^ 0x11;
    IIlllllIl[17] = 0xAF ^ 0xBF;
    IIlllllIl[18] = 150 + 11 - 66 + 63 ^ 133 + 0 - 0 + 10;
    IIlllllIl[19] = 0x54 ^ 0x46;
    IIlllllIl[20] = 0x19 ^ 0x52 ^ 0xF2 ^ 0xAA;
    IIlllllIl[21] = 0x5E ^ 0x62 ^ 0x48 ^ 0x60;
    IIlllllIl[22] = 46 + 44 - -29 + 17 ^ 156 + 34 - 93 + 60;
    IIlllllIl[23] = -" ".length();
    IIlllllIl[24] = 0x18 ^ 0xE;
    IIlllllIl[25] = 173 + 160 - 330 + 196 ^ 137 + 138 - 165 + 38;
    IIlllllIl[26] = -(0x85 ^ 0x9A);
    IIlllllIl[27] = 51 + 95 - 29 + 22 + (0xDC ^ 0xC4) - 84 + 112 - 188 + 133 + 151 + 96 - 147 + 74;
    IIlllllIl[28] = (0x4 ^ 0xF) + (0x92 ^ 0x9F) - (0x80 ^ 0x8E) + 29 + 106 - 96 + 106;
    IIlllllIl[29] = 102 + 84 - 97 + 62;
    IIlllllIl[30] = " ".length() ^ 0x1E ^ 0x52;
    IIlllllIl[31] = (0x3E ^ 0xF) + 7 + 22 - -96 + 16 - 82 + 53 - 96 + 92 + 47 + 41 - -49 + 13;
    IIlllllIl[32] = 67 + 130 - 40 + 2;
    IIlllllIl[33] = 0x5C ^ 0x32;
    IIlllllIl[34] = 0x4 ^ 0x47;
    IIlllllIl[35] = 0xAD ^ 0x95 ^ 0x65 ^ 0x3;
  }
  
  private static boolean IIIlllIlIIl(char IlIlIlIIllllll, char lIIlIlIIllllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  public Scaffold() {
    super(IIIllllIl[IIlllllIl[0]], IIlllllIl[1], Category.WORLD, IIIllllIl[IIlllllIl[2]], new com.exploiters.xploitclient.setting.base.SettingBase[IIlllllIl[3]]);
  }
  
  @Subscribe
  public void onTick(EventTick IIIlIlIlllllll) {
    this.renderBlocks.clear();
    int lllIIlIlllllll = IIlllllIl[23];
    int IllIIlIlllllll = this.mc.field_1724.field_7514.field_7545;
    if (IllIllIlIIl(this.mc.field_1724.field_7514.method_7391().method_7909() instanceof net.minecraft.class_1747)) {
      lllIIlIlllllll = this.mc.field_1724.field_7514.field_7545;
      "".length();
      if (null != null)
        return; 
    } else {
      int IlllIlIlllllll = IIlllllIl[0];
      while (lllIllIlIIl(IlllIlIlllllll, IIlllllIl[10])) {
        if (IllIllIlIIl(this.mc.field_1724.field_7514.method_5438(IlllIlIlllllll).method_7909() instanceof net.minecraft.class_1747)) {
          lllIIlIlllllll = IlllIlIlllllll;
          "".length();
          if (((0x61 ^ 0x55) & (0x29 ^ 0x1D ^ 0xFFFFFFFF)) != 0)
            return; 
          break;
        } 
        IlllIlIlllllll++;
        "".length();
        if ((0x18 ^ 0x44 ^ 0xEE ^ 0xB6) < ((0xD2 ^ 0xAA ^ 0xFD ^ 0x9E) & (103 + 5 - 66 + 124 ^ 86 + 99 - 116 + 120 ^ -" ".length())))
          return; 
      } 
    } 
    if (IIIlllIlIIl(lllIIlIlllllll, IIlllllIl[23]))
      return; 
    double lIlIIlIlllllll = getSetting(IIlllllIl[0]).asSlider().getValue();
    int IIlIIlIlllllll = (getSetting(IIlllllIl[2]).asMode()).mode;
    class_243 llIIIlIlllllll = this.mc.field_1724.method_19538().method_1031(0.0D, -0.85D - getSetting(IIlllllIl[9]).asSlider().getValue(), 0.0D);
    if (lIIlllIlIIl(IIlIIlIlllllll)) {
      (new class_2338[IIlllllIl[7]])[IIlllllIl[0]] = new class_2338(llIIIlIlllllll);
      (new class_2338[IIlllllIl[7]])[IIlllllIl[2]] = new class_2338(llIIIlIlllllll.method_1031(lIlIIlIlllllll, 0.0D, 0.0D));
      (new class_2338[IIlllllIl[7]])[IIlllllIl[4]] = new class_2338(llIIIlIlllllll.method_1031(-lIlIIlIlllllll, 0.0D, 0.0D));
      (new class_2338[IIlllllIl[7]])[IIlllllIl[5]] = new class_2338(llIIIlIlllllll.method_1031(0.0D, 0.0D, lIlIIlIlllllll));
      (new class_2338[IIlllllIl[7]])[IIlllllIl[6]] = new class_2338(llIIIlIlllllll.method_1031(0.0D, 0.0D, -lIlIIlIlllllll));
      "".length();
      if ("  ".length() != "  ".length())
        return; 
    } else {
    
    } 
    Set<class_2338> IlIIIlIlllllll = getSpiral(IIlIIlIlllllll, new class_2338(llIIIlIlllllll));
    int i = IIlllllIl[2];
    Iterator<class_2338> iterator1 = IlIIIlIlllllll.iterator();
    while (IllIllIlIIl(iterator1.hasNext())) {
      class_2338 lIllIlIlllllll = iterator1.next();
      if (IllIllIlIIl(WorldUtils.canPlaceBlock(lIllIlIlllllll))) {
        i = IIlllllIl[0];
        "".length();
        if (-(0x1A ^ 0x75 ^ 0x17 ^ 0x7C) >= 0)
          return; 
        break;
      } 
      "".length();
      if (null != null)
        return; 
    } 
    if (IllIllIlIIl(i))
      return; 
    if (IllIllIlIIl((getSetting(IIlllllIl[5]).asToggle()).state) && IllIllIlIIl(WorldUtils.NONSOLID_BLOCKS.contains(this.mc.field_1687.method_8320(this.mc.field_1724.method_24515().method_10074()).method_26204())) && lIIlllIlIIl(WorldUtils.NONSOLID_BLOCKS.contains(this.mc.field_1687.method_8320(this.mc.field_1724.method_24515().method_10087(IIlllllIl[4])).method_26204()))) {
      double IIllIlIlllllll = (int)this.mc.field_1724.method_23318() - this.mc.field_1724.method_23318();
      if (IlIlllIlIIl(lIlIllIlIIl(IIllIlIlllllll, 0.05D)) && IllIllIlIIl(class_3675.method_15987(this.mc.method_22683().method_4490(), class_3675.method_15981(this.mc.field_1690.field_1903.method_1428()).method_1444()))) {
        this.mc.field_1724.method_18800((this.mc.field_1724.method_18798()).field_1352, -IIllIlIlllllll, (this.mc.field_1724.method_18798()).field_1350);
        this.mc.field_1724.method_6043();
      } 
    } 
    if (IllIllIlIIl((getSetting(IIlllllIl[7]).asToggle()).state)) {
      iterator1 = IlIIIlIlllllll.iterator();
      while (IllIllIlIIl(iterator1.hasNext())) {
        class_2338 llIlIlIlllllll = iterator1.next();
        if (!lIIlllIlIIl((getSetting(IIlllllIl[7]).asToggle().getChild(IIlllllIl[2]).asToggle()).state) || IllIllIlIIl(WorldUtils.isBlockEmpty(llIlIlIlllllll)))
          "".length(); 
        "".length();
        if (-" ".length() > 0)
          return; 
      } 
    } 
    int IIIIIlIlllllll = IIlllllIl[0];
    Iterator<class_2338> iterator2 = IlIIIlIlllllll.iterator();
    while (IllIllIlIIl(iterator2.hasNext())) {
      class_2338 IlIlIlIlllllll = iterator2.next();
      this.mc.field_1724.field_7514.field_7545 = lllIIlIlllllll;
      if (IllIllIlIIl((getSetting(IIlllllIl[4]).asRotate()).state))
        WorldUtils.facePosAuto(IlIlIlIlllllll.method_10263() + 0.5D, IlIlIlIlllllll.method_10264() + 0.5D, IlIlIlIlllllll.method_10260() + 0.5D, getSetting(IIlllllIl[4]).asRotate()); 
      if (IllIllIlIIl(WorldUtils.placeBlock(IlIlIlIlllllll, IIlllllIl[23], IIlllllIl[0], IIlllllIl[0])) && llIlllIlIIl(++IIIIIlIlllllll, (int)getSetting(IIlllllIl[8]).asSlider().getValue()))
        return; 
      "".length();
      if (((0xE3 ^ 0xC5) & (0x30 ^ 0x16 ^ 0xFFFFFFFF)) >= " ".length())
        return; 
    } 
    this.mc.field_1724.field_7514.field_7545 = IllIIlIlllllll;
  }
  
  private static boolean llIlllIlIIl(String IllIIlIIllllll, float lIlIIlIIllllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 >= SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  static {
    IIlIllIlIIl();
    lIlIIlIlIIl();
  }
  
  private static boolean IllIllIlIIl(double llIllIIIllllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static String IIlIIlIlIIl(long lIIlIllIllllll, float IIIIIllIllllll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   36: iconst_2
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   51: iconst_4
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   68: iconst_5
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   83: iconst_5
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	1	IlIlIllIllllll	F
    //   59	59	2	IIIlIllIllllll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	1	IllIIllIllllll	Ljava/lang/String;
    //   0	125	0	llIIIllIllllll	Ljava/lang/String;
    //   0	125	1	lIIIIllIllllll	I
    //   0	125	0	lIIlIllIllllll	J
    //   0	125	2	IIIIIllIllllll	F
    //   76	42	3	IIlIIllIllllll	Ljavax/crypto/Cipher;
    //   0	125	0	IlIIIllIllllll	I
    //   0	125	3	lllllIlIllllll	F
    //   0	125	3	llIlIllIllllll	I
    //   0	125	2	lIlIIllIllllll	C
    //   119	4	2	lllIIllIllllll	Ljava/lang/Exception;
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  private static boolean IIllllIlIIl(short IllllIIIllllll, long lIlllIIIllllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 <= SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static String llIIIlIlIIl(float lIlIllIIllllll, String IIIlllIIllllll) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   43: iconst_0
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   65: iconst_0
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic IllIllIlIIl : (I)Z
    //   80: ifeq -> 239
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   131: iconst_0
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   136: bipush #25
    //   138: iaload
    //   139: iadd
    //   140: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   143: bipush #26
    //   145: iaload
    //   146: isub
    //   147: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   150: bipush #14
    //   152: iaload
    //   153: iadd
    //   154: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   157: bipush #27
    //   159: iaload
    //   160: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   163: bipush #28
    //   165: iaload
    //   166: ixor
    //   167: ixor
    //   168: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   171: bipush #29
    //   173: iaload
    //   174: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   177: bipush #30
    //   179: iaload
    //   180: iadd
    //   181: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   184: bipush #31
    //   186: iaload
    //   187: isub
    //   188: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   191: bipush #32
    //   193: iaload
    //   194: iadd
    //   195: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   198: bipush #10
    //   200: iaload
    //   201: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   204: bipush #33
    //   206: iaload
    //   207: iadd
    //   208: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   211: bipush #34
    //   213: iaload
    //   214: isub
    //   215: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   218: bipush #35
    //   220: iaload
    //   221: iadd
    //   222: ixor
    //   223: ldc ' '
    //   225: invokevirtual length : ()I
    //   228: ineg
    //   229: ixor
    //   230: iand
    //   231: invokestatic IllIllIlIIl : (I)Z
    //   234: ifeq -> 70
    //   237: aconst_null
    //   238: areturn
    //   239: aload_2
    //   240: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   243: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	244	1	lIIlllIIllllll	Ljava/lang/String;
    //   0	244	8	IIlIIIlIllllll	S
    //   0	244	7	IlllIlIIllllll	Z
    //   0	244	7	IlIlllIIllllll	D
    //   0	244	1	IIIlllIIllllll	Ljava/lang/String;
    //   0	244	0	lllIllIIllllll	Ljava/lang/String;
    //   32	212	2	llIIIIlIllllll	Ljava/lang/StringBuilder;
    //   0	244	5	lIllllIIllllll	F
    //   0	244	5	IIIIllIIllllll	I
    //   90	24	8	llllllIIllllll	C
    //   0	244	2	lIIIIIlIllllll	F
    //   0	244	3	IlIIIIlIllllll	J
    //   37	207	3	IIllllIIllllll	[C
    //   0	244	1	IIlIllIIllllll	F
    //   0	244	2	llIIllIIllllll	C
    //   0	244	0	lIlIllIIllllll	F
    //   0	244	6	IlllllIIllllll	S
    //   0	244	8	lIllIlIIllllll	Z
    //   0	244	4	lIIIllIIllllll	S
    //   48	196	4	llIlllIIllllll	I
    //   0	244	0	IllIllIIllllll	Ljava/lang/String;
    //   0	244	6	llllIlIIllllll	J
    //   0	244	3	IlIIllIIllllll	Ljava/lang/String;
    //   0	244	4	IIIIIIlIllllll	S
  }
  
  private static boolean lllIllIlIIl(float IlIIIlIIllllll, boolean lIIIIlIIllllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 < SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static void lIlIIlIlIIl() {
    IIIllllIl = new String[IIlllllIl[24]];
    IIIllllIl[IIlllllIl[0]] = IlIIIlIlIIl("SSMcNeq6sW1rKhkE2pNQxw==", "apSyj");
    IIIllllIl[IIlllllIl[2]] = llIIIlIlIIl("Ki0WFS0JYRUaJxkqBFY9FCUSBGgDLgI=", "zAwvH");
    IIIllllIl[IIlllllIl[4]] = IIlIIlIlIIl("ZrK+y1BN1TY=", "AsXqh");
    IIIllllIl[IIlllllIl[5]] = IlIIIlIlIIl("L4i2vrtustY=", "IDVLO");
    IIIllllIl[IIlllllIl[6]] = llIIIlIlIIl("IQkcFzID", "ofnzS");
    IIIllllIl[IIlllllIl[7]] = llIIIlIlIIl("WAhQ", "kpctQ");
    IIIllllIl[IIlllllIl[8]] = llIIIlIlIIl("YR1U", "TeaZD");
    IIIllllIl[IIlllllIl[9]] = llIIIlIlIIl("RyBj", "pXTIh");
    IIIllllIl[IIlllllIl[3]] = IIlIIlIlIIl("kCV38FphQpSFivxMYawmhKb/7prRPFXVPHct7ntegvA=", "LYSQf");
    IIIllllIl[IIlllllIl[10]] = IIlIIlIlIIl("vc3RBKwRW64=", "wgMia");
    IIIllllIl[IIlllllIl[11]] = IlIIIlIlIIl("uClTz6Vi0uLqU+1dxHoYQw/81WzmUz6VA9XPdZTZC+cAgpi5bYiVuJBDbdby3i/r", "swIxO");
    IIIllllIl[IIlllllIl[12]] = IlIIIlIlIIl("A4141x6pxzSKPXSHoYJpSA==", "ecYxh");
    IIIllllIl[IIlllllIl[13]] = IlIIIlIlIIl("HS8Jzp1vBWq4B9TsQF4ggMXd00bt9EAsXMF4Fs0G4Yu0DSrDlxnFhsYeFwelv7FURNILShXhuSY=", "oRvtu");
    IIIllllIl[IIlllllIl[14]] = llIIIlIlIIl("LQoNJSkMBAI5", "ecjME");
    IIIllllIl[IIlllllIl[15]] = llIIIlIlIIl("PiUAKSofKw81NVY4DyRmFCAIIi0FbB4uM1YtFSRmBiAGIi8YKw==", "vLgAF");
    IIIllllIl[IIlllllIl[16]] = IIlIIlIlIIl("iV5YtzAeozE=", "yTUDp");
    IIIllllIl[IIlllllIl[17]] = IIlIIlIlIIl("VrTeuLuGSBArzE8tIp9EguQcV+wML0ivVfu6w+68cUI=", "YDToV");
    IIIllllIl[IIlllllIl[18]] = IlIIIlIlIIl("R5WcSkvBGDQ=", "nWcJE");
    IIIllllIl[IIlllllIl[19]] = IlIIIlIlIIl("r2+6fmv8VvWJYZrwGzfWsMCfJd9ITWYlHnHuP6cUYiV10S14rCRTaJZiTZoyYCOe", "hsdim");
    IIIllllIl[IIlllllIl[20]] = llIIIlIlIIl("NBs6", "vKnuu");
    IIIllllIl[IIlllllIl[21]] = llIIIlIlIIl("GDgbID8pdCQmJnoAHSA/dnQcLCN6ORUtLXo2GCw3MSdUNzt6JBgiNz90BCYmeiAdID8=", "ZTtCT");
    IIIllllIl[IIlllllIl[22]] = IIlIIlIlIIl("f+CdEI3eJ0o=", "BuMqT");
  }
  
  private Set<class_2338> getSpiral(int lIlllllIllllll, long IllIlllIllllll) {
    (new class_2338[IIlllllIl[2]])[IIlllllIl[0]] = IllIlllIllllll;
    Set<class_2338> llIllllIllllll = new LinkedHashSet<>(Arrays.asList(new class_2338[IIlllllIl[2]]));
    if (lIIlllIlIIl(lIlllllIllllll))
      return llIllllIllllll; 
    int IlIllllIllllll = IIlllllIl[2];
    int lIIllllIllllll = lIlllllIllllll * IIlllllIl[6];
    long l = IllIlllIllllll;
    int lllllllIllllll = IIlllllIl[0];
    while (IIllllIlIIl(lllllllIllllll, lIIllllIllllll)) {
      if (IIIlllIlIIl(lllllllIllllll, lIIllllIllllll))
        IlIllllIllllll--; 
      int IIIIIIIlllllll = IIlllllIl[0];
      while (lllIllIlIIl(IIIIIIIlllllll, IlIllllIllllll)) {
        class_2338 class_23381;
        if (lIIlllIlIIl(lllllllIllllll % IIlllllIl[6])) {
          class_23381 = l.method_10069(IIlllllIl[23], IIlllllIl[0], IIlllllIl[0]);
          "".length();
          if ("   ".length() < 0)
            return null; 
        } else if (IIIlllIlIIl(lllllllIllllll % IIlllllIl[6], IIlllllIl[2])) {
          class_23381 = class_23381.method_10069(IIlllllIl[0], IIlllllIl[0], IIlllllIl[23]);
          "".length();
          if (-(39 + 103 - -21 + 8 ^ 96 + 134 - 135 + 80) >= 0)
            return null; 
        } else if (IIIlllIlIIl(lllllllIllllll % IIlllllIl[6], IIlllllIl[4])) {
          class_23381 = class_23381.method_10069(IIlllllIl[2], IIlllllIl[0], IIlllllIl[0]);
          "".length();
          if ((0x2B ^ 0x0 ^ 0x29 ^ 0x7) == 0)
            return null; 
        } else {
          class_23381 = class_23381.method_10069(IIlllllIl[0], IIlllllIl[0], IIlllllIl[2]);
        } 
        "".length();
        IIIIIIIlllllll++;
        "".length();
        if (-" ".length() >= 0)
          return null; 
      } 
      if (IllIllIlIIl(lllllllIllllll % IIlllllIl[4]))
        IlIllllIllllll++; 
      lllllllIllllll++;
      "".length();
      if (" ".length() < 0)
        return null; 
    } 
    return llIllllIllllll;
  }
  
  private static int lIlIllIlIIl(double paramDouble1, double paramDouble2) {
    return paramDouble1 cmp paramDouble2;
  }
  
  private static String IlIIIlIlIIl(short IlIllIlIllllll, String lIIllIlIllllll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   56: iconst_4
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/Scaffold.IIlllllIl : [I
    //   71: iconst_4
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	0	lllIlIlIllllll	Ljava/lang/String;
    //   107	4	2	IllIlIlIllllll	Ljava/lang/Exception;
    //   64	42	3	IIlIlIlIllllll	Ljavax/crypto/Cipher;
    //   47	59	2	llIIlIlIllllll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	113	2	lIlIlIlIllllll	Ljava/lang/Exception;
    //   0	113	0	IlIllIlIllllll	S
    //   0	113	1	IIIIlIlIllllll	S
    //   0	113	1	lIIllIlIllllll	Ljava/lang/String;
    //   0	113	1	IlIIlIlIllllll	Ljava/lang/Exception;
    //   0	113	2	llllIIlIllllll	Z
    //   0	113	0	lIIIlIlIllllll	J
    //   0	113	3	IIIllIlIllllll	I
    //   0	113	3	IlllIIlIllllll	F
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\Scaffold.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */