package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Arrays;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.DESEncryptionAlgorithm;

public class Timer extends Module {
  static {
    IllIIIlll();
    lIlIIIlll();
  }
  
  private static void lIlIIIlll() {
    IIIIlIIl = new String[lIIIlIIl[4]];
    IIIIlIIl[lIIIlIIl[0]] = llIIIIlll("QrKFSIXx/ik=", "inDSC");
    IIIIlIIl[lIIIlIIl[2]] = llIIIIlll("fSgEedvX+QTEtatcyajazw==", "FFyjA");
    IIIIlIIl[lIIIlIIl[3]] = IIlIIIlll("nRB8/g6FCBQ=", "FyZCe");
  }
  
  private static void IllIIIlll() {
    lIIIlIIl = new int[5];
    lIIIlIIl[0] = (0x1C ^ 0x5B) & (0x7F ^ 0x38 ^ 0xFFFFFFFF);
    lIIIlIIl[1] = -"  ".length();
    lIIIlIIl[2] = " ".length();
    lIIIlIIl[3] = "  ".length();
    lIIIlIIl[4] = "   ".length();
  }
  
  public Timer() {
    super(IIIIlIIl[lIIIlIIl[0]], lIIIlIIl[1], Category.WORLD, IIIIlIIl[lIIIlIIl[2]], new com.exploiters.xploitclient.setting.base.SettingBase[lIIIlIIl[2]]);
  }
  
  private static String llIIIIlll(char IlllIlllllIIIll, Exception llllIlllllIIIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/Timer.lIIIlIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/Timer.lIIIlIIl : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/Timer.lIIIlIIl : [I
    //   56: iconst_3
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/Timer.lIIIlIIl : [I
    //   71: iconst_3
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	3	llIlIlllllIIIll	Z
    //   64	42	3	lIIIllllllIIIll	Ljavax/crypto/Cipher;
    //   0	113	0	IIlIllllllIIIll	Ljava/lang/String;
    //   0	113	0	IlllIlllllIIIll	C
    //   0	113	0	lllIllllllIIIll	S
    //   47	59	2	IIIIllllllIIIll	Ljavax/crypto/spec/SecretKeySpec;
    //   107	4	2	llIIllllllIIIll	Ljava/lang/Exception;
    //   0	113	1	IllIllllllIIIll	Ljava/lang/String;
    //   0	113	3	lIlIllllllIIIll	I
    //   0	113	2	IlIIllllllIIIll	Ljava/lang/Exception;
    //   0	113	1	llllIlllllIIIll	Ljava/lang/Exception;
    //   0	113	1	lIllIlllllIIIll	C
    //   0	113	2	IIllIlllllIIIll	Ljava/lang/Exception;
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  private static String IIlIIIlll(String IIIIIIIIIIlIIll, String IlllllllllIIIll) {
    try {
      SecretKeySpec lIlIIIIIIIlIIll = new SecretKeySpec(Arrays.copyOf(MessageDigest.getInstance(DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[lIIIlIIl[0]]]).digest(IlllllllllIIIll.getBytes(StandardCharsets.UTF_8)), DESEncryptionAlgorithm.lIlllllIlllII[lIIIlIIl[2]]), DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[lIIIlIIl[3]]]);
      Cipher lIIIIIIIIIlIIll = Cipher.getInstance(DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[lIIIlIIl[4]]]);
      lIIIIIIIIIlIIll.init(DESEncryptionAlgorithm.lIlllllIlllII[lIIIlIIl[4]], lIlIIIIIIIlIIll);
      return new String(lIIIIIIIIIlIIll.doFinal(Base64.getDecoder().decode(IIIIIIIIIIlIIll.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception IIlIIIIIIIlIIll) {
      Exception exception1;
      exception1.printStackTrace();
      return null;
    } 
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\Timer.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */