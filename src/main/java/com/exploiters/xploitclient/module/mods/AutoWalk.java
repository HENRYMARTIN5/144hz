package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventTick;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.google.common.eventbus.Subscribe;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.BlowfishEncryptionAlgorithm;
import net.minecraft.class_310;

public class AutoWalk extends Module {
  private static boolean IIIllIlll(float IlIIllIlIlIIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  public AutoWalk() {
    super(llIllIIl[lIlllIIl[0]], lIlllIIl[1], Category.MOVEMENT, llIllIIl[lIlllIIl[2]], new com.exploiters.xploitclient.setting.base.SettingBase[lIlllIIl[0]]);
  }
  
  @Subscribe
  public void onTick(EventTick IlIlIIIIllIIIll) {
    this.mc.field_1690.field_1894.method_23481(lIlllIIl[2]);
  }
  
  public void onDisable() {
    // Byte code:
    //   0: aload_0
    //   1: getfield mc : Lnet/minecraft/class_310;
    //   4: getfield field_1690 : Lnet/minecraft/class_315;
    //   7: getfield field_1894 : Lnet/minecraft/class_304;
    //   10: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: invokevirtual method_23481 : (Z)V
    //   18: aload_0
    //   19: invokespecial onDisable : ()V
    //   22: return
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	23	0	lIIIlIIIllIIIll	Lcom/exploiters/xploitclient/module/mods/AutoWalk;
    //   0	23	0	IIIIlIIIllIIIll	C
  }
  
  static {
    lllIlIlll();
    lIIIlIlll();
  }
  
  private static void lllIlIlll() {
    lIlllIIl = new int[17];
    lIlllIIl[0] = (0x5E ^ 0x71 ^ 0x2A ^ 0x5B) & (0x6B ^ 0x4A ^ 46 + 19 - -6 + 56 ^ -" ".length());
    lIlllIIl[1] = -"  ".length();
    lIlllIIl[2] = " ".length();
    lIlllIIl[3] = "  ".length();
    lIlllIIl[4] = 0x32 ^ 0x61;
    lIlllIIl[5] = -(190 + 20 - 39 + 45 ^ 66 + 153 - 185 + 165);
    lIlllIIl[6] = 0x2C ^ 0x21;
    lIlllIIl[7] = 93 + 91 - 22 + 34;
    lIlllIIl[8] = (0x32 ^ 0x38) + 126 + 60 - 125 + 84 - (0x16 ^ 0x28) + (0x97 ^ 0xA9);
    lIlllIIl[9] = 94 + 38 - -17 + 2;
    lIlllIIl[10] = 0x41 ^ 0xC;
    lIlllIIl[11] = 87 + 99 - 87 + 55 + 137 + 90 - 150 + 94 - (0xFFFFDFAD & 0x2176) + 152 + 118 - 214 + 120;
    lIlllIIl[12] = (0x2F ^ 0x5C) + (0x68 ^ 0x65) - -"  ".length() + (0x97 ^ 0x8A);
    lIlllIIl[13] = 0x19 ^ 0x10;
    lIlllIIl[14] = 66 + 71 - 89 + 149 ^ 133 + 86 - 195 + 147;
    lIlllIIl[15] = 90 + 58 - 92 + 158 ^ 32 + 83 - 96 + 130;
    lIlllIIl[16] = 0xD9 ^ 0x87;
  }
  
  private static String llllIIlll(String llIIllllIlIIIll, String lIlIllllIlIIIll) {
    try {
      SecretKeySpec IlllIlllIlIIIll = new SecretKeySpec(MessageDigest.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[lIlllIIl[0]]]).digest(lIlIllllIlIIIll.getBytes(StandardCharsets.UTF_8)), BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[lIlllIIl[2]]]);
      Cipher IIIIllllIlIIIll = Cipher.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[lIlllIIl[3]]]);
      IIIIllllIlIIIll.init(BlowfishEncryptionAlgorithm.lllIIlIIllIlI[lIlllIIl[3]], IlllIlllIlIIIll);
      return new String(IIIIllllIlIIIll.doFinal(Base64.getDecoder().decode(llIIllllIlIIIll.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception IlIIllllIlIIIll) {
      lIIIllllIlIIIll.printStackTrace();
      return null;
    } 
  }
  
  private static String IIIIlIlll(int llIIIIllIlIIIll, String lllIIIllIlIIIll) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   43: iconst_0
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   65: iconst_0
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic IIIllIlll : (I)Z
    //   80: ifeq -> 237
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   131: iconst_0
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   136: iconst_4
    //   137: iaload
    //   138: iadd
    //   139: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   142: iconst_5
    //   143: iaload
    //   144: isub
    //   145: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   148: bipush #6
    //   150: iaload
    //   151: iadd
    //   152: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   155: bipush #7
    //   157: iaload
    //   158: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   161: bipush #8
    //   163: iaload
    //   164: ixor
    //   165: ixor
    //   166: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   169: bipush #9
    //   171: iaload
    //   172: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   175: bipush #10
    //   177: iaload
    //   178: iadd
    //   179: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   182: bipush #11
    //   184: iaload
    //   185: isub
    //   186: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   189: bipush #12
    //   191: iaload
    //   192: iadd
    //   193: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   196: bipush #13
    //   198: iaload
    //   199: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   202: bipush #14
    //   204: iaload
    //   205: iadd
    //   206: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   209: bipush #15
    //   211: iaload
    //   212: isub
    //   213: getstatic com/exploiters/xploitclient/module/mods/AutoWalk.lIlllIIl : [I
    //   216: bipush #16
    //   218: iaload
    //   219: iadd
    //   220: ixor
    //   221: ldc ' '
    //   223: invokevirtual length : ()I
    //   226: ineg
    //   227: ixor
    //   228: iand
    //   229: invokestatic IIIllIlll : (I)Z
    //   232: ifeq -> 70
    //   235: aconst_null
    //   236: areturn
    //   237: aload_2
    //   238: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   241: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	242	3	llllllIlIlIIIll	F
    //   0	242	3	IIIIlIllIlIIIll	J
    //   32	210	2	lIIIlIllIlIIIll	Ljava/lang/StringBuilder;
    //   0	242	2	llllIIllIlIIIll	F
    //   48	194	4	lIIlIIllIlIIIll	I
    //   0	242	6	IIllllIlIlIIIll	J
    //   0	242	6	IIllIIllIlIIIll	S
    //   0	242	5	llIlIIllIlIIIll	F
    //   0	242	7	llIlllIlIlIIIll	Ljava/lang/Exception;
    //   0	242	0	lIlIIIllIlIIIll	Ljava/lang/String;
    //   0	242	0	llIIIIllIlIIIll	I
    //   0	242	4	IlllllIlIlIIIll	D
    //   0	242	1	IlIIIIllIlIIIll	Z
    //   0	242	1	lllIIIllIlIIIll	Ljava/lang/String;
    //   0	242	7	IIIlIIllIlIIIll	D
    //   0	242	1	IllIIIllIlIIIll	Ljava/lang/String;
    //   0	242	0	IIlIIIllIlIIIll	Ljava/lang/String;
    //   0	242	4	IlllIIllIlIIIll	S
    //   90	24	8	lIllIIllIlIIIll	C
    //   0	242	5	lIllllIlIlIIIll	Ljava/lang/Exception;
    //   0	242	2	IIIIIIllIlIIIll	B
    //   0	242	8	IlIIlIllIlIIIll	S
    //   37	205	3	IlIlIIllIlIIIll	[C
    //   0	242	8	lIIlllIlIlIIIll	S
  }
  
  private static void lIIIlIlll() {
    llIllIIl = new String[lIlllIIl[3]];
    llIllIIl[lIlllIIl[0]] = llllIIlll("MoOhenqTJXWf7atiZ0L42Q==", "EEZhk");
    llIllIIl[lIlllIIl[2]] = IIIIlIlll("DRkYAxUtGAUPGSAAFUwPLQAHH1cqAAUJC2wKAx4PLR4I", "Llllx");
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\AutoWalk.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */