package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventDrawTooltip;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.exploiters.xploitclient.utils.FabricReflect;
import com.exploiters.xploitclient.utils.ItemContentUtils;
import com.google.common.collect.Lists;
import com.google.common.eventbus.Subscribe;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Arrays;
import java.util.Base64;
import java.util.Iterator;
import java.util.List;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.DESEncryptionAlgorithm;
import net.minecraft.class_1735;
import net.minecraft.class_1747;
import net.minecraft.class_1799;
import net.minecraft.class_1802;
import net.minecraft.class_2248;
import net.minecraft.class_2561;
import net.minecraft.class_287;
import net.minecraft.class_289;
import net.minecraft.class_290;
import net.minecraft.class_4587;
import org.lwjgl.opengl.GL11;
import org.lwjgl.opengl.GL14;

public class Peek extends Module {
  private static String IlllIIIlIll(double llIllllllIlIIl, char lIIllllllIlIIl) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   43: iconst_0
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   65: iconst_0
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic llIIlIllIll : (I)Z
    //   80: ifeq -> 239
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   131: iconst_0
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   136: bipush #57
    //   138: iaload
    //   139: iadd
    //   140: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   143: bipush #58
    //   145: iaload
    //   146: isub
    //   147: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   150: bipush #14
    //   152: iaload
    //   153: iadd
    //   154: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   157: bipush #59
    //   159: iaload
    //   160: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   163: bipush #60
    //   165: iaload
    //   166: ixor
    //   167: ixor
    //   168: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   171: bipush #61
    //   173: iaload
    //   174: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   177: bipush #62
    //   179: iaload
    //   180: iadd
    //   181: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   184: bipush #63
    //   186: iaload
    //   187: isub
    //   188: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   191: bipush #64
    //   193: iaload
    //   194: iadd
    //   195: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   198: bipush #10
    //   200: iaload
    //   201: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   204: bipush #65
    //   206: iaload
    //   207: iadd
    //   208: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   211: bipush #66
    //   213: iaload
    //   214: isub
    //   215: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   218: bipush #67
    //   220: iaload
    //   221: iadd
    //   222: ixor
    //   223: ldc ' '
    //   225: invokevirtual length : ()I
    //   228: ineg
    //   229: ixor
    //   230: iand
    //   231: invokestatic llIIlIllIll : (I)Z
    //   234: ifeq -> 70
    //   237: aconst_null
    //   238: areturn
    //   239: aload_2
    //   240: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   243: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	244	3	IIIllllllIlIIl	F
    //   0	244	4	IllIIIIIIllIIl	S
    //   0	244	8	llIIlllllIlIIl	F
    //   0	244	6	lIlIlllllIlIIl	Ljava/lang/String;
    //   0	244	1	lllllllllIlIIl	Ljava/lang/String;
    //   0	244	0	IIlllllllIlIIl	Ljava/lang/String;
    //   90	24	8	lIlIIIIIIllIIl	C
    //   0	244	7	IIIIIIIIIllIIl	D
    //   0	244	1	IlIllllllIlIIl	J
    //   48	196	4	lIIIIIIIIllIIl	I
    //   0	244	8	IlIlIIIIIllIIl	S
    //   37	207	3	IlIIIIIIIllIIl	[C
    //   0	244	0	llIllllllIlIIl	D
    //   0	244	2	lIIllllllIlIIl	C
    //   0	244	3	IIIlIIIIIllIIl	J
    //   0	244	6	IIlIIIIIIllIIl	S
    //   0	244	5	IllIlllllIlIIl	F
    //   0	244	4	lllIlllllIlIIl	I
    //   32	212	2	lIIlIIIIIllIIl	Ljava/lang/StringBuilder;
    //   0	244	2	lllIIIIIIllIIl	F
    //   0	244	7	IIlIlllllIlIIl	F
    //   0	244	1	IllllllllIlIIl	Ljava/lang/String;
    //   0	244	5	llIIIIIIIllIIl	F
    //   0	244	0	lIlllllllIlIIl	Ljava/lang/String;
  }
  
  private static boolean IIlIlIllIll(char llIIlIlllIlIIl, long IlIIlIlllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static boolean lIIIlIllIll(String IlIlIIlllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  public void drawBookToolTip(class_4587 lIllllIlIllIIl, class_1735 IIllllIlIllIIl, String IIlIllIlIllIIl, int IlIlllIlIllIIl) {
    if (IIlIlIllIll(IIllllIlIllIIl.method_7677().method_7909(), class_1802.field_8674) && IIlIlIllIll(IIllllIlIllIIl.method_7677().method_7909(), class_1802.field_8360))
      return; 
    if (IlIIlIllIll(this.pages))
      this.pages = ItemContentUtils.getTextInBook(IIllllIlIllIIl.method_7677()); 
    if (llIIlIllIll(this.pages.isEmpty()))
      return; 
    if (lIIIlIllIll(this.mc.field_1724.field_6012 % lIIlIlIIIl[28]) && lIIIlIllIll(this.shown)) {
      this.shown = lIIlIlIIIl[2];
      if (lIlIlIllIll(this.pageCount, this.pages.size() - lIIlIlIIIl[2])) {
        this.pageCount = lIIlIlIIIl[0];
        "".length();
        if (null != null)
          return; 
      } else {
        this.pageCount += lIIlIlIIIl[2];
        "".length();
        if (null != null)
          return; 
      } 
    } else if (llIIlIllIll(this.mc.field_1724.field_6012 % lIIlIlIIIl[28])) {
      this.shown = lIIlIlIIIl[0];
    } 
    int lIIlllIlIllIIl = this.mc.field_1772.method_1727(String.valueOf((new StringBuilder()).append(IIIIlIIIIl[lIIlIlIIIl[29]]).append(this.pageCount + lIIlIlIIIl[2]).append(IIIIlIIIIl[lIIlIlIIIl[30]]).append(this.pages.size())));
    renderTooltipBox(lIllllIlIllIIl, IIlIllIlIllIIl + lIIlIlIIIl[31] - lIIlllIlIllIIl / lIIlIlIIIl[4], IlIlllIlIllIIl - ((List)this.pages.get(this.pageCount)).size() * lIIlIlIIIl[11] - lIIlIlIIIl[29], lIIlIlIIIl[6], lIIlllIlIllIIl, lIIlIlIIIl[2]);
    renderTooltipBox(lIllllIlIllIIl, IIlIllIlIllIIl, IlIlllIlIllIIl - ((List)this.pages.get(this.pageCount)).size() * lIIlIlIIIl[11] - lIIlIlIIIl[7], ((List)this.pages.get(this.pageCount)).size() * lIIlIlIIIl[11] - lIIlIlIIIl[4], lIIlIlIIIl[32], lIIlIlIIIl[2]);
    "".length();
    int IIIlllIlIllIIl = lIIlIlIIIl[0];
    Iterator<String> iterator = ((List)this.pages.get(this.pageCount)).iterator();
    while (llIIlIllIll(iterator.hasNext())) {
      String llllllIlIllIIl = iterator.next();
      "".length();
      IIIlllIlIllIIl++;
      "".length();
      if ("  ".length() == 0)
        return; 
    } 
  }
  
  private static boolean lllIlIllIll(boolean IIIIlIlllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  public void drawMapToolTip(byte IlIIlIIlIllIIl, int lIIIlIIlIllIIl, long IIIIlIIlIllIIl, float IlllIIIlIllIIl) {
    // Byte code:
    //   0: aload_2
    //   1: invokevirtual method_7677 : ()Lnet/minecraft/class_1799;
    //   4: invokevirtual method_7909 : ()Lnet/minecraft/class_1792;
    //   7: getstatic net/minecraft/class_1802.field_8204 : Lnet/minecraft/class_1792;
    //   10: invokestatic IIlIlIllIll : (Ljava/lang/Object;Ljava/lang/Object;)Z
    //   13: ifeq -> 17
    //   16: return
    //   17: aload_2
    //   18: invokevirtual method_7677 : ()Lnet/minecraft/class_1799;
    //   21: aload_0
    //   22: getfield mc : Lnet/minecraft/class_310;
    //   25: getfield field_1687 : Lnet/minecraft/class_638;
    //   28: invokestatic method_7997 : (Lnet/minecraft/class_1799;Lnet/minecraft/class_1937;)Lnet/minecraft/class_22;
    //   31: astore #5
    //   33: aload #5
    //   35: invokestatic lllIlIllIll : (Ljava/lang/Object;)Z
    //   38: ifeq -> 52
    //   41: aload #5
    //   43: getfield field_122 : [B
    //   46: invokestatic IlIIlIllIll : (Ljava/lang/Object;)Z
    //   49: ifeq -> 53
    //   52: return
    //   53: aload #5
    //   55: getfield field_122 : [B
    //   58: astore #6
    //   60: aload_0
    //   61: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   64: iconst_4
    //   65: iaload
    //   66: invokevirtual getSetting : (I)Lcom/exploiters/xploitclient/setting/base/SettingBase;
    //   69: invokevirtual asToggle : ()Lcom/exploiters/xploitclient/setting/base/SettingToggle;
    //   72: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   75: iconst_0
    //   76: iaload
    //   77: invokevirtual getChild : (I)Lcom/exploiters/xploitclient/setting/base/SettingBase;
    //   80: invokevirtual asSlider : ()Lcom/exploiters/xploitclient/setting/base/SettingSlider;
    //   83: invokevirtual getValue : ()D
    //   86: dstore #7
    //   88: invokestatic glPushMatrix : ()V
    //   91: dload #7
    //   93: dload #7
    //   95: dconst_1
    //   96: invokestatic glScaled : (DDD)V
    //   99: fconst_0
    //   100: fconst_0
    //   101: ldc_w 300.0
    //   104: invokestatic glTranslatef : (FFF)V
    //   107: iload_3
    //   108: i2d
    //   109: dconst_1
    //   110: dload #7
    //   112: ddiv
    //   113: dmul
    //   114: ldc2_w 12.0
    //   117: dconst_1
    //   118: dload #7
    //   120: ddiv
    //   121: dmul
    //   122: dadd
    //   123: d2i
    //   124: istore #9
    //   126: iload #4
    //   128: i2d
    //   129: dconst_1
    //   130: dload #7
    //   132: ddiv
    //   133: dmul
    //   134: ldc2_w 12.0
    //   137: dconst_1
    //   138: dload #7
    //   140: ddiv
    //   141: dmul
    //   142: dsub
    //   143: ldc2_w 140.0
    //   146: dsub
    //   147: d2i
    //   148: istore #10
    //   150: aload_0
    //   151: aload_1
    //   152: iload #9
    //   154: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   157: bipush #13
    //   159: iaload
    //   160: isub
    //   161: iload #10
    //   163: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   166: bipush #13
    //   168: iaload
    //   169: iadd
    //   170: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   173: bipush #38
    //   175: iaload
    //   176: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   179: bipush #38
    //   181: iaload
    //   182: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   185: iconst_0
    //   186: iaload
    //   187: invokespecial renderTooltipBox : (Lnet/minecraft/class_4587;IIIIZ)V
    //   190: aload #6
    //   192: astore #11
    //   194: aload #11
    //   196: arraylength
    //   197: istore #12
    //   199: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   202: iconst_0
    //   203: iaload
    //   204: istore #13
    //   206: iload #13
    //   208: iload #12
    //   210: invokestatic lIIllIllIll : (II)Z
    //   213: ifeq -> 395
    //   216: aload #11
    //   218: iload #13
    //   220: baload
    //   221: istore #14
    //   223: iload #14
    //   225: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   228: bipush #39
    //   230: iaload
    //   231: iand
    //   232: istore #15
    //   234: iload #15
    //   236: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   239: iconst_5
    //   240: iaload
    //   241: idiv
    //   242: invokestatic llIIlIllIll : (I)Z
    //   245: ifeq -> 299
    //   248: aload_1
    //   249: iload #9
    //   251: iload #10
    //   253: iload #9
    //   255: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   258: iconst_2
    //   259: iaload
    //   260: iadd
    //   261: iload #10
    //   263: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   266: iconst_2
    //   267: iaload
    //   268: iadd
    //   269: aload_0
    //   270: getstatic net/minecraft/class_3620.field_16006 : [Lnet/minecraft/class_3620;
    //   273: iload #15
    //   275: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   278: iconst_5
    //   279: iaload
    //   280: idiv
    //   281: aaload
    //   282: getfield field_16011 : I
    //   285: iload #15
    //   287: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   290: iconst_3
    //   291: iaload
    //   292: iand
    //   293: invokespecial getRenderColorFix : (II)I
    //   296: invokestatic method_25294 : (Lnet/minecraft/class_4587;IIIII)V
    //   299: iload #9
    //   301: iload_3
    //   302: i2d
    //   303: dconst_1
    //   304: dload #7
    //   306: ddiv
    //   307: dmul
    //   308: ldc2_w 12.0
    //   311: dconst_1
    //   312: dload #7
    //   314: ddiv
    //   315: dmul
    //   316: dadd
    //   317: d2i
    //   318: isub
    //   319: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   322: bipush #40
    //   324: iaload
    //   325: invokestatic lIlIlIllIll : (II)Z
    //   328: ifeq -> 368
    //   331: iload_3
    //   332: i2d
    //   333: dconst_1
    //   334: dload #7
    //   336: ddiv
    //   337: dmul
    //   338: ldc2_w 12.0
    //   341: dconst_1
    //   342: dload #7
    //   344: ddiv
    //   345: dmul
    //   346: dadd
    //   347: d2i
    //   348: istore #9
    //   350: iinc #10, 1
    //   353: ldc ''
    //   355: invokevirtual length : ()I
    //   358: pop
    //   359: ldc ' '
    //   361: invokevirtual length : ()I
    //   364: ifgt -> 371
    //   367: return
    //   368: iinc #9, 1
    //   371: iinc #13, 1
    //   374: ldc ''
    //   376: invokevirtual length : ()I
    //   379: pop
    //   380: ldc '  '
    //   382: invokevirtual length : ()I
    //   385: ldc_w '   '
    //   388: invokevirtual length : ()I
    //   391: if_icmpne -> 206
    //   394: return
    //   395: invokestatic glPopMatrix : ()V
    //   398: return
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	399	3	IlIllIIlIllIIl	I
    //   60	339	6	lllIlIIlIllIIl	[B
    //   0	399	4	lIIllIIlIllIIl	I
    //   0	399	5	IlllIIIlIllIIl	F
    //   0	399	7	IIllIIIlIllIIl	B
    //   150	249	10	IIlIlIIlIllIIl	I
    //   0	399	4	llllIIIlIllIIl	D
    //   223	148	14	IllllIIlIllIIl	B
    //   0	399	0	lIlllIIlIllIIl	Lcom/exploiters/xploitclient/module/mods/Peek;
    //   88	311	7	IllIlIIlIllIIl	D
    //   126	273	9	lIlIlIIlIllIIl	I
    //   0	399	13	lllIIIIlIllIIl	D
    //   0	399	3	IIIIlIIlIllIIl	J
    //   0	399	2	llIllIIlIllIIl	Lnet/minecraft/class_1735;
    //   0	399	1	IIlllIIlIllIIl	Lnet/minecraft/class_4587;
    //   0	399	0	llIIlIIlIllIIl	D
    //   0	399	10	IlIlIIIlIllIIl	S
    //   0	399	1	IlIIlIIlIllIIl	B
    //   234	137	15	lllllIIlIllIIl	I
    //   0	399	2	lIIIlIIlIllIIl	I
    //   0	399	11	lIIlIIIlIllIIl	Z
    //   0	399	12	IIIlIIIlIllIIl	F
    //   0	399	15	lIlIIIIlIllIIl	B
    //   33	366	5	IIIllIIlIllIIl	Lnet/minecraft/class_22;
    //   0	399	14	IllIIIIlIllIIl	Ljava/lang/Exception;
    //   0	399	9	llIlIIIlIllIIl	C
    //   0	399	6	lIllIIIlIllIIl	D
  }
  
  @Subscribe
  public void drawScreen(EventDrawTooltip lllIllllIllIIl) {
    if (lIIIlIllIll(lllIllllIllIIl.screen instanceof net.minecraft.class_465))
      return; 
    class_1735 IllIllllIllIIl = (class_1735)FabricReflect.getFieldValue(lllIllllIllIIl.screen, IIIIlIIIIl[lIIlIlIIIl[16]], IIIIlIIIIl[lIIlIlIIIl[17]]);
    if (IlIIlIllIll(IllIllllIllIIl))
      return; 
    (new int[lIIlIlIIIl[4]])[lIIlIlIIIl[0]] = IllIllllIllIIl.field_7873;
    (new int[lIIlIlIIIl[4]])[lIIlIlIIIl[2]] = IllIllllIllIIl.field_7872;
    if (lIIIlIllIll(Arrays.equals(new int[lIIlIlIIIl[4]], this.slotPos))) {
      this.pageCount = lIIlIlIIIl[0];
      this.pages = null;
    } 
    (new int[lIIlIlIIIl[4]])[lIIlIlIIIl[0]] = IllIllllIllIIl.field_7873;
    (new int[lIIlIlIIIl[4]])[lIIlIlIIIl[2]] = IllIllllIllIIl.field_7872;
    this.slotPos = new int[lIIlIlIIIl[4]];
    lllIllllIllIIl.matrix.method_22903();
    lllIllllIllIIl.matrix.method_22904(0.0D, 0.0D, 300.0D);
    if (llIIlIllIll((getSetting(lIIlIlIIIl[0]).asToggle()).state))
      drawShulkerToolTip(lllIllllIllIIl, IllIllllIllIIl, lllIllllIllIIl.mX, lllIllllIllIIl.mY); 
    if (llIIlIllIll((getSetting(lIIlIlIIIl[2]).asToggle()).state))
      drawBookToolTip(lllIllllIllIIl.matrix, IllIllllIllIIl, lllIllllIllIIl.mX, lllIllllIllIIl.mY); 
    if (llIIlIllIll((getSetting(lIIlIlIIIl[4]).asToggle()).state))
      drawMapToolTip(lllIllllIllIIl.matrix, IllIllllIllIIl, lllIllllIllIIl.mX, lllIllllIllIIl.mY); 
    lllIllllIllIIl.matrix.method_22909();
  }
  
  private static boolean lIlIlIllIll(boolean lllllIlllIlIIl, long IllllIlllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static boolean IllIlIllIll(String lllIlIlllIlIIl, Exception IllIlIlllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 > SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static boolean IlIIlIllIll(char IlllIIlllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  public void drawShulkerToolTip(EventDrawTooltip lllllIllIllIIl, double IIlIlIllIllIIl, long IlIIlIllIllIIl, Exception IIIIlIllIllIIl) {
    if (lIIIlIllIll(IIlIlIllIllIIl.method_7677().method_7909() instanceof class_1747))
      return; 
    if (lIIIlIllIll(((class_1747)IIlIlIllIllIIl.method_7677().method_7909()).method_7711() instanceof net.minecraft.class_2480) && lIIIlIllIll(((class_1747)IIlIlIllIllIIl.method_7677().method_7909()).method_7711() instanceof net.minecraft.class_2281) && lIIIlIllIll(((class_1747)IIlIlIllIllIIl.method_7677().method_7909()).method_7711() instanceof net.minecraft.class_3708) && lIIIlIllIll(((class_1747)IIlIlIllIllIIl.method_7677().method_7909()).method_7711() instanceof net.minecraft.class_2315) && lIIIlIllIll(((class_1747)IIlIlIllIllIIl.method_7677().method_7909()).method_7711() instanceof net.minecraft.class_2377) && lIIIlIllIll(((class_1747)IIlIlIllIllIIl.method_7677().method_7909()).method_7711() instanceof net.minecraft.class_2363))
      return; 
    List<class_1799> llIllIllIllIIl = ItemContentUtils.getItemsInContainer(IIlIlIllIllIIl.method_7677());
    int i = lIIlIlIIIl[2];
    Iterator<class_1799> iterator1 = llIllIllIllIIl.iterator();
    while (llIIlIllIll(iterator1.hasNext())) {
      class_1799 IIlIIlllIllIIl = iterator1.next();
      if (IIlIlIllIll(IIlIIlllIllIIl.method_7909(), class_1802.field_8162)) {
        i = lIIlIlIIIl[0];
        "".length();
        if (-"   ".length() >= 0)
          return; 
        break;
      } 
      "".length();
      if ((0xBC ^ 0xC7 ^ 123 + 15 - 36 + 25) > (0x64 ^ 0x42 ^ 0xA4 ^ 0x86))
        return; 
    } 
    if (llIIlIllIll(i))
      return; 
    class_2248 lIIllIllIllIIl = ((class_1747)IIlIlIllIllIIl.method_7677().method_7909()).method_7711();
    if (lIIIlIllIll((getSetting(lIIlIlIIIl[0]).asToggle().getChild(lIIlIlIIIl[0]).asMode()).mode)) {
      lllllIllIllIIl.setCancelled(lIIlIlIIIl[2]);
      "".length();
      if (-" ".length() > 0)
        return; 
    } else if (lIlIlIllIll((getSetting(lIIlIlIIIl[0]).asToggle().getChild(lIIlIlIIIl[0]).asMode()).mode, lIIlIlIIIl[2])) {
      (new class_2561[lIIlIlIIIl[2]])[lIIlIlIIIl[0]] = IIlIlIllIllIIl.method_7677().method_7964();
      lllllIllIllIIl.text = Lists.transform(Arrays.asList(new class_2561[lIIlIlIIIl[2]]), class_2561::method_30937);
    } 
    if (lIIIlIllIll((getSetting(lIIlIlIIIl[0]).asToggle().getChild(lIIlIlIIIl[0]).asMode()).mode)) {
      "".length();
      if ("  ".length() <= 0)
        return; 
    } else {
    
    } 
    long l = IlIIlIllIllIIl;
    if (!lIIIlIllIll(lIIllIllIllIIl instanceof net.minecraft.class_2377) || !lIIIlIllIll(lIIllIllIllIIl instanceof net.minecraft.class_2315) || llIIlIllIll(lIIllIllIllIIl instanceof net.minecraft.class_2363)) {
      "".length();
      if (null != null)
        return; 
    } else {
    
    } 
    int lllIlIllIllIIl = lIIlIlIIIl[0];
    if (llIIlIllIll(lIIllIllIllIIl instanceof net.minecraft.class_2363)) {
      renderTooltipBox(lllllIllIllIIl.matrix, llIIlIllIllIIl, l - lIIlIlIIIl[20], lIIlIlIIIl[14], lIIlIlIIIl[21], lIIlIlIIIl[2]);
      "".length();
      if (((0x6B ^ 0x31) & (0x4E ^ 0x14 ^ 0xFFFFFFFF)) != ((0xA5 ^ 0x89) & (0x4 ^ 0x28 ^ 0xFFFFFFFF)))
        return; 
    } else if (llIIlIllIll(lIIllIllIllIIl instanceof net.minecraft.class_2377)) {
      renderTooltipBox(lllllIllIllIIl.matrix, llIIlIllIllIIl, l - lIIlIlIIIl[20], lIIlIlIIIl[14], lIIlIlIIIl[22], lIIlIlIIIl[2]);
      "".length();
      if ("  ".length() <= " ".length())
        return; 
    } else if (llIIlIllIll(lIIllIllIllIIl instanceof net.minecraft.class_2315)) {
      renderTooltipBox(lllllIllIllIIl.matrix, llIIlIllIllIIl, l - lIIlIlIIIl[20], lIIlIlIIIl[14], lIIlIlIIIl[23], lIIlIlIIIl[2]);
      "".length();
      if (null != null)
        return; 
    } else {
      renderTooltipBox(lllllIllIllIIl.matrix, llIIlIllIllIIl, l - lIIlIlIIIl[24], lIIlIlIIIl[21], lIIlIlIIIl[23], lIIlIlIIIl[2]);
    } 
    Iterator<class_1799> iterator2 = llIllIllIllIIl.iterator();
    while (llIIlIllIll(iterator2.hasNext())) {
      class_1799 lIIIIlllIllIIl = iterator2.next();
      if (IllIlIllIll(lllIlIllIllIIl, lIIlIlIIIl[25])) {
        "".length();
        if ("  ".length() <= 0)
          return; 
        break;
      } 
      int llIIIlllIllIIl = llIIlIllIllIIl + lIIlIlIIIl[11] + lIIlIlIIIl[26] * lllIlIllIllIIl % lIIlIlIIIl[10];
      int IlIIIlllIllIIl = l - lIIlIlIIIl[27] + lIIlIlIIIl[26] * lllIlIllIllIIl / lIIlIlIIIl[10];
      (this.mc.method_1480()).field_4730 = 400.0F;
      this.mc.method_1480().method_4010(lIIIIlllIllIIl, llIIIlllIllIIl, IlIIIlllIllIIl);
      if (IllIlIllIll(lIIIIlllIllIIl.method_7947(), lIIlIlIIIl[2])) {
        "".length();
        if ("  ".length() == 0)
          return; 
      } else {
      
      } 
      this.mc.method_1480().method_4022(this.mc.field_1772, lIIIIlllIllIIl, llIIIlllIllIIl, IlIIIlllIllIIl, IIIIlIIIIl[lIIlIlIIIl[19]]);
      (this.mc.method_1480()).field_4730 = 300.0F;
      lllIlIllIllIIl++;
      "".length();
      if (-" ".length() > -" ".length())
        return; 
    } 
  }
  
  private static boolean lIIllIllIll(float llIllIlllIlIIl, int IlIllIlllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 < SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private void renderTooltipBox(boolean IllllIlIIllIIl, float lIlllIlIIllIIl, int IIlllIlIIllIIl, int llIllIlIIllIIl, byte IlIllIlIIllIIl, boolean IlIIIllIIllIIl) {
    int lIIIIllIIllIIl = lIlllIlIIllIIl + lIIlIlIIIl[13];
    int IIIIIllIIllIIl = IIlllIlIIllIIl - lIIlIlIIIl[13];
    if (llIIlIllIll(IlIIIllIIllIIl)) {
      if (IllIlIllIll(lIIIIllIIllIIl + IlIllIlIIllIIl, this.mc.field_1755.field_22789))
        lIIIIllIIllIIl -= lIIlIlIIIl[45] + IlIllIlIIllIIl; 
      if (IllIlIllIll(IIIIIllIIllIIl + llIllIlIIllIIl + lIIlIlIIIl[7], this.mc.field_1755.field_22790))
        IIIIIllIIllIIl = this.mc.field_1755.field_22790 - llIllIlIIllIIl - lIIlIlIIIl[7]; 
    } 
    GL11.glDisable(lIIlIlIIIl[46]);
    GL11.glEnable(lIIlIlIIIl[47]);
    GL11.glDisable(lIIlIlIIIl[48]);
    GL14.glBlendFuncSeparate(lIIlIlIIIl[49], lIIlIlIIIl[50], lIIlIlIIIl[2], lIIlIlIIIl[0]);
    GL11.glShadeModel(lIIlIlIIIl[51]);
    fillGradient(IllllIlIIllIIl, lIIIIllIIllIIl - lIIlIlIIIl[3], IIIIIllIIllIIl - lIIlIlIIIl[5], lIIIIllIIllIIl + IlIllIlIIllIIl + lIIlIlIIIl[3], IIIIIllIIllIIl - lIIlIlIIIl[3], lIIlIlIIIl[52], lIIlIlIIIl[52]);
    fillGradient(IllllIlIIllIIl, lIIIIllIIllIIl - lIIlIlIIIl[3], IIIIIllIIllIIl + llIllIlIIllIIl + lIIlIlIIIl[3], lIIIIllIIllIIl + IlIllIlIIllIIl + lIIlIlIIIl[3], IIIIIllIIllIIl + llIllIlIIllIIl + lIIlIlIIIl[5], lIIlIlIIIl[52], lIIlIlIIIl[52]);
    fillGradient(IllllIlIIllIIl, lIIIIllIIllIIl - lIIlIlIIIl[3], IIIIIllIIllIIl - lIIlIlIIIl[3], lIIIIllIIllIIl + IlIllIlIIllIIl + lIIlIlIIIl[3], IIIIIllIIllIIl + llIllIlIIllIIl + lIIlIlIIIl[3], lIIlIlIIIl[52], lIIlIlIIIl[52]);
    fillGradient(IllllIlIIllIIl, lIIIIllIIllIIl - lIIlIlIIIl[5], IIIIIllIIllIIl - lIIlIlIIIl[3], lIIIIllIIllIIl - lIIlIlIIIl[3], IIIIIllIIllIIl + llIllIlIIllIIl + lIIlIlIIIl[3], lIIlIlIIIl[52], lIIlIlIIIl[52]);
    fillGradient(IllllIlIIllIIl, lIIIIllIIllIIl + IlIllIlIIllIIl + lIIlIlIIIl[3], IIIIIllIIllIIl - lIIlIlIIIl[3], lIIIIllIIllIIl + IlIllIlIIllIIl + lIIlIlIIIl[5], IIIIIllIIllIIl + llIllIlIIllIIl + lIIlIlIIIl[3], lIIlIlIIIl[52], lIIlIlIIIl[52]);
    fillGradient(IllllIlIIllIIl, lIIIIllIIllIIl - lIIlIlIIIl[3], IIIIIllIIllIIl - lIIlIlIIIl[3] + lIIlIlIIIl[2], lIIIIllIIllIIl - lIIlIlIIIl[3] + lIIlIlIIIl[2], IIIIIllIIllIIl + llIllIlIIllIIl + lIIlIlIIIl[3] - lIIlIlIIIl[2], lIIlIlIIIl[53], lIIlIlIIIl[54]);
    fillGradient(IllllIlIIllIIl, lIIIIllIIllIIl + IlIllIlIIllIIl + lIIlIlIIIl[4], IIIIIllIIllIIl - lIIlIlIIIl[3] + lIIlIlIIIl[2], lIIIIllIIllIIl + IlIllIlIIllIIl + lIIlIlIIIl[3], IIIIIllIIllIIl + llIllIlIIllIIl + lIIlIlIIIl[3] - lIIlIlIIIl[2], lIIlIlIIIl[53], lIIlIlIIIl[54]);
    fillGradient(IllllIlIIllIIl, lIIIIllIIllIIl - lIIlIlIIIl[3], IIIIIllIIllIIl - lIIlIlIIIl[3], lIIIIllIIllIIl + IlIllIlIIllIIl + lIIlIlIIIl[3], IIIIIllIIllIIl - lIIlIlIIIl[3] + lIIlIlIIIl[2], lIIlIlIIIl[53], lIIlIlIIIl[53]);
    fillGradient(IllllIlIIllIIl, lIIIIllIIllIIl - lIIlIlIIIl[3], IIIIIllIIllIIl + llIllIlIIllIIl + lIIlIlIIIl[4], lIIIIllIIllIIl + IlIllIlIIllIIl + lIIlIlIIIl[3], IIIIIllIIllIIl + llIllIlIIllIIl + lIIlIlIIIl[3], lIIlIlIIIl[54], lIIlIlIIIl[54]);
    GL11.glShadeModel(lIIlIlIIIl[55]);
    GL11.glDisable(lIIlIlIIIl[47]);
    GL11.glEnable(lIIlIlIIIl[48]);
    GL11.glEnable(lIIlIlIIIl[46]);
  }
  
  private static void llllIIIlIll() {
    IIIIlIIIIl = new String[lIIlIlIIIl[56]];
    IIIIlIIIIl[lIIlIlIIIl[0]] = IIllIIIlIll("Hq9F2UYtX+k=", "QkLuQ");
    IIIIlIIIIl[lIIlIlIIIl[2]] = IIllIIIlIll("JfU2/byqaKY+PQTJbk1gCCtfuLc8H1gkhldTea2f0Hw=", "nrZrH");
    IIIIlIIIIl[lIIlIlIIIl[4]] = IIllIIIlIll("qENvTlUsvogzy0RdY9+hDA==", "TiLpJ");
    IIIIlIIIIl[lIIlIlIIIl[3]] = lIllIIIlIll("pZ6sZdA9IDOZDjx8SXgHQpGMp/wda5Al83Uu4HtK0FE=", "Xruqw");
    IIIIlIIIIl[lIIlIlIIIl[5]] = IlllIIIlIll("GwIkKA==", "RlBGS");
    IIIIlIIIIl[lIIlIlIIIl[6]] = lIllIIIlIll("GmJAG575t4Q=", "qAZwc");
    IIIIlIIIIl[lIIlIlIIIl[7]] = lIllIIIlIll("H0W6L/+3w4c=", "XZHDB");
    IIIIlIIIIl[lIIlIlIIIl[8]] = lIllIIIlIll("xCIMD8Dah/s=", "ntXDb");
    IIIIlIIIIl[lIIlIlIIIl[9]] = IIllIIIlIll("7ClBK4GX2DjghpFi67zdsrdjIOfTeVMq6p1lk0XLKoM=", "zakxI");
    IIIIlIIIIl[lIIlIlIIIl[10]] = IlllIIIlIll("IxkDGBw=", "avlso");
    IIIIlIIIIl[lIIlIlIIIl[11]] = IIllIIIlIll("IGXtf2SE/umVpSzZBoTKeJPttReGIeMD", "nAvuR");
    IIIIlIIIIl[lIIlIlIIIl[12]] = lIllIIIlIll("bRZtCTs7tTM=", "WaGUK");
    IIIIlIIIIl[lIIlIlIIIl[13]] = IlllIIIlIll("Cy0gIVMsKiA6BzE1PHYVNzdvOxIoNg==", "XEOVs");
    IIIIlIIIIl[lIIlIlIIIl[14]] = lIllIIIlIll("zZR9QrTXLjypy4rctqLp9g==", "ALvVa");
    IIIIlIIIIl[lIIlIlIIIl[15]] = lIllIIIlIll("LGPKNTX2IPxY1IPoGqZ+z56nwfksvEZp", "zjzpC");
    IIIIlIIIIl[lIIlIlIIIl[16]] = IlllIIIlIll("HxwcFjAmR05CYw==", "yuyzT");
    IIIIlIIIIl[lIIlIlIIIl[17]] = IIllIIIlIll("8ZkMPLKdaBwcwxFlbE868A==", "vjzer");
    IIIIlIIIIl[lIIlIlIIIl[26]] = lIllIIIlIll("F4cYAP54/94=", "uDLPM");
    IIIIlIIIIl[lIIlIlIIIl[19]] = IIllIIIlIll("0raJ9rg0O3U=", "kawko");
    IIIIlIIIIl[lIIlIlIIIl[29]] = IlllIIIlIll("ITM9CFxR", "qRZmf");
    IIIIlIIIIl[lIIlIlIIIl[30]] = lIllIIIlIll("yWSpneN6L6o=", "dukta");
    IIIIlIIIIl[lIIlIlIIIl[20]] = IlllIIIlIll("OhYSPXBK", "jwuXJ");
    IIIIlIIIIl[lIIlIlIIIl[33]] = IlllIIIlIll("YQ==", "NQqjo");
  }
  
  public Peek() {
    super(IIIIlIIIIl[lIIlIlIIIl[0]], lIIlIlIIIl[1], Category.MISC, IIIIlIIIIl[lIIlIlIIIl[2]], new com.exploiters.xploitclient.setting.base.SettingBase[lIIlIlIIIl[3]]);
  }
  
  private static boolean llIIlIllIll(Exception IIllIIlllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static void IIIIlIllIll() {
    lIIlIlIIIl = new int[68];
    lIIlIlIIIl[0] = (0x4E ^ 0x73) & (0x6F ^ 0x52 ^ 0xFFFFFFFF);
    lIIlIlIIIl[1] = -"  ".length();
    lIIlIlIIIl[2] = " ".length();
    lIIlIlIIIl[3] = "   ".length();
    lIIlIlIIIl[4] = "  ".length();
    lIIlIlIIIl[5] = 0x27 ^ 0x29 ^ 0x14 ^ 0x1E;
    lIIlIlIIIl[6] = 0x6A ^ 0x22 ^ 0xF ^ 0x42;
    lIIlIlIIIl[7] = 0xAF ^ 0xA9;
    lIIlIlIIIl[8] = 0x7F ^ 0x24 ^ 0xE8 ^ 0xB4;
    lIIlIlIIIl[9] = 0x61 ^ 0x69;
    lIIlIlIIIl[10] = 0xA ^ 0x3;
    lIIlIlIIIl[11] = 0xB3 ^ 0xB9;
    lIIlIlIIIl[12] = 0x3C ^ 0x37;
    lIIlIlIIIl[13] = 60 + 90 - 30 + 11 ^ 87 + 69 - 91 + 78;
    lIIlIlIIIl[14] = 0xB0 ^ 0x91 ^ 0xB5 ^ 0x99;
    lIIlIlIIIl[15] = 0x55 ^ 0x5A ^ " ".length();
    lIIlIlIIIl[16] = 0x57 ^ 0x3B ^ 0x6F ^ 0xC;
    lIIlIlIIIl[17] = 0x54 ^ 0x20 ^ 0x6B ^ 0xF;
    lIIlIlIIIl[18] = 47 + 133 - 26 + 34 ^ 43 + 97 - 123 + 147;
    lIIlIlIIIl[19] = 73 + 138 - 44 + 1 ^ 35 + 174 - 70 + 47;
    lIIlIlIIIl[20] = 0x40 ^ 0x55;
    lIIlIlIIIl[21] = 0x13 ^ 0x3C;
    lIIlIlIIIl[22] = 0x9 ^ 0x4E ^ 0x10 ^ 0x5;
    lIIlIlIIIl[23] = 98 + 147 - 143 + 48;
    lIIlIlIIIl[24] = 0xF1 ^ 0xC6;
    lIIlIlIIIl[25] = 0xE8 ^ 0xAB ^ 0xF8 ^ 0xA1;
    lIIlIlIIIl[26] = 0x99 ^ 0x8D ^ 0xC7 ^ 0xC2;
    lIIlIlIIIl[27] = 0x51 ^ 0xA ^ 0xBB ^ 0xA5;
    lIIlIlIIIl[28] = 152 + 5 - 0 + 52 ^ 124 + 56 - 107 + 56;
    lIIlIlIIIl[29] = 0x9D ^ 0x81 ^ 0x19 ^ 0x16;
    lIIlIlIIIl[30] = 138 + 60 - 154 + 118 ^ 78 + 103 - 86 + 87;
    lIIlIlIIIl[31] = 0xBD ^ 0x9A ^ 0x74 ^ 0x6B;
    lIIlIlIIIl[32] = 0xE9 ^ 0xBD ^ 0x8A ^ 0xA6;
    lIIlIlIIIl[33] = 0x1C ^ 0x2C ^ 0xD ^ 0x2B;
    lIIlIlIIIl[34] = 0xD3 ^ 0x88 ^ 0xB4 ^ 0xAB;
    lIIlIlIIIl[35] = 0x45 ^ 0x39 ^ 0x4A ^ 0x16;
    lIIlIlIIIl[36] = -" ".length();
    lIIlIlIIIl[37] = 0xFFFFECE9 & 0xD3D6;
    lIIlIlIIIl[38] = "   ".length() + (0xF8 ^ 0x81) - (0x9B ^ 0xA9) + (0x1F ^ 0x29);
    lIIlIlIIIl[39] = 224 + 48 - 26 + 5 + 109 + 143 - 146 + 74 - (0xFFFFA9FA & 0x5715) + (0x4A ^ 0x2A);
    lIIlIlIIIl[40] = 8 + 123 - 27 + 23;
    lIIlIlIIIl[41] = (0x69 ^ 0x1C) + (0x4A ^ 0x53) - (0x2B ^ 0xA) + (0x4F ^ 0x55);
    lIIlIlIIIl[42] = 175 + 141 - 235 + 99;
    lIIlIlIIIl[43] = 64 + 39 - -18 + 99;
    lIIlIlIIIl[44] = -(0xFFFFC4FE & 0x1003B01);
    lIIlIlIIIl[45] = 0x91 ^ 0x8D;
    lIIlIlIIIl[46] = 0xFFFFFFED & 0xDF3;
    lIIlIlIIIl[47] = 0xFFFFEFFA & 0x1BE7;
    lIIlIlIIIl[48] = 0xFFFFDFDE & 0x2BE1;
    lIIlIlIIIl[49] = 0xFFFF8B9B & 0x7766;
    lIIlIlIIIl[50] = -(0xFFFFF89D & 0x5FFF) & 0xFFFFFBDF & 0x5FBF;
    lIIlIlIIIl[51] = -(0xFFFFCCFB & 0x73DD) & 0xFFFFFFFF & 0x5DD9;
    lIIlIlIIIl[52] = -(0xFFFFFFF0 & 0xFEFFFFF);
    lIIlIlIIIl[53] = 0xFFFFB8FF & 0x505047FF;
    lIIlIlIIIl[54] = 0xFFFFE87F & 0x502817FF;
    lIIlIlIIIl[55] = -(0xFFFF96FF & 0x6BFD) & 0xFFFFFFFF & 0x1FFC;
    lIIlIlIIIl[56] = 8 + 135 - -12 + 14 ^ 121 + 137 - 180 + 112;
    lIIlIlIIIl[57] = 89 + 130 - 205 + 178 ^ 134 + 115 - 184 + 82;
    lIIlIlIIIl[58] = -(0x24 ^ 0x3B);
    lIIlIlIIIl[59] = 123 + 117 - 163 + 51 + (0x7F ^ 0x6B) - -(0x36 ^ 0x2D) + (0x7D ^ 0x68);
    lIIlIlIIIl[60] = 147 + 77 - 72 + 3;
    lIIlIlIIIl[61] = 39 + 135 - 152 + 129;
    lIIlIlIIIl[62] = 0xDC ^ 0x91;
    lIIlIlIIIl[63] = ((0xD ^ 0x3E) & (0xB8 ^ 0x8B ^ 0xFFFFFFFF)) + 121 + 17 - 19 + 30 - (0xCD ^ 0x8B) + 31 + 34 - -64 + 1;
    lIIlIlIIIl[64] = 101 + 88 - 182 + 151 + (0x31 ^ 0x2C) - (0x10 ^ 0xF) + "   ".length();
    lIIlIlIIIl[65] = 0xD ^ 0x63;
    lIIlIlIIIl[66] = 0xC ^ 0x67 ^ 0x71 ^ 0x59;
    lIIlIlIIIl[67] = 109 + 149 - 82 + 34 ^ 63 + 90 - 114 + 101;
  }
  
  private static String lIllIIIlIll(String IllIIllllIlIIl, String lIIlIllllIlIIl) {
    try {
      SecretKeySpec llIlIllllIlIIl = new SecretKeySpec(Arrays.copyOf(MessageDigest.getInstance(DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[lIIlIlIIIl[0]]]).digest(lIIlIllllIlIIl.getBytes(StandardCharsets.UTF_8)), DESEncryptionAlgorithm.lIlllllIlllII[lIIlIlIIIl[2]]), DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[lIIlIlIIIl[4]]]);
      Cipher lllIIllllIlIIl = Cipher.getInstance(DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[lIIlIlIIIl[3]]]);
      lllIIllllIlIIl.init(DESEncryptionAlgorithm.lIlllllIlllII[lIIlIlIIIl[3]], llIlIllllIlIIl);
      return new String(lllIIllllIlIIl.doFinal(Base64.getDecoder().decode(IllIIllllIlIIl.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception IlIlIllllIlIIl) {
      Exception exception1;
      exception1.printStackTrace();
      return null;
    } 
  }
  
  private void fillGradient(class_4587 lIlIIIlIIllIIl, int IIlIIIlIIllIIl, int llIIllIIIllIIl, short IlIIllIIIllIIl, String lIIIllIIIllIIl, int IIIIIIlIIllIIl, int llllllIIIllIIl) {
    float IlllllIIIllIIl = (IIIIIIlIIllIIl >> lIIlIlIIIl[18] & lIIlIlIIIl[39]) / 255.0F;
    float lIllllIIIllIIl = (IIIIIIlIIllIIl >> lIIlIlIIIl[17] & lIIlIlIIIl[39]) / 255.0F;
    float IIllllIIIllIIl = (IIIIIIlIIllIIl >> lIIlIlIIIl[9] & lIIlIlIIIl[39]) / 255.0F;
    float llIlllIIIllIIl = (IIIIIIlIIllIIl & lIIlIlIIIl[39]) / 255.0F;
    float IlIlllIIIllIIl = (llllllIIIllIIl >> lIIlIlIIIl[18] & lIIlIlIIIl[39]) / 255.0F;
    float lIIlllIIIllIIl = (llllllIIIllIIl >> lIIlIlIIIl[17] & lIIlIlIIIl[39]) / 255.0F;
    float IIIlllIIIllIIl = (llllllIIIllIIl >> lIIlIlIIIl[9] & lIIlIlIIIl[39]) / 255.0F;
    float lllIllIIIllIIl = (llllllIIIllIIl & lIIlIlIIIl[39]) / 255.0F;
    class_289 IllIllIIIllIIl = class_289.method_1348();
    class_287 lIlIllIIIllIIl = IllIllIIIllIIl.method_1349();
    lIlIllIIIllIIl.method_1328(lIIlIlIIIl[8], class_290.field_1576);
    lIlIllIIIllIIl.method_22912(IIlIIIlIIllIIl, llIIllIIIllIIl, 0.0D).method_22915(lIllllIIIllIIl, IIllllIIIllIIl, llIlllIIIllIIl, IlllllIIIllIIl).method_1344();
    lIlIllIIIllIIl.method_22912(IIlIIIlIIllIIl, lIIIllIIIllIIl, 0.0D).method_22915(lIllllIIIllIIl, IIllllIIIllIIl, llIlllIIIllIIl, IlllllIIIllIIl).method_1344();
    lIlIllIIIllIIl.method_22912(IlIIllIIIllIIl, lIIIllIIIllIIl, 0.0D).method_22915(lIIlllIIIllIIl, IIIlllIIIllIIl, lllIllIIIllIIl, IlIlllIIIllIIl).method_1344();
    lIlIllIIIllIIl.method_22912(IlIIllIIIllIIl, llIIllIIIllIIl, 0.0D).method_22915(lIIlllIIIllIIl, IIIlllIIIllIIl, lllIllIIIllIIl, IlIlllIIIllIIl).method_1344();
    IllIllIIIllIIl.method_1350();
  }
  
  static {
    IIIIlIllIll();
    llllIIIlIll();
  }
  
  private int getRenderColorFix(int lIlllllIIllIIl, float IllIlllIIllIIl) {
    if (lIlIlIllIll(IllIlllIIllIIl, lIIlIlIIIl[3])) {
      "".length();
      if ("  ".length() < 0)
        return (0x47 ^ 0x76) & (0x5C ^ 0x6D ^ 0xFFFFFFFF); 
    } else if (lIlIlIllIll(IllIlllIIllIIl, lIIlIlIIIl[4])) {
      "".length();
      if (-(75 + 49 - 23 + 78 ^ 166 + 55 - 39 + 0) >= 0)
        return (" ".length() ^ 0x89 ^ 0x82) & (63 + 85 - 115 + 147 ^ 13 + 21 - 33 + 189 ^ -" ".length()); 
    } else if (lIIIlIllIll(IllIlllIIllIIl)) {
      "".length();
      if (null != null)
        return (0xF5 ^ 0xB7 ^ 0xEE ^ 0xA3) & (0x15 ^ 0x2A ^ 0x58 ^ 0x68 ^ -" ".length()); 
    } else {
    
    } 
    int llIllllIIllIIl = lIIlIlIIIl[43];
    int IlIllllIIllIIl = (lIlllllIIllIIl >> lIIlIlIIIl[17] & lIIlIlIIIl[39]) * llIllllIIllIIl / lIIlIlIIIl[39];
    int lIIllllIIllIIl = (lIlllllIIllIIl >> lIIlIlIIIl[9] & lIIlIlIIIl[39]) * llIllllIIllIIl / lIIlIlIIIl[39];
    int IIIllllIIllIIl = (lIlllllIIllIIl & lIIlIlIIIl[39]) * llIllllIIllIIl / lIIlIlIIIl[39];
    return lIIlIlIIIl[44] | IlIllllIIllIIl << lIIlIlIIIl[17] | lIIllllIIllIIl << lIIlIlIIIl[9] | IIIllllIIllIIl;
  }
  
  private static String IIllIIIlIll(long lllIlIIIIllIIl, Exception llIllIIIIllIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   56: iconst_4
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/Peek.lIIlIlIIIl : [I
    //   71: iconst_4
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	0	IIIIIlIIIllIIl	S
    //   0	113	1	lllllIIIIllIIl	Ljava/lang/String;
    //   47	59	2	lIIllIIIIllIIl	Ljavax/crypto/spec/SecretKeySpec;
    //   64	42	3	IlIllIIIIllIIl	Ljavax/crypto/Cipher;
    //   0	113	2	llIllIIIIllIIl	Ljava/lang/Exception;
    //   0	113	1	IllIlIIIIllIIl	S
    //   0	113	0	lllIlIIIIllIIl	J
    //   0	113	1	IIIllIIIIllIIl	Ljava/lang/Exception;
    //   0	113	0	lIlllIIIIllIIl	Ljava/lang/String;
    //   0	113	2	lIlIlIIIIllIIl	S
    //   0	113	3	IIlIlIIIIllIIl	Ljava/lang/Exception;
    //   0	113	3	IllllIIIIllIIl	I
    //   107	4	2	IIlllIIIIllIIl	Ljava/lang/Exception;
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\Peek.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */