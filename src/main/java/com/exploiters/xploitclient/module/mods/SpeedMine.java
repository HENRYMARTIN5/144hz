package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventTick;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.google.common.eventbus.Subscribe;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.BlowfishEncryptionAlgorithm;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;

public class SpeedMine extends Module {
  private static boolean IlIIIlIIlll(boolean IlIlIlIlIlIIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static String IIIIlIIIlll(String lIlIllIlIlIIIl, String IlllIlIlIlIIIl) {
    try {
      SecretKeySpec lIIIllIlIlIIIl = new SecretKeySpec(MessageDigest.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IIIIIIlIIl[0]]]).digest(IlllIlIlIlIIIl.getBytes(StandardCharsets.UTF_8)), BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IIIIIIlIIl[2]]]);
      Cipher IlIIllIlIlIIIl = Cipher.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IIIIIIlIIl[4]]]);
      IlIIllIlIlIIIl.init(BlowfishEncryptionAlgorithm.lllIIlIIllIlI[IIIIIIlIIl[4]], lIIIllIlIlIIIl);
      return new String(IlIIllIlIlIIIl.doFinal(Base64.getDecoder().decode(lIlIllIlIlIIIl.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception IIlIllIlIlIIIl) {
      llIIllIlIlIIIl.printStackTrace();
      return null;
    } 
  }
  
  private static void IIIIIlIIlll() {
    IIIIIIlIIl = new int[24];
    IIIIIIlIIl[0] = (0xF9 ^ 0xB6) & (0x26 ^ 0x69 ^ 0xFFFFFFFF);
    IIIIIIlIIl[1] = -"  ".length();
    IIIIIIlIIl[2] = " ".length();
    IIIIIIlIIl[3] = 0xC4 ^ 0xC2;
    IIIIIIlIIl[4] = "  ".length();
    IIIIIIlIIl[5] = "   ".length();
    IIIIIIlIIl[6] = 0x0 ^ 0x4;
    IIIIIIlIIl[7] = 0x7 ^ 0x77 ^ 0x53 ^ 0x26;
    IIIIIIlIIl[8] = 0xCE ^ 0x92 ^ 0x3E ^ 0x65;
    IIIIIIlIIl[9] = 0xE ^ 0x6;
    IIIIIIlIIl[10] = 0x14 ^ 0x7B ^ 0xCA ^ 0xAC;
    IIIIIIlIIl[11] = 73 + 128 - 193 + 149 ^ 60 + 131 - 143 + 103;
    IIIIIIlIIl[12] = 0xCB ^ 0x98;
    IIIIIIlIIl[13] = -(18 + 11 - -10 + 115 ^ 24 + 46 - 15 + 78);
    IIIIIIlIIl[14] = 0x91 ^ 0x9C;
    IIIIIIlIIl[15] = (0x54 ^ 0x70) + (0x18 ^ 0x48) - -(0xEB ^ 0xC2) + (0x1 ^ 0x26);
    IIIIIIlIIl[16] = 89 + 25 - 15 + 56;
    IIIIIIlIIl[17] = 88 + 91 - 67 + 39;
    IIIIIIlIIl[18] = 0x49 ^ 0x4;
    IIIIIIlIIl[19] = 139 + 111 - 92 + 51;
    IIIIIIlIIl[20] = 34 + 105 - 16 + 36;
    IIIIIIlIIl[21] = 124 + 15 - 12 + 72 ^ 90 + 14 - -63 + 2;
    IIIIIIlIIl[22] = 0x2E ^ 0x6D;
    IIIIIIlIIl[23] = 0x39 ^ 0x67;
  }
  
  public void onDisable() {
    super.onDisable();
    "".length();
  }
  
  private static String lIIIlIIIlll(long IIIlIlllIlIIIl, char IIlIIlllIlIIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/SpeedMine.IIIIIIlIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/module/mods/SpeedMine.IIIIIIlIIl : [I
    //   36: iconst_2
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/module/mods/SpeedMine.IIIIIIlIIl : [I
    //   51: iconst_4
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/module/mods/SpeedMine.IIIIIIlIIl : [I
    //   68: iconst_5
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/module/mods/SpeedMine.IIIIIIlIIl : [I
    //   83: iconst_5
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	3	IlIlIlllIlIIIl	I
    //   59	59	2	lllIIlllIlIIIl	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	0	lIIIIlllIlIIIl	J
    //   0	125	2	IIlIIlllIlIIIl	C
    //   0	125	0	IIIlIlllIlIIIl	J
    //   119	4	2	IllIIlllIlIIIl	Ljava/lang/Exception;
    //   0	125	0	IlIIIlllIlIIIl	Ljava/lang/String;
    //   0	125	1	IIIIIlllIlIIIl	Ljava/lang/Exception;
    //   0	125	2	lllllIllIlIIIl	Ljava/lang/String;
    //   0	125	3	IllllIllIlIIIl	B
    //   76	42	3	llIIIlllIlIIIl	Ljavax/crypto/Cipher;
    //   0	125	1	lIIlIlllIlIIIl	F
    //   0	125	1	lIlIIlllIlIIIl	Ljava/lang/String;
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  @Subscribe
  public void onTick(EventTick IIIIllllIlIIIl) {
    // Byte code:
    //   0: aload_0
    //   1: getstatic com/exploiters/xploitclient/module/mods/SpeedMine.IIIIIIlIIl : [I
    //   4: iconst_0
    //   5: iaload
    //   6: invokevirtual getSetting : (I)Lcom/exploiters/xploitclient/setting/base/SettingBase;
    //   9: invokevirtual asMode : ()Lcom/exploiters/xploitclient/setting/base/SettingMode;
    //   12: getfield mode : I
    //   15: invokestatic lIIIIlIIlll : (I)Z
    //   18: ifeq -> 74
    //   21: aload_0
    //   22: getfield mc : Lnet/minecraft/class_310;
    //   25: getfield field_1724 : Lnet/minecraft/class_746;
    //   28: new net/minecraft/class_1293
    //   31: dup
    //   32: getstatic net/minecraft/class_1294.field_5917 : Lnet/minecraft/class_1291;
    //   35: getstatic com/exploiters/xploitclient/module/mods/SpeedMine.IIIIIIlIIl : [I
    //   38: iconst_2
    //   39: iaload
    //   40: aload_0
    //   41: getstatic com/exploiters/xploitclient/module/mods/SpeedMine.IIIIIIlIIl : [I
    //   44: iconst_2
    //   45: iaload
    //   46: invokevirtual getSetting : (I)Lcom/exploiters/xploitclient/setting/base/SettingBase;
    //   49: invokevirtual asSlider : ()Lcom/exploiters/xploitclient/setting/base/SettingSlider;
    //   52: invokevirtual getValue : ()D
    //   55: d2i
    //   56: getstatic com/exploiters/xploitclient/module/mods/SpeedMine.IIIIIIlIIl : [I
    //   59: iconst_2
    //   60: iaload
    //   61: isub
    //   62: invokespecial <init> : (Lnet/minecraft/class_1291;II)V
    //   65: invokevirtual method_6092 : (Lnet/minecraft/class_1293;)Z
    //   68: ldc ''
    //   70: invokevirtual length : ()I
    //   73: pop2
    //   74: return
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	75	1	IIIIllllIlIIIl	Lcom/exploiters/xploitclient/event/events/EventTick;
    //   0	75	0	lIIIllllIlIIIl	Lcom/exploiters/xploitclient/module/mods/SpeedMine;
    //   0	75	0	llllIlllIlIIIl	B
  }
  
  private static String llIIlIIIlll(String IllIIIllIlIIIl, String IIIlIIllIlIIIl) {
    String str = new String(Base64.getDecoder().decode(IllIIIllIlIIIl.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder llIIlIllIlIIIl = new StringBuilder();
    char[] IIllIIllIlIIIl = IIIlIIllIlIIIl.toCharArray();
    int llIlIIllIlIIIl = XOREncryptionAlgorithm.lIlIIlIlIIIlI[IIIIIIlIIl[0]];
    char[] arrayOfChar1 = str.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[IIIIIIlIIl[0]];
    while (IlIIIlIIlll(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char llllIIllIlIIIl = arrayOfChar1[j];
      "".length();
      llIlIIllIlIIIl++;
      j++;
      "".length();
      if (IlIIIlIIlll((IIIIIIlIIl[0] + IIIIIIlIIl[12] - IIIIIIlIIl[13] + IIIIIIlIIl[14] ^ IIIIIIlIIl[15] ^ IIIIIIlIIl[16]) & (IIIIIIlIIl[17] + IIIIIIlIIl[18] - IIIIIIlIIl[19] + IIIIIIlIIl[20] ^ IIIIIIlIIl[10] + IIIIIIlIIl[21] - IIIIIIlIIl[22] + IIIIIIlIIl[23] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(llIIlIllIlIIIl);
  }
  
  private static void IIlIlIIIlll() {
    IIllllIIIl = new String[IIIIIIlIIl[11]];
    IIllllIIIl[IIIIIIlIIl[0]] = IIIIlIIIlll("1vACbI6pHFxJDg/sANbI6A==", "xJOdn");
    IIllllIIIl[IIIIIIlIIl[2]] = lIIIlIIIlll("rWgN3eY/SFRQtKmR+BPSwtQuHOk37ZmIkyu9rn0DaZ9LPIsBzreCZQ==", "JHHzV");
    IIllllIIIl[IIIIIIlIIl[4]] = lIIIlIIIlll("itxVB+u04V8=", "gRVfD");
    IIllllIIIl[IIIIIIlIIl[5]] = IIIIlIIIlll("kKbFr0ugoB0=", "TikQz");
    IIllllIIIl[IIIIIIlIIl[6]] = lIIIlIIIlll("e18t1kYYZJM=", "UryyJ");
    IIllllIIIl[IIIIIIlIIl[7]] = IIIIlIIIlll("LUum2rh7Xjs07Ne2eV5qPQ==", "KKENM");
    IIllllIIIl[IIIIIIlIIl[3]] = llIIlIIIlll("CR4bFA4lBho=", "Jqtxj");
    IIllllIIIl[IIIIIIlIIl[8]] = lIIIlIIIlll("2dKPWA6jMmoPRWVSfGFCwg==", "SAXaY");
    IIllllIIIl[IIIIIIlIIl[9]] = lIIIlIIIlll("0p0r+OJk6jy2VAI+pTK96Q==", "HgqKY");
    IIllllIIIl[IIIIIIlIIl[10]] = IIIIlIIIlll("dTV5jUK6XejsBgs7nvE70Q==", "tDmav");
  }
  
  private static boolean lIIIIlIIlll(Exception IIIlIlIlIlIIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  static {
    IIIIIlIIlll();
    IIlIlIIIlll();
  }
  
  public SpeedMine() {
    super(IIllllIIIl[IIIIIIlIIl[0]], IIIIIIlIIl[1], Category.EXPLOITS, IIllllIIIl[IIIIIIlIIl[2]], new com.exploiters.xploitclient.setting.base.SettingBase[IIIIIIlIIl[3]]);
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\SpeedMine.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */