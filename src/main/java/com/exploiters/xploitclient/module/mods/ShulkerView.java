package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventDrawOverlay;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.exploiters.xploitclient.utils.ColorUtils;
import com.exploiters.xploitclient.utils.ItemContentUtils;
import com.exploiters.xploitclient.utils.RenderUtils;
import com.google.common.eventbus.Subscribe;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import java.util.List;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;
import net.minecraft.class_1297;
import net.minecraft.class_1533;
import net.minecraft.class_1799;
import net.minecraft.class_310;
import org.lwjgl.opengl.GL11;

public class ShulkerView extends Module {
  private static String llllIIIIIIIl(String lllllllIIllIl, String lIIIIIIlIllIl) {
    IIIIIIIlIllIl = new String(Base64.getDecoder().decode(lllllllIIllIl.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder IIllIIIlIllIl = new StringBuilder();
    char[] lIlIIIIlIllIl = lIIIIIIlIllIl.toCharArray();
    int IIlIIIIlIllIl = XOREncryptionAlgorithm.lIlIIlIlIIIlI[IIlIIIIlIl[0]];
    char[] arrayOfChar1 = IIIIIIIlIllIl.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[IIlIIIIlIl[0]];
    while (IIIllIIIIIIl(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char IIIlIIIlIllIl = arrayOfChar1[j];
      "".length();
      IIlIIIIlIllIl++;
      j++;
      "".length();
      if (IIIllIIIIIIl((IIlIIIIlIl[0] + IIlIIIIlIl[18] - IIlIIIIlIl[19] + IIlIIIIlIl[20] ^ IIlIIIIlIl[21] ^ IIlIIIIlIl[22]) & (IIlIIIIlIl[23] + IIlIIIIlIl[24] - IIlIIIIlIl[25] + IIlIIIIlIl[26] ^ IIlIIIIlIl[10] + IIlIIIIlIl[27] - IIlIIIIlIl[28] + IIlIIIIlIl[29] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(IIllIIIlIllIl);
  }
  
  private static boolean IIIllIIIIIIl(Exception IIllIllIIllIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static String IIIIlIIIIIIl(short IlIllIIlIllIl, Exception llIllIIlIllIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/ShulkerView.IIlIIIIlIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/ShulkerView.IIlIIIIlIl : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/ShulkerView.IIlIIIIlIl : [I
    //   56: iconst_4
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/ShulkerView.IIlIIIIlIl : [I
    //   71: iconst_4
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	3	lIIIIlIlIllIl	I
    //   0	113	2	IIIllIIlIllIl	C
    //   0	113	1	IlIIIlIlIllIl	Ljava/lang/String;
    //   0	113	0	llIIIlIlIllIl	S
    //   0	113	1	llIllIIlIllIl	Ljava/lang/Exception;
    //   107	4	2	lllllIIlIllIl	Ljava/lang/Exception;
    //   0	113	3	lllIlIIlIllIl	C
    //   0	113	1	lIIllIIlIllIl	Ljava/lang/String;
    //   47	59	2	IIlllIIlIllIl	Ljavax/crypto/spec/SecretKeySpec;
    //   0	113	2	IllllIIlIllIl	Ljava/lang/Exception;
    //   0	113	0	IlIllIIlIllIl	S
    //   0	113	0	IIIIIlIlIllIl	Ljava/lang/String;
    //   64	42	3	lIlllIIlIllIl	Ljavax/crypto/Cipher;
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  private static boolean llIllIIIIIIl(char llllIllIIllIl, double IlllIllIIllIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 < SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static void lllIlIIIIIIl() {
    IIlIIIIlIl = new int[30];
    IIlIIIIlIl[0] = (0x32 ^ 0x12) & (0xA8 ^ 0x88 ^ 0xFFFFFFFF);
    IIlIIIIlIl[1] = -"  ".length();
    IIlIIIIlIl[2] = " ".length();
    IIlIIIIlIl[3] = "   ".length();
    IIlIIIIlIl[4] = "  ".length();
    IIlIIIIlIl[5] = 0x72 ^ 0x76;
    IIlIIIIlIl[6] = 0x27 ^ 0x7 ^ 0x7A ^ 0x5F;
    IIlIIIIlIl[7] = 0x8D ^ 0x8B;
    IIlIIIIlIl[8] = 0xA0 ^ 0xA7;
    IIlIIIIlIl[9] = 2 + 140 - 30 + 45 ^ 55 + 78 - 103 + 119;
    IIlIIIIlIl[10] = 0x8A ^ 0x83;
    IIlIIIIlIl[11] = 0x27 ^ 0x2D;
    IIlIIIIlIl[12] = 0x79 ^ 0x72;
    IIlIIIIlIl[13] = (0xF ^ 0x6E) + (0xBB ^ 0xA7) - "  ".length() + (0x7E ^ 0x69);
    IIlIIIIlIl[14] = 0x9D ^ 0xAF;
    IIlIIIIlIl[15] = 76 + 13 - -10 + 63 ^ 173 + 24 - 28 + 16;
    IIlIIIIlIl[16] = 0x72 ^ 0x62;
    IIlIIIIlIl[17] = 118 + 140 - 134 + 58 ^ 108 + 25 - 61 + 114;
    IIlIIIIlIl[18] = 24 + 95 - 28 + 54 ^ 35 + 121 - -9 + 29;
    IIlIIIIlIl[19] = -(0x60 ^ 0x21 ^ 0xE5 ^ 0xBB);
    IIlIIIIlIl[20] = 104 + 96 - 198 + 129 ^ 28 + 63 - 19 + 70;
    IIlIIIIlIl[21] = 133 + 23 - -14 + 26;
    IIlIIIIlIl[22] = (0xB2 ^ 0xA6) + (0x72 ^ 0x43) - (0x7F ^ 0x79) + (0x7F ^ 0x23);
    IIlIIIIlIl[23] = 119 + 99 - 92 + 25;
    IIlIIIIlIl[24] = 0x1E ^ 0x53;
    IIlIIIIlIl[25] = (0x39 ^ 0x32) + (0xC1 ^ 0x94) - -(0xBB ^ 0xB3) + (0x44 ^ 0x2D);
    IIlIIIIlIl[26] = (0xBC ^ 0xA7) + (0x7A ^ 0x54) - (0xA7 ^ 0xA3) + (0xD7 ^ 0x8D);
    IIlIIIIlIl[27] = 0x74 ^ 0xE ^ 0x8F ^ 0x9B;
    IIlIIIIlIl[28] = 0x48 ^ 0xB;
    IIlIIIIlIl[29] = 218 + 44 - 153 + 135 ^ 51 + 126 - 11 + 4;
  }
  
  private static boolean IlIllIIIIIIl(byte llIIlllIIllIl, String IlIIlllIIllIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  @Subscribe
  public void onDrawOverlay(EventDrawOverlay lIIIIIllIllIl) {
    class_1297 IIIIIIllIllIl = (class_310.method_1551()).field_1692;
    if (IIIllIIIIIIl(IIIIIIllIllIl instanceof class_1533) && IIIllIIIIIIl(((class_1533)IIIIIIllIllIl).method_6940().method_7909().method_7848().toString().contains(llIIIIIlIl[IIlIIIIlIl[12]]))) {
      GL11.glPushMatrix();
      if (lIIllIIIIIIl((getSetting(IIlIIIIlIl[4]).asMode()).mode)) {
        RenderUtils.drawRect((int)getSetting(IIlIIIIlIl[0]).asSlider().getValue(), (int)getSetting(IIlIIIIlIl[2]).asSlider().getValue(), ((int)getSetting(IIlIIIIlIl[0]).asSlider().getValue() + IIlIIIIlIl[13]), ((int)getSetting(IIlIIIIlIl[2]).asSlider().getValue() + IIlIIIIlIl[14]), ColorUtils.guiColour(), 0.5F);
        "".length();
        if (" ".length() < " ".length())
          return; 
      } else if (IlIllIIIIIIl((getSetting(IIlIIIIlIl[4]).asMode()).mode, IIlIIIIlIl[2])) {
        RenderUtils.drawRect((int)getSetting(IIlIIIIlIl[0]).asSlider().getValue(), (int)getSetting(IIlIIIIlIl[2]).asSlider().getValue(), ((int)getSetting(IIlIIIIlIl[0]).asSlider().getValue() + IIlIIIIlIl[13]), ((int)getSetting(IIlIIIIlIl[2]).asSlider().getValue() + IIlIIIIlIl[14]), IIlIIIIlIl[0], 0.5F);
      } 
      List<class_1799> llIIIIllIllIl = ItemContentUtils.getItemsInContainer(((class_1533)IIIIIIllIllIl).method_6940());
      int IIlIIIllIllIl = IIlIIIIlIl[0];
      while (llIllIIIIIIl(IIlIIIllIllIl, IIlIIIIlIl[15])) {
        class_1799 lllIIIllIllIl = llIIIIllIllIl.get(IIlIIIllIllIl);
        int IllIIIllIllIl = (int)getSetting(IIlIIIIlIl[0]).asSlider().getValue() + IIlIIIllIllIl % IIlIIIIlIl[10] * IIlIIIIlIl[16];
        int lIlIIIllIllIl = (int)getSetting(IIlIIIIlIl[2]).asSlider().getValue() + IIlIIIllIllIl / IIlIIIIlIl[10] * IIlIIIIlIl[16];
        this.mc.method_1480().method_4010(lllIIIllIllIl, IllIIIllIllIl, lIlIIIllIllIl);
        this.mc.method_1480().method_4025(this.mc.field_1772, lllIIIllIllIl, IllIIIllIllIl, lIlIIIllIllIl);
        IIlIIIllIllIl++;
        "".length();
        if ("  ".length() < 0)
          return; 
      } 
      (this.mc.method_1480()).field_4730 = 0.0F;
      GL11.glPopMatrix();
    } 
  }
  
  static {
    lllIlIIIIIIl();
    IlIIlIIIIIIl();
  }
  
  private static void IlIIlIIIIIIl() {
    llIIIIIlIl = new String[IIlIIIIlIl[17]];
    llIIIIIlIl[IIlIIIIlIl[0]] = llllIIIIIIIl("NiURBh8APzIDERI=", "eMdjt");
    llIIIIIlIl[IIlIIIIlIl[2]] = llllIIIIIIIl("LzghDHYUPysJPxY3ZAMiWDFkET4NPC8HJFg5MEIhETwoQiUQPzNCLxclZBY+HXAnDTgMNSoWJQ==", "xPDbV");
    llIIIIIlIl[IIlIIIIlIl[4]] = IIIIlIIIIIIl("A0Fb3MU4h2I=", "EWeAY");
    llIIIIIlIl[IIlIIIIlIl[3]] = llllIIIIIIIl("F3E7Dj4dNTEPMBs0Kw==", "oQXaQ");
    llIIIIIlIl[IIlIIIIlIl[5]] = lIIIlIIIIIIl("dFrDFCWO90o=", "YkCGQ");
    llIIIIIlIl[IIlIIIIlIl[6]] = llllIIIIIIIl("PWgJLSg2LAMsJjAtGQ==", "DHjBG");
    llIIIIIlIl[IIlIIIIlIl[7]] = IIIIlIIIIIIl("/Dg/6ihTf5o=", "IvVgV");
    llIIIIIlIl[IIlIIIIlIl[8]] = lIIIlIIIIIIl("KNF+J2qvC0Oacrrck5Z0Zw==", "hCpvu");
    llIIIIIlIl[IIlIIIIlIl[9]] = llllIIIIIIIl("EiYkGT4=", "PJEzU");
    llIIIIIlIl[IIlIIIIlIl[10]] = llllIIIIIIIl("Jh0JGyg=", "eqlzZ");
    llIIIIIlIl[IIlIIIIlIl[11]] = IIIIlIIIIIIl("O0yHgmNGS13NHVy+ENrX/EVL6MD8RoII", "Ltdse");
    llIIIIIlIl[IIlIIIIlIl[12]] = lIIIlIIIIIIl("FWNU503P2i8=", "Upkhq");
  }
  
  private static boolean lIIllIIIIIIl(double IlIlIllIIllIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  public ShulkerView() {
    super(llIIIIIlIl[IIlIIIIlIl[0]], IIlIIIIlIl[1], Category.RENDER, llIIIIIlIl[IIlIIIIlIl[2]], new com.exploiters.xploitclient.setting.base.SettingBase[IIlIIIIlIl[3]]);
  }
  
  private static String lIIIlIIIIIIl(short llIlIlIlIllIl, String llllIlIlIllIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/ShulkerView.IIlIIIIlIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/module/mods/ShulkerView.IIlIIIIlIl : [I
    //   36: iconst_2
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/module/mods/ShulkerView.IIlIIIIlIl : [I
    //   51: iconst_4
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/module/mods/ShulkerView.IIlIIIIlIl : [I
    //   68: iconst_3
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/module/mods/ShulkerView.IIlIIIIlIl : [I
    //   83: iconst_3
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   59	59	2	lIIIllIlIllIl	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	3	IIIlIlIlIllIl	F
    //   0	125	3	IIlIllIlIllIl	I
    //   0	125	2	lIIlIlIlIllIl	D
    //   0	125	1	IlIlIlIlIllIl	J
    //   0	125	1	llllIlIlIllIl	Ljava/lang/String;
    //   0	125	0	IlIIllIlIllIl	J
    //   0	125	0	llIlIlIlIllIl	S
    //   0	125	0	IIllIlIlIllIl	Ljava/lang/String;
    //   119	4	2	IIIIllIlIllIl	Ljava/lang/Exception;
    //   0	125	2	IlllIlIlIllIl	C
    //   0	125	1	llIIllIlIllIl	F
    //   76	42	3	lIllIlIlIllIl	Ljavax/crypto/Cipher;
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\ShulkerView.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */