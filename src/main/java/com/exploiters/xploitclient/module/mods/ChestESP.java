package com.exploiters.xploitclient.module.mods;

import com.exploiters.xploitclient.event.events.EventWorldRender;
import com.exploiters.xploitclient.module.Category;
import com.exploiters.xploitclient.module.Module;
import com.exploiters.xploitclient.utils.RenderUtils;
import com.google.common.eventbus.Subscribe;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import net.minecraft.class_1297;
import net.minecraft.class_1533;
import net.minecraft.class_1802;
import net.minecraft.class_2281;
import net.minecraft.class_2338;
import net.minecraft.class_2350;
import net.minecraft.class_238;
import net.minecraft.class_2586;
import net.minecraft.class_2680;
import net.minecraft.class_2745;
import net.minecraft.class_2769;

public class ChestESP extends Module {
  @Subscribe
  public void onRender(EventWorldRender lllIllIIIIllIIl) {
    List<class_2338> IllIllIIIIllIIl = new ArrayList<>();
    Iterator<class_2586> iterator = this.mc.field_1687.field_9231.iterator();
    while (IllIlIIlll(iterator.hasNext())) {
      class_2586 llIlllIIIIllIIl = iterator.next();
      if (IllIlIIlll(IllIllIIIIllIIl.contains(llIlllIIIIllIIl.method_11016()))) {
        "".length();
        if (((0xB6 ^ 0x9F) & (0x6C ^ 0x45 ^ 0xFFFFFFFF)) < 0)
          return; 
        continue;
      } 
      if ((!lllIlIIlll(llIlllIIIIllIIl instanceof net.minecraft.class_2595) || IllIlIIlll(llIlllIIIIllIIl instanceof net.minecraft.class_3719)) && IllIlIIlll((getSetting(IIIlIlIIl[0]).asToggle()).state)) {
        class_2338 IIllllIIIIllIIl = drawChest(llIlllIIIIllIIl.method_11016());
        if (IIIllIIlll(IIllllIIIIllIIl))
          "".length(); 
        "".length();
        if (((0xDE ^ 0x91 ^ 0xD ^ 0x21) & (0x24 ^ 0x73 ^ 0x3F ^ 0xB ^ -" ".length())) < -" ".length())
          return; 
      } else if (IllIlIIlll(llIlllIIIIllIIl instanceof net.minecraft.class_2611) && IllIlIIlll((getSetting(IIIlIlIIl[2]).asToggle()).state)) {
        RenderUtils.drawFilledBox(new class_238(llIlllIIIIllIIl.method_11016().method_10263() + 0.06D, llIlllIIIIllIIl.method_11016().method_10264(), llIlllIIIIllIIl.method_11016().method_10260() + 0.06D, llIlllIIIIllIIl.method_11016().method_10263() + 0.94D, llIlllIIIIllIIl.method_11016().method_10264() + 0.875D, llIlllIIIIllIIl.method_11016().method_10260() + 0.94D), 1.0F, 0.05F, 1.0F, 0.7F);
        "".length();
        if ((0x65 ^ 0x61) <= "  ".length())
          return; 
      } else if (IllIlIIlll(llIlllIIIIllIIl instanceof net.minecraft.class_2609) && IllIlIIlll((getSetting(IIIlIlIIl[4]).asToggle()).state)) {
        RenderUtils.drawFilledBox(llIlllIIIIllIIl.method_11016(), 0.5F, 0.5F, 0.5F, 0.7F);
        "".length();
        if (-(0xCC ^ 0x9F ^ 0xEE ^ 0xB9) > 0)
          return; 
      } else if (IllIlIIlll(llIlllIIIIllIIl instanceof net.minecraft.class_2601) && IllIlIIlll((getSetting(IIIlIlIIl[5]).asToggle()).state)) {
        RenderUtils.drawFilledBox(llIlllIIIIllIIl.method_11016(), 0.55F, 0.55F, 0.7F, 0.7F);
        "".length();
        if (" ".length() == ((0x96 ^ 0x9B ^ 0x8 ^ 0x52) & (0xB7 ^ 0x86 ^ 0x4F ^ 0x29 ^ -" ".length())))
          return; 
      } else if (IllIlIIlll(llIlllIIIIllIIl instanceof net.minecraft.class_2614) && IllIlIIlll((getSetting(IIIlIlIIl[6]).asToggle()).state)) {
        RenderUtils.drawFilledBox(llIlllIIIIllIIl.method_11016(), 0.45F, 0.45F, 0.6F, 0.7F);
        "".length();
        if ("  ".length() < " ".length())
          return; 
      } else if (IllIlIIlll(llIlllIIIIllIIl instanceof net.minecraft.class_2627) && IllIlIIlll((getSetting(IIIlIlIIl[7]).asToggle()).state)) {
        RenderUtils.drawFilledBox(llIlllIIIIllIIl.method_11016(), 0.5F, 0.2F, 1.0F, 0.7F);
        "".length();
        if ("  ".length() >= (0x33 ^ 0x37))
          return; 
      } else if (IllIlIIlll(llIlllIIIIllIIl instanceof net.minecraft.class_2589) && IllIlIIlll((getSetting(IIIlIlIIl[8]).asToggle()).state)) {
        RenderUtils.drawFilledBox(llIlllIIIIllIIl.method_11016(), 0.5F, 0.4F, 0.2F, 0.7F);
      } 
      "".length();
      if (((0xBB ^ 0xBC ^ 0x96 ^ 0xBD) & (0x23 ^ 0x7C ^ 0x1B ^ 0x68 ^ -" ".length())) == -" ".length())
        return; 
    } 
    iterator = this.mc.field_1687.method_18112().iterator();
    while (IllIlIIlll(iterator.hasNext())) {
      class_1297 lIIlllIIIIllIIl = (class_1297)iterator.next();
      if (IllIlIIlll(lIIlllIIIIllIIl instanceof net.minecraft.class_1694) && IllIlIIlll((getSetting(IIIlIlIIl[9]).asToggle()).state)) {
        RenderUtils.drawFilledBox(lIIlllIIIIllIIl.method_5829(), 1.0F, 0.65F, 0.3F, 0.7F);
        "".length();
        if ("  ".length() <= ((0x11 ^ 0x32) & (0xB9 ^ 0x9A ^ 0xFFFFFFFF)))
          return; 
      } else if (IllIlIIlll(lIIlllIIIIllIIl instanceof net.minecraft.class_1696) && IllIlIIlll((getSetting(IIIlIlIIl[10]).asToggle()).state)) {
        RenderUtils.drawFilledBox(lIIlllIIIIllIIl.method_5829(), 0.5F, 0.5F, 0.5F, 0.7F);
        "".length();
        if (((0x97 ^ 0x9D ^ 0x43 ^ 0x76) & (0x70 ^ 0x4B ^ 0x7C ^ 0x78 ^ -" ".length())) >= "   ".length())
          return; 
      } else if (IllIlIIlll(lIIlllIIIIllIIl instanceof net.minecraft.class_1700) && IllIlIIlll((getSetting(IIIlIlIIl[11]).asToggle()).state)) {
        RenderUtils.drawFilledBox(lIIlllIIIIllIIl.method_5829(), 0.45F, 0.45F, 0.6F, 0.7F);
        "".length();
        if (((0x3A ^ 0x30) & (0x1F ^ 0x15 ^ 0xFFFFFFFF)) != 0)
          return; 
      } else if (IllIlIIlll(lIIlllIIIIllIIl instanceof class_1533) && IllIlIIlll((getSetting(IIIlIlIIl[12]).asToggle()).state)) {
        if (lIIllIIlll(((class_1533)lIIlllIIIIllIIl).method_6940().method_7909(), class_1802.field_8162)) {
          RenderUtils.drawFilledBox(lIIlllIIIIllIIl.method_5829(), 0.45F, 0.1F, 0.1F, 0.7F);
          "".length();
          if (-" ".length() >= " ".length())
            return; 
        } else if (lIIllIIlll(((class_1533)lIIlllIIIIllIIl).method_6940().method_7909(), class_1802.field_8204)) {
          if (IlIllIIlll(lIlIlIIlll((lIIlllIIIIllIIl.method_5829()).field_1320 - (lIIlllIIIIllIIl.method_5829()).field_1323, (lIIlllIIIIllIIl.method_5829()).field_1325 - (lIIlllIIIIllIIl.method_5829()).field_1322))) {
            "".length();
            if (-" ".length() > "  ".length())
              return; 
          } else if (IlIllIIlll(lIlIlIIlll((lIIlllIIIIllIIl.method_5829()).field_1325 - (lIIlllIIIIllIIl.method_5829()).field_1322, (lIIlllIIIIllIIl.method_5829()).field_1324 - (lIIlllIIIIllIIl.method_5829()).field_1321))) {
            "".length();
            if (-"  ".length() >= 0)
              return; 
          } else {
          
          } 
          int IlIlllIIIIllIIl = IIIlIlIIl[4];
          if (lllIlIIlll(IlIlllIIIIllIIl)) {
            "".length();
            if (null != null)
              return; 
          } else {
          
          } 
          if (llIllIIlll(IlIlllIIIIllIIl, IIIlIlIIl[2])) {
            "".length();
            if (" ".length() <= 0)
              return; 
          } else {
          
          } 
          if (llIllIIlll(IlIlllIIIIllIIl, IIIlIlIIl[4])) {
            "".length();
            if ((0x5D ^ 0x59) <= 0)
              return; 
          } else {
          
          } 
          RenderUtils.drawFilledBox(lIIlllIIIIllIIl.method_5829().method_1009(0.12D, 0.12D, 0.12D), 0.1F, 0.1F, 0.5F, 0.7F);
          "".length();
          if ((0xED ^ 0x9E ^ 0xC5 ^ 0xB2) == -" ".length())
            return; 
        } else {
          RenderUtils.drawFilledBox(lIIlllIIIIllIIl.method_5829(), 0.1F, 0.45F, 0.1F, 0.7F);
        } 
      } 
      if (IllIlIIlll(lIIlllIIIIllIIl instanceof net.minecraft.class_1531) && IllIlIIlll((getSetting(IIIlIlIIl[13]).asToggle()).state))
        RenderUtils.drawFilledBox(lIIlllIIIIllIIl.method_5829(), 0.5F, 0.4F, 0.1F, 0.7F); 
      "".length();
      if ((0xDA ^ 0xB3 ^ 0xA ^ 0x67) <= "  ".length())
        return; 
    } 
  }
  
  private static String lIlllIlIll(long IIIIIlllllIlIIl, String lllIlIllllIlIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   36: iconst_2
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   51: iconst_4
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   68: iconst_5
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   83: iconst_5
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	0	lIIllIllllIlIIl	I
    //   0	125	3	IlIIIlllllIlIIl	I
    //   0	125	0	IIIIIlllllIlIIl	J
    //   119	4	2	IllllIllllIlIIl	Ljava/lang/Exception;
    //   0	125	2	lllIlIllllIlIIl	Ljava/lang/String;
    //   0	125	1	lIIIIlllllIlIIl	F
    //   0	125	3	IllIlIllllIlIIl	B
    //   0	125	1	IIIllIllllIlIIl	F
    //   0	125	2	IIlllIllllIlIIl	C
    //   0	125	0	IlIllIllllIlIIl	Ljava/lang/String;
    //   76	42	3	llIllIllllIlIIl	Ljavax/crypto/Cipher;
    //   59	59	2	lllllIllllIlIIl	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	1	lIlllIllllIlIIl	Ljava/lang/String;
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  private static boolean IllIlIIlll(Exception IlIlIIllllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static boolean IIIllIIlll(float IIIIlIllllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static String IllllIlIll(String IIIIllllllIlIIl, long lIIlIlllllIlIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   56: iconst_4
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   71: iconst_4
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	2	IIIlIlllllIlIIl	S
    //   0	113	3	lIIIllllllIlIIl	I
    //   0	113	1	llIlIlllllIlIIl	Ljava/lang/Exception;
    //   107	4	2	llllIlllllIlIIl	Ljava/lang/Exception;
    //   0	113	0	IlIlIlllllIlIIl	S
    //   0	113	1	lIIlIlllllIlIIl	J
    //   0	113	3	lllIIlllllIlIIl	F
    //   0	113	1	IlIIllllllIlIIl	Ljava/lang/String;
    //   0	113	0	IIIIllllllIlIIl	Ljava/lang/String;
    //   0	113	2	IlllIlllllIlIIl	Ljava/lang/Exception;
    //   47	59	2	IIllIlllllIlIIl	Ljavax/crypto/spec/SecretKeySpec;
    //   0	113	0	llIIllllllIlIIl	S
    //   64	42	3	lIllIlllllIlIIl	Ljavax/crypto/Cipher;
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  private static void IIlIlIIlll() {
    IIIlIlIIl = new int[27];
    IIIlIlIIl[0] = (35 + 14 - -73 + 5 ^ 0xBB ^ 0xC3) & (151 + 3 - 28 + 29 ^ 2 + 49 - -10 + 95 ^ -" ".length());
    IIIlIlIIl[1] = -"  ".length();
    IIIlIlIIl[2] = " ".length();
    IIIlIlIIl[3] = 0x97 ^ 0x9B;
    IIIlIlIIl[4] = "  ".length();
    IIIlIlIIl[5] = "   ".length();
    IIIlIlIIl[6] = 0x74 ^ 0x6E ^ 0xAD ^ 0xB3;
    IIIlIlIIl[7] = 0x30 ^ 0x35;
    IIIlIlIIl[8] = 0xD3 ^ 0xB2 ^ 0xDF ^ 0xB8;
    IIIlIlIIl[9] = 0x7A ^ 0x47 ^ 0xB2 ^ 0x88;
    IIIlIlIIl[10] = 0x2 ^ 0x51 ^ 0x50 ^ 0xB;
    IIIlIlIIl[11] = 0x1F ^ 0x16;
    IIIlIlIIl[12] = 0x6F ^ 0x65;
    IIIlIlIIl[13] = 0xD4 ^ 0xC4 ^ 0x13 ^ 0x8;
    IIIlIlIIl[14] = 0x58 ^ 0x53 ^ 0x36 ^ 0x30;
    IIIlIlIIl[15] = 0xCE ^ 0xB2 ^ 0x5C ^ 0x2E;
    IIIlIlIIl[16] = 0x39 ^ 0x6A;
    IIIlIlIIl[17] = -(0x81 ^ 0x9E);
    IIIlIlIIl[18] = (0xF9 ^ 0xBB) + (0xDA ^ 0x86) - 68 + 39 - 75 + 121 + 64 + 188 - 94 + 33;
    IIIlIlIIl[19] = 26 + 24 - -54 + 51;
    IIIlIlIIl[20] = (0xB3 ^ 0x89) + (0x44 ^ 0x32) - 122 + 25 - 119 + 136 + 10 + 101 - -13 + 15;
    IIIlIlIIl[21] = 0x11 ^ 0x65 ^ 0xA ^ 0x33;
    IIIlIlIIl[22] = 166 + 63 - 122 + 61 + (0x47 ^ 0x55) - (0xAF ^ 0xAA) + (0x94 ^ 0x88);
    IIIlIlIIl[23] = (0x63 ^ 0x66) + (0xF4 ^ 0xC5) - -(0xA6 ^ 0xBC) + (0x7C ^ 0x33);
    IIIlIlIIl[24] = 0x5C ^ 0x52 ^ 0x3C ^ 0x5C;
    IIIlIlIIl[25] = 0x5F ^ 0x1C;
    IIIlIlIIl[26] = 0x9A ^ 0x97 ^ 0x6A ^ 0x39;
  }
  
  private static String lllllIlIll(String IlIIIIIIIIllIIl, double llllllllllIlIIl) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   43: iconst_0
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   65: iconst_0
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic IllIlIIlll : (I)Z
    //   80: ifeq -> 239
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   131: iconst_0
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   136: bipush #16
    //   138: iaload
    //   139: iadd
    //   140: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   143: bipush #17
    //   145: iaload
    //   146: isub
    //   147: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   150: bipush #14
    //   152: iaload
    //   153: iadd
    //   154: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   157: bipush #18
    //   159: iaload
    //   160: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   163: bipush #19
    //   165: iaload
    //   166: ixor
    //   167: ixor
    //   168: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   171: bipush #20
    //   173: iaload
    //   174: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   177: bipush #21
    //   179: iaload
    //   180: iadd
    //   181: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   184: bipush #22
    //   186: iaload
    //   187: isub
    //   188: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   191: bipush #23
    //   193: iaload
    //   194: iadd
    //   195: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   198: bipush #11
    //   200: iaload
    //   201: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   204: bipush #24
    //   206: iaload
    //   207: iadd
    //   208: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   211: bipush #25
    //   213: iaload
    //   214: isub
    //   215: getstatic com/exploiters/xploitclient/module/mods/ChestESP.IIIlIlIIl : [I
    //   218: bipush #26
    //   220: iaload
    //   221: iadd
    //   222: ixor
    //   223: ldc ' '
    //   225: invokevirtual length : ()I
    //   228: ineg
    //   229: ixor
    //   230: iand
    //   231: invokestatic IllIlIIlll : (I)Z
    //   234: ifeq -> 70
    //   237: aconst_null
    //   238: areturn
    //   239: aload_2
    //   240: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   243: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	244	5	llIlllllllIlIIl	S
    //   0	244	1	llIIIIIIIIllIIl	Ljava/lang/String;
    //   32	212	2	IlllIIIIIIllIIl	Ljava/lang/StringBuilder;
    //   0	244	1	llllllllllIlIIl	D
    //   37	207	3	lllIIIIIIIllIIl	[C
    //   0	244	0	lIIIIIIIIIllIIl	Ljava/lang/String;
    //   0	244	3	lIllIIIIIIllIIl	J
    //   0	244	2	IIllIIIIIIllIIl	F
    //   0	244	3	lIllllllllIlIIl	D
    //   0	244	8	IIIlllllllIlIIl	Ljava/lang/String;
    //   0	244	4	llIlIIIIIIllIIl	S
    //   0	244	6	lIIlIIIIIIllIIl	S
    //   0	244	7	lIIlllllllIlIIl	F
    //   0	244	0	IlIIIIIIIIllIIl	Ljava/lang/String;
    //   0	244	5	IIIlIIIIIIllIIl	F
    //   0	244	7	lIlIIIIIIIllIIl	D
    //   90	24	8	IlIlIIIIIIllIIl	C
    //   48	196	4	IllIIIIIIIllIIl	I
    //   0	244	6	IlIlllllllIlIIl	B
    //   0	244	8	llllIIIIIIllIIl	S
    //   0	244	2	IlllllllllIlIIl	I
    //   0	244	1	IIlIIIIIIIllIIl	Ljava/lang/String;
    //   0	244	4	IIllllllllIlIIl	I
    //   0	244	0	IIIIIIIIIIllIIl	I
  }
  
  private static int lIlIlIIlll(double paramDouble1, double paramDouble2) {
    return paramDouble1 cmp paramDouble2;
  }
  
  private class_2338 drawChest(Exception lllllIIIIIllIIl) {
    class_2680 IllIIlIIIIllIIl = this.mc.field_1687.method_8320((class_2338)lllllIIIIIllIIl);
    if (lllIlIIlll(IllIIlIIIIllIIl.method_26204() instanceof class_2281)) {
      RenderUtils.drawFilledBox((class_2338)lllllIIIIIllIIl, 1.0F, 0.6F, 0.3F, 0.7F);
      return null;
    } 
    if (lIIllIIlll(IllIIlIIIIllIIl.method_11654((class_2769)class_2281.field_10770), class_2745.field_12569)) {
      RenderUtils.drawFilledBox(new class_238(lllllIIIIIllIIl.method_10263() + 0.06D, lllllIIIIIllIIl.method_10264(), lllllIIIIIllIIl.method_10260() + 0.06D, lllllIIIIIllIIl.method_10263() + 0.94D, lllllIIIIIllIIl.method_10264() + 0.875D, lllllIIIIIllIIl.method_10260() + 0.94D), 1.0F, 0.6F, 0.3F, 0.7F);
      return null;
    } 
    int i = IIIlIlIIl[0];
    int j = IIIlIlIIl[0];
    int k = IIIlIlIIl[0];
    int m = IIIlIlIIl[0];
    class_2350 lIIIIlIIIIllIIl = class_2281.method_9758(IllIIlIIIIllIIl);
    if (lIIllIIlll(lIIIIlIIIIllIIl, class_2350.field_11043)) {
      i = IIIlIlIIl[2];
      "".length();
      if ((0x49 ^ 0x2A ^ 0xD2 ^ 0xB4) == 0)
        return null; 
    } else if (lIIllIIlll(lIIIIlIIIIllIIl, class_2350.field_11034)) {
      j = IIIlIlIIl[2];
      "".length();
      if (-" ".length() > "  ".length())
        return null; 
    } else if (lIIllIIlll(lIIIIlIIIIllIIl, class_2350.field_11035)) {
      k = IIIlIlIIl[2];
      "".length();
      if (-(125 + 33 - 31 + 2 ^ 11 + 51 - -64 + 7) > 0)
        return null; 
    } else if (lIIllIIlll(lIIIIlIIIIllIIl, class_2350.field_11039)) {
      m = IIIlIlIIl[2];
    } 
    if (IllIlIIlll(m)) {
      "".length();
      if (" ".length() < -" ".length())
        return null; 
    } else {
    
    } 
    if (IllIlIIlll(i)) {
      "".length();
      if (-(0xA ^ 0x43 ^ 0x6A ^ 0x27) > 0)
        return null; 
    } else {
    
    } 
    if (IllIlIIlll(j)) {
      "".length();
      if (-" ".length() != -" ".length())
        return null; 
    } else {
    
    } 
    if (IllIlIIlll(k)) {
      "".length();
      if (((0x80 ^ 0x9C) & (0x2D ^ 0x31 ^ 0xFFFFFFFF)) > 0)
        return null; 
    } else {
    
    } 
    RenderUtils.drawFilledBox(new class_238(lllllIIIIIllIIl.method_10263() + 0.06D, lllllIIIIIllIIl.method_10264(), lllllIIIIIllIIl.method_10260() + 0.06D, lllllIIIIIllIIl.method_10263() + 0.94D, lllllIIIIIllIIl.method_10264() + 0.875D, lllllIIIIIllIIl.method_10260() + 0.94D), 1.0F, 0.6F, 0.3F, 0.7F);
    if (IllIlIIlll(i)) {
      "".length();
      if (" ".length() <= 0)
        return null; 
    } else if (IllIlIIlll(j)) {
      "".length();
      if ("   ".length() > (0x7A ^ 0x7E))
        return null; 
    } else if (IllIlIIlll(k)) {
      "".length();
      if (" ".length() == 0)
        return null; 
    } else if (IllIlIIlll(m)) {
      "".length();
      if ((("  ".length() ^ 0x8D ^ 0xBA) & (67 + 44 - 93 + 114 ^ 70 + 69 - 125 + 163 ^ -" ".length())) < 0)
        return null; 
    } else {
    
    } 
    return null;
  }
  
  static {
    IIlIlIIlll();
    IIIIIllIll();
  }
  
  private static boolean lIIllIIlll(float lIllIIllllIlIIl, byte IIllIIllllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  public ChestESP() {
    super(llIllIIIl[IIIlIlIIl[0]], IIIlIlIIl[1], Category.RENDER, llIllIIIl[IIIlIlIIl[2]], new com.exploiters.xploitclient.setting.base.SettingBase[IIIlIlIIl[3]]);
  }
  
  private static void IIIIIllIll() {
    llIllIIIl = new String[IIIlIlIIl[15]];
    llIllIIIl[IIIlIlIIl[0]] = lIlllIlIll("eeQJarMIMWfbsgqeXBB2hA==", "YofMO");
    llIllIIIl[IIIlIlIIl[2]] = IllllIlIll("98Yc2JC/UjzyrW1XW4CCn8aQlhUx+RZwcKlDEEegNzJol/TrfpVZ2w==", "VgXct");
    llIllIIIl[IIIlIlIIl[4]] = lIlllIlIll("qFWyytbPT3A=", "NtxNq");
    llIllIIIl[IIIlIlIIl[5]] = IllllIlIll("UxnDm1ghT+WwQ6gttXI6VQ==", "UfhTl");
    llIllIIIl[IIIlIlIIl[6]] = lIlllIlIll("b+svb0JbwnDe43TxV8gtTA==", "Yekgi");
    llIllIIIl[IIIlIlIIl[7]] = IllllIlIll("sZOqy/CP9Jr4SE2WWWhVnQ==", "CBDNI");
    llIllIIIl[IIIlIlIIl[8]] = lIlllIlIll("HoWqBJNhjwc=", "dPSwz");
    llIllIIIl[IIIlIlIIl[9]] = IllllIlIll("Ilr+ZWbnz79+rv6n0kdHVQ==", "jOHwP");
    llIllIIIl[IIIlIlIIl[10]] = IllllIlIll("6zjLUkpnFGvXViI6GvIDkA==", "pggwL");
    llIllIIIl[IIIlIlIIl[11]] = IllllIlIll("W5muXct6WT7qqGxicHWCew==", "AvVFo");
    llIllIIIl[IIIlIlIIl[12]] = lIlllIlIll("xvPbwxIjMqUH5dwSc1SwNw==", "oinFS");
    llIllIIIl[IIIlIlIIl[13]] = lIlllIlIll("1QrFek7M/IZwi71qSGz/Eg==", "yNVXp");
    llIllIIIl[IIIlIlIIl[3]] = lllllIlIll("GAQpLC0jESEkGA==", "QpLAk");
    llIllIIIl[IIIlIlIIl[14]] = IllllIlIll("YBP4BC/ii9JiOkXkmBem6A==", "QlXtR");
  }
  
  private static boolean llIllIIlll(byte llIIlIllllIlIIl, int IlIIlIllllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static boolean IlIllIIlll(char IllIIIllllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 < null);
  }
  
  private static boolean lllIlIIlll(boolean IIIlIIllllIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\module\mods\ChestESP.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */