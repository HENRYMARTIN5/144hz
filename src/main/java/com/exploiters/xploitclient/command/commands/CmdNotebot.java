package com.exploiters.xploitclient.command.commands;

import com.exploiters.xploitclient.command.Command;
import com.exploiters.xploitclient.utils.ExploitLogger;
import com.exploiters.xploitclient.utils.ExploitQueue;
import com.exploiters.xploitclient.utils.Midi2Notebot;
import com.exploiters.xploitclient.utils.file.ExploitHackFileMang;
import java.util.Iterator;
import java.util.List;

public class CmdNotebot extends Command {
  private static String llllllIIll(int IlllIllIllllIIl, double lIllIllIllllIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   39: iconst_1
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   56: iconst_2
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   71: iconst_2
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	1	IllIlllIllllIIl	Ljava/lang/String;
    //   0	113	1	lIllIllIllllIIl	D
    //   0	113	3	lIlIlllIllllIIl	I
    //   0	113	1	llllIllIllllIIl	Ljava/lang/Exception;
    //   64	42	3	lIIIlllIllllIIl	Ljavax/crypto/Cipher;
    //   0	113	2	IlIIlllIllllIIl	Ljava/lang/Exception;
    //   0	113	3	llIlIllIllllIIl	Z
    //   0	113	0	IIlIlllIllllIIl	Ljava/lang/String;
    //   0	113	2	IIllIllIllllIIl	D
    //   0	113	0	IlllIllIllllIIl	I
    //   0	113	0	lllIlllIllllIIl	S
    //   47	59	2	IIIIlllIllllIIl	Ljavax/crypto/spec/SecretKeySpec;
    //   107	4	2	llIIlllIllllIIl	Ljava/lang/Exception;
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  private static void lIIIIIlIll() {
    IlllIIIIl = new String[IIIIlIIIl[17]];
    IlllIIIIl[IIIIlIIIl[0]] = IlllllIIll("04f9lzLD9q4=", "AKNHZ");
    IlllIIIIl[IIIIlIIIl[1]] = IlllllIIll("h0IghNbpViIUcOfXyUAeB9czHwOeq3ai", "ZUlHv");
    IlllIIIIl[IIIIlIIIl[2]] = llllllIIll("giff/TVAHI8XQE8UQ81YmnyIHkk/+50cZ++o0775lbARbQzKd24IubBRYnncnaUuNeKQXSXCukqsUR0Te7m9tw==", "otzse");
    IlllIIIIl[IIIIlIIIl[3]] = IIIIIIlIll("EyA0OyACOw==", "pOZME");
    IlllIIIIl[IIIIlIIIl[4]] = IlllllIIll("CUei2Jo2i1Y=", "nWxrz");
    IlllIIIIl[IIIIlIIIl[5]] = IlllllIIll("cahB1GJ1Hgc=", "OAcHm");
    IlllIIIIl[IIIIlIIIl[6]] = IIIIIIlIll("KRUWMRMoDg==", "GzbTq");
    IlllIIIIl[IIIIlIIIl[7]] = IIIIIIlIll("fREKEA==", "SerdH");
    IlllIIIIl[IIIIlIIIl[8]] = llllllIIll("sBh63GQ4kQo=", "FwzOF");
    IlllIIIIl[IIIIlIIIl[9]] = IIIIIIlIll("Xg==", "dUSCm");
    IlllIIIIl[IIIIlIIIl[10]] = IlllllIIll("tSB7b+UjmMk=", "qKpjk");
    IlllIIIIl[IIIIlIIIl[11]] = IIIIIIlIll("OCMTMBY5OA==", "VLgUt");
    IlllIIIIl[IIIIlIIIl[12]] = IIIIIIlIll("Ay4WJhICNQ==", "mAbCp");
    IlllIIIIl[IIIIlIIIl[13]] = IIIIIIlIll("YxgCBA==", "MlzpE");
    IlllIIIIl[IIIIlIIIl[14]] = llllllIIll("H005BfBy6DC8X15pT0PlITf/DHAntH9p", "gbDFR");
    IlllIIIIl[IIIIlIIIl[15]] = llllllIIll("Q9etoyTty8o=", "lXqFp");
    IlllIIIIl[IIIIlIIIl[16]] = IIIIIIlIll("ayYJFgc4NQ==", "Khfbb");
  }
  
  public void onCommand(String lIIlllIlllllIIl, String[] IIIlllIlllllIIl) throws Exception {
    if (IIIIlIlIll(IIIlllIlllllIIl.length, IIIIlIIIl[2]) && lIIIlIlIll(IIIlllIlllllIIl[IIIIlIIIl[0]].equalsIgnoreCase(IlllIIIIl[IIIIlIIIl[3]]))) {
      int lIllllIlllllIIl = IIIIlIIIl[0];
      String IIllllIlllllIIl = IlllIIIIl[IIIIlIIIl[4]];
      (new String[IIIIlIIIl[1]])[IIIIlIIIl[0]] = IIIlllIlllllIIl[IIIIlIIIl[1]];
      List<List<Integer>> llIlllIlllllIIl = Midi2Notebot.convert(ExploitHackFileMang.stringsToPath(new String[IIIIlIIIl[1]]));
      (new String[IIIIlIIIl[2]])[IIIIlIIIl[0]] = IlllIIIIl[IIIIlIIIl[5]];
      (new String[IIIIlIIIl[2]])[IIIIlIIIl[1]] = String.valueOf((new StringBuilder()).append(IlllIIIIl[IIIIlIIIl[6]]).append(lIllllIlllllIIl).append(IlllIIIIl[IIIIlIIIl[7]]));
      while (lIIIlIlIll(ExploitHackFileMang.fileExists(new String[IIIIlIIIl[2]]))) {
        lIllllIlllllIIl++;
        "".length();
        if (((76 + 144 - 103 + 49 ^ 74 + 146 - 198 + 154) & (50 + 131 - 139 + 140 ^ 73 + 109 - 23 + 1 ^ -" ".length())) != 0)
          return; 
      } 
      Iterator<List<Integer>> iterator = llIlllIlllllIIl.iterator();
      while (lIIIlIlIll(iterator.hasNext())) {
        List<Integer> IlllllIlllllIIl = iterator.next();
        IIllllIlllllIIl = String.valueOf((new StringBuilder()).append(IIllllIlllllIIl).append(IlllllIlllllIIl.get(IIIIlIIIl[0])).append(IlllIIIIl[IIIIlIIIl[8]]).append(IlllllIlllllIIl.get(IIIIlIIIl[1])).append(IlllIIIIl[IIIIlIIIl[9]]).append(IlllllIlllllIIl.get(IIIIlIIIl[2])).append(IlllIIIIl[IIIIlIIIl[10]]));
        "".length();
        if ("   ".length() == ((0x62 ^ 0x6D) & (0x78 ^ 0x77 ^ 0xFFFFFFFF)))
          return; 
      } 
      (new String[IIIIlIIIl[2]])[IIIIlIIIl[0]] = IlllIIIIl[IIIIlIIIl[11]];
      (new String[IIIIlIIIl[2]])[IIIIlIIIl[1]] = String.valueOf((new StringBuilder()).append(IlllIIIIl[IIIIlIIIl[12]]).append(lIllllIlllllIIl).append(IlllIIIIl[IIIIlIIIl[13]]));
      ExploitHackFileMang.appendFile(IIllllIlllllIIl, new String[IIIIlIIIl[2]]);
      ExploitLogger.infoMessage(String.valueOf((new StringBuilder()).append(IlllIIIIl[IIIIlIIIl[14]]).append(lIllllIlllllIIl).append(IlllIIIIl[IIIIlIIIl[15]]).append(llIlllIlllllIIl.size()).append(IlllIIIIl[IIIIlIIIl[16]])));
      "".length();
      if (((21 + 120 - 38 + 142 ^ 124 + 60 - 4 + 8) & (0xDE ^ 0x88 ^ 0x47 ^ 0x58 ^ -" ".length())) != 0)
        return; 
    } else {
      ExploitQueue.add(() -> {
            // Byte code:
            //   0: aload_0
            //   1: getfield mc : Lnet/minecraft/class_310;
            //   4: new com/exploiters/xploitclient/gui/NotebotScreen
            //   7: dup
            //   8: invokespecial <init> : ()V
            //   11: invokevirtual method_1507 : (Lnet/minecraft/class_437;)V
            //   14: return
            // Local variable table:
            //   start	length	slot	name	descriptor
            //   0	15	0	llllIlIlllllIIl	Lcom/exploiters/xploitclient/command/commands/CmdNotebot;
            //   0	15	0	IlllIlIlllllIIl	B
          });
    } 
  }
  
  private static String IIIIIIlIll(String lIlIIIIlllllIIl, long llIIIIIlllllIIl) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   43: iconst_0
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   65: iconst_0
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic lIIIlIlIll : (I)Z
    //   80: ifeq -> 239
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   131: iconst_0
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   136: bipush #18
    //   138: iaload
    //   139: iadd
    //   140: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   143: bipush #19
    //   145: iaload
    //   146: isub
    //   147: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   150: bipush #13
    //   152: iaload
    //   153: iadd
    //   154: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   157: bipush #20
    //   159: iaload
    //   160: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   163: bipush #21
    //   165: iaload
    //   166: ixor
    //   167: ixor
    //   168: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   171: bipush #22
    //   173: iaload
    //   174: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   177: bipush #23
    //   179: iaload
    //   180: iadd
    //   181: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   184: bipush #24
    //   186: iaload
    //   187: isub
    //   188: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   191: bipush #25
    //   193: iaload
    //   194: iadd
    //   195: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   198: bipush #9
    //   200: iaload
    //   201: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   204: bipush #26
    //   206: iaload
    //   207: iadd
    //   208: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   211: bipush #27
    //   213: iaload
    //   214: isub
    //   215: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   218: bipush #28
    //   220: iaload
    //   221: iadd
    //   222: ixor
    //   223: ldc ' '
    //   225: invokevirtual length : ()I
    //   228: ineg
    //   229: ixor
    //   230: iand
    //   231: invokestatic lIIIlIlIll : (I)Z
    //   234: ifeq -> 70
    //   237: aconst_null
    //   238: areturn
    //   239: aload_2
    //   240: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   243: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	244	8	llIIlIIlllllIIl	S
    //   0	244	5	IIllIIIlllllIIl	F
    //   0	244	6	IllllllIllllIIl	Z
    //   0	244	8	IIlllllIllllIIl	Ljava/lang/String;
    //   0	244	5	lllllllIllllIIl	Z
    //   0	244	0	IllIIIIlllllIIl	Ljava/lang/String;
    //   48	196	4	IlIlIIIlllllIIl	I
    //   0	244	7	lIIlIIIlllllIIl	D
    //   0	244	0	lIlIIIIlllllIIl	Ljava/lang/String;
    //   32	212	2	IlIIlIIlllllIIl	Ljava/lang/StringBuilder;
    //   0	244	4	llllIIIlllllIIl	S
    //   0	244	2	IIIIlIIlllllIIl	F
    //   0	244	3	lIIIIIIlllllIIl	Ljava/lang/String;
    //   0	244	4	IIIIIIIlllllIIl	C
    //   0	244	3	lIIIlIIlllllIIl	J
    //   37	207	3	llIlIIIlllllIIl	[C
    //   0	244	0	IIlIIIIlllllIIl	J
    //   0	244	1	lllIIIIlllllIIl	Ljava/lang/String;
    //   90	24	8	IlllIIIlllllIIl	C
    //   0	244	1	llIIIIIlllllIIl	J
    //   0	244	7	lIlllllIllllIIl	S
    //   0	244	1	IIIlIIIlllllIIl	Ljava/lang/String;
    //   0	244	6	lIllIIIlllllIIl	S
    //   0	244	2	IlIIIIIlllllIIl	Z
  }
  
  private static String IlllllIIll(boolean IIIIIlIlllllIIl, String IIlIIlIlllllIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   36: iconst_1
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   51: iconst_2
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   68: iconst_3
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/command/commands/CmdNotebot.IIIIlIIIl : [I
    //   83: iconst_3
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	2	IllllIIlllllIIl	C
    //   0	125	0	lIIIIlIlllllIIl	Ljava/lang/String;
    //   59	59	2	IllIIlIlllllIIl	Ljavax/crypto/spec/SecretKeySpec;
    //   119	4	2	lIlIIlIlllllIIl	Ljava/lang/Exception;
    //   0	125	1	lllllIIlllllIIl	Ljava/lang/String;
    //   0	125	3	lIlllIIlllllIIl	J
    //   0	125	1	IIlIIlIlllllIIl	Ljava/lang/String;
    //   0	125	2	llIIIlIlllllIIl	C
    //   0	125	3	lIIlIlIlllllIIl	I
    //   0	125	0	IIIIIlIlllllIIl	Z
    //   76	42	3	IlIIIlIlllllIIl	Ljavax/crypto/Cipher;
    //   0	125	0	lllIIlIlllllIIl	J
    //   0	125	1	IIIlIlIlllllIIl	F
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  private static void llllIIlIll() {
    IIIIlIIIl = new int[29];
    IIIIlIIIl[0] = (0x2A ^ 0x7B) & (0x7D ^ 0x2C ^ 0xFFFFFFFF);
    IIIIlIIIl[1] = " ".length();
    IIIIlIIIl[2] = "  ".length();
    IIIIlIIIl[3] = "   ".length();
    IIIIlIIIl[4] = 0x9 ^ 0xD;
    IIIIlIIIl[5] = 0x30 ^ 0x35;
    IIIIlIIIl[6] = 25 + 64 - -28 + 10 ^ 0x40 ^ 0x39;
    IIIIlIIIl[7] = 0x4F ^ 0x48;
    IIIIlIIIl[8] = 0x8E ^ 0x86;
    IIIIlIIIl[9] = 0x1 ^ 0x8;
    IIIIlIIIl[10] = 0xAB ^ 0x9F ^ 0x5D ^ 0x63;
    IIIIlIIIl[11] = 0x52 ^ 0x70 ^ 0x70 ^ 0x59;
    IIIIlIIIl[12] = 0x8B ^ 0x87;
    IIIIlIIIl[13] = 0x57 ^ 0x74 ^ 0x17 ^ 0x39;
    IIIIlIIIl[14] = 0x21 ^ 0x2F;
    IIIIlIIIl[15] = 0xC5 ^ 0xB9 ^ 0xF7 ^ 0x84;
    IIIIlIIIl[16] = 0x8A ^ 0x9A;
    IIIIlIIIl[17] = 0x5E ^ 0x4C ^ "   ".length();
    IIIIlIIIl[18] = 49 + 34 - 28 + 137 ^ 47 + 71 - -2 + 27;
    IIIIlIIIl[19] = -(0x68 ^ 0x77);
    IIIIlIIIl[20] = (0x2E ^ 0x32) + (0x0 ^ 0x27) - (0x93 ^ 0xA1) + 10 + 8 - -32 + 129;
    IIIIlIIIl[21] = 61 + 143 - 62 + 13;
    IIIIlIIIl[22] = 122 + 76 - 59 + 12;
    IIIIlIIIl[23] = 0x40 ^ 0x59 ^ 0x74 ^ 0x20;
    IIIIlIIIl[24] = 205 + 39 - 90 + 55;
    IIIIlIIIl[25] = (0x7E ^ 0x6B) + (0xC ^ 0x40) - (0x23 ^ 0x24) + (0xC ^ 0x49);
    IIIIlIIIl[26] = 0xA4 ^ 0xC2 ^ 0x8F ^ 0x87;
    IIIIlIIIl[27] = 0x71 ^ 0x2D ^ 0x39 ^ 0x26;
    IIIIlIIIl[28] = 5 + 167 - 168 + 208 ^ 12 + 63 - -13 + 50;
  }
  
  public String getDescription() {
    return IlllIIIIl[IIIIlIIIl[1]];
  }
  
  public String getAlias() {
    return IlllIIIIl[IIIIlIIIl[0]];
  }
  
  static {
    llllIIlIll();
    lIIIIIlIll();
  }
  
  public String getSyntax() {
    return IlllIIIIl[IIIIlIIIl[2]];
  }
  
  private static boolean IIIIlIlIll(String IIIlIllIllllIIl, int lllIIllIllllIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 >= SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static boolean lIIIlIlIll(float lIlIIllIllllIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\command\commands\CmdNotebot.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */