package com.exploiters.xploitclient.command.commands;

import com.exploiters.xploitclient.command.Command;
import com.exploiters.xploitclient.utils.ExploitLogger;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.BlowfishEncryptionAlgorithm;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;
import net.minecraft.class_1799;

public class CmdRename extends Command {
  private static String lIIIIllIlll(long IlIlIIlIIllll, boolean lIIIIIlIIllll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/command/commands/CmdRename.lIlllIlIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/command/commands/CmdRename.lIlllIlIIl : [I
    //   36: iconst_1
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/command/commands/CmdRename.lIlllIlIIl : [I
    //   51: iconst_2
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/command/commands/CmdRename.lIlllIlIIl : [I
    //   68: iconst_3
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/command/commands/CmdRename.lIlllIlIIl : [I
    //   83: iconst_3
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	3	IIIIIIlIIllll	B
    //   0	125	1	llIlIIlIIllll	F
    //   0	125	0	llIIIIlIIllll	Z
    //   0	125	2	IllIIIlIIllll	C
    //   0	125	0	IlIlIIlIIllll	J
    //   0	125	2	lIIIIIlIIllll	Z
    //   76	42	3	lIlIIIlIIllll	Ljavax/crypto/Cipher;
    //   0	125	1	IlIIIIlIIllll	D
    //   0	125	0	IIlIIIlIIllll	Ljava/lang/String;
    //   0	125	1	lllIIIlIIllll	Ljava/lang/String;
    //   59	59	2	lIIlIIlIIllll	Ljavax/crypto/spec/SecretKeySpec;
    //   119	4	2	IIIlIIlIIllll	Ljava/lang/Exception;
    //   0	125	3	IIllIIlIIllll	I
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  public String getSyntax() {
    return IIIllIlIIl[lIlllIlIIl[2]];
  }
  
  static {
    IlIllllIlll();
    IlIIIllIlll();
  }
  
  public String getAlias() {
    return IIIllIlIIl[lIlllIlIIl[0]];
  }
  
  private static boolean lIlllllIlll(Exception IIIlIIIIIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static boolean IIlllllIlll(short llIlIIIIIllll, String IlIlIIIIIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 < SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static String lllllIlIlll(String IIIlllIIIllll, Exception llIIllIIIllll) {
    try {
      SecretKeySpec IIlIllIIIllll = new SecretKeySpec(MessageDigest.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[lIlllIlIIl[0]]]).digest(llIIllIIIllll.getBytes(StandardCharsets.UTF_8)), BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[lIlllIlIIl[1]]]);
      Cipher lIlIllIIIllll = Cipher.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[lIlllIlIIl[2]]]);
      lIlIllIIIllll.init(BlowfishEncryptionAlgorithm.lllIIlIIllIlI[lIlllIlIIl[2]], IIlIllIIIllll);
      return new String(lIlIllIIIllll.doFinal(Base64.getDecoder().decode(IIIlllIIIllll.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception lllIllIIIllll) {
      IllIllIIIllll.printStackTrace();
      return null;
    } 
  }
  
  private static String IIIIIllIlll(String lllIlIIIIllll, String lIIllIIIIllll) {
    IllIlIIIIllll = new String(Base64.getDecoder().decode(lllIlIIIIllll.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder IIlIIlIIIllll = new StringBuilder();
    char[] lIlllIIIIllll = lIIllIIIIllll.toCharArray();
    int IIlllIIIIllll = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lIlllIlIIl[0]];
    char[] arrayOfChar1 = IllIlIIIIllll.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lIlllIlIIl[0]];
    while (lIlllllIlll(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char IIIIIlIIIllll = arrayOfChar1[j];
      "".length();
      IIlllIIIIllll++;
      j++;
      "".length();
      if (lIlllllIlll((lIlllIlIIl[0] + lIlllIlIIl[12] - lIlllIlIIl[13] + lIlllIlIIl[14] ^ lIlllIlIIl[15] ^ lIlllIlIIl[16]) & (lIlllIlIIl[17] + lIlllIlIIl[18] - lIlllIlIIl[19] + lIlllIlIIl[20] ^ lIlllIlIIl[9] + lIlllIlIIl[21] - lIlllIlIIl[22] + lIlllIlIIl[23] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(IIlIIlIIIllll);
  }
  
  private static void IlIllllIlll() {
    lIlllIlIIl = new int[24];
    lIlllIlIIl[0] = (0x44 ^ 0x2F ^ 0x6D ^ 0x3A) & (5 + 115 - 3 + 36 ^ 9 + 53 - 54 + 157 ^ -" ".length());
    lIlllIlIIl[1] = " ".length();
    lIlllIlIIl[2] = "  ".length();
    lIlllIlIIl[3] = "   ".length();
    lIlllIlIIl[4] = 0x56 ^ 0x52;
    lIlllIlIIl[5] = 0xD5 ^ 0xBB ^ 0xC0 ^ 0xAB;
    lIlllIlIIl[6] = 0xA1 ^ 0xA7;
    lIlllIlIIl[7] = 0x2E ^ 0x29;
    lIlllIlIIl[8] = 0xA7 ^ 0xAF;
    lIlllIlIIl[9] = 0xFB ^ 0x98 ^ 0x58 ^ 0x32;
    lIlllIlIIl[10] = 0x78 ^ 0x5B ^ 0x1C ^ 0x35;
    lIlllIlIIl[11] = 0x64 ^ 0x6F;
    lIlllIlIIl[12] = 201 + 118 - 96 + 26 ^ 14 + 71 - -54 + 31;
    lIlllIlIIl[13] = -(0x6B ^ 0x6C ^ 0x45 ^ 0x5D);
    lIlllIlIIl[14] = 0x31 ^ 0x3C;
    lIlllIlIIl[15] = 42 + 92 - 59 + 57 + (0x2B ^ 0x36) - -(0x98 ^ 0x93) + (0xBF ^ 0xA7);
    lIlllIlIIl[16] = 74 + 104 - 106 + 83;
    lIlllIlIIl[17] = 81 + 12 - -45 + 13;
    lIlllIlIIl[18] = 0x6C ^ 0x21;
    lIlllIlIIl[19] = (0xEC ^ 0xB0) + (0x88 ^ 0x93) - -(0x6D ^ 0x26) + (0x2A ^ 0x25);
    lIlllIlIIl[20] = 117 + 55 - 57 + 44;
    lIlllIlIIl[21] = 0xE9 ^ 0x87;
    lIlllIlIIl[22] = 0x2C ^ 0x6F;
    lIlllIlIIl[23] = 0x6C ^ 0x32;
  }
  
  public String getDescription() {
    return IIIllIlIIl[lIlllIlIIl[1]];
  }
  
  private static boolean llIllllIlll(float IllIIIIIIllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  public void onCommand(String lIIllIlIIllll, float IIlIlIlIIllll) throws Exception {
    if (llIllllIlll(this.mc.field_1724.field_7503.field_7477)) {
      ExploitLogger.errorMessage(IIIllIlIIl[lIlllIlIIl[3]]);
      return;
    } 
    class_1799 lllIlIlIIllll = this.mc.field_1724.field_7514.method_7391();
    String IllIlIlIIllll = IIIllIlIIl[lIlllIlIIl[4]];
    int llIllIlIIllll = lIlllIlIIl[0];
    while (IIlllllIlll(llIllIlIIllll, IIlIlIlIIllll.length)) {
      IllIlIlIIllll = String.valueOf((new StringBuilder()).append(IllIlIlIIllll).append(IIlIlIlIIllll[llIllIlIIllll] = String.valueOf((new StringBuilder()).append(IIlIlIlIIllll[llIllIlIIllll]).append(IIIllIlIIl[lIlllIlIIl[5]]))));
      llIllIlIIllll++;
      "".length();
      if ((0x7A ^ 0x30 ^ 0x30 ^ 0x7E) <= 0)
        return; 
    } 
    "".length();
    ExploitLogger.infoMessage(IIIllIlIIl[lIlllIlIIl[10]]);
  }
  
  private static void IlIIIllIlll() {
    IIIllIlIIl = new String[lIlllIlIIl[11]];
    IIIllIlIIl[lIlllIlIIl[0]] = lllllIlIlll("Yc75DLECAHo=", "Kpcrb");
    IIIllIlIIl[lIlllIlIIl[1]] = IIIIIllIlll("HTU0ACEqI3oAIm85LgQhY3AvEilvcnxDbCk/KEEvIDw1Ew==", "OPZaL");
    IIIllIlIIl[lIlllIlIIl[2]] = lIIIIllIlll("MPmGvfytFA3Jyv/opJZxBw==", "yyhkV");
    IIIllIlIIl[lIlllIlIIl[3]] = lIIIIllIlll("X10pjXsJdyAqJaL638fo75rdDGqLvolN", "EfXnM");
    IIIllIlIIl[lIlllIlIIl[4]] = lllllIlIlll("11rqc2vlCyM=", "xTSdI");
    IIIllIlIIl[lIlllIlIIl[5]] = IIIIIllIlll("cA==", "PRAJu");
    IIIllIlIIl[lIlllIlIIl[6]] = lIIIIllIlll("m+4/5hQ3rP8=", "NnMBl");
    IIIllIlIIl[lIlllIlIIl[7]] = lllllIlIlll("sa9Fdy2bCO0=", "DAMyx");
    IIIllIlIIl[lIlllIlIIl[8]] = lIIIIllIlll("WKfGp2lkBzE=", "nKXUU");
    IIIllIlIIl[lIlllIlIIl[9]] = lIIIIllIlll("9w6u1IY2whY=", "rqpfA");
    IIIllIlIIl[lIlllIlIIl[10]] = lllllIlIlll("7C5vgiQpFq0c4cilTTmojg==", "oRByc");
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\command\commands\CmdRename.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */