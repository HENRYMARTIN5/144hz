package com.exploiters.xploitclient.command.commands;

import com.exploiters.xploitclient.command.Command;
import com.exploiters.xploitclient.utils.ExploitLogger;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;
import net.minecraft.class_1934;

public class CmdGamemode extends Command {
  private static boolean IIlIIlllIll(char lIllIllIlIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static void lIIIIlllIll() {
    lIllIlIIIl = new int[22];
    lIllIlIIIl[0] = (0x40 ^ 0x5C) & (0x83 ^ 0x9F ^ 0xFFFFFFFF);
    lIllIlIIIl[1] = " ".length();
    lIllIlIIIl[2] = "  ".length();
    lIllIlIIIl[3] = "   ".length();
    lIllIlIIIl[4] = 0x33 ^ 0x2B ^ 0x49 ^ 0x55;
    lIllIlIIIl[5] = 0x29 ^ 0x50 ^ 0xBE ^ 0xC2;
    lIllIlIIIl[6] = 15 + 37 - -88 + 4 ^ 5 + 8 - -54 + 83;
    lIllIlIIIl[7] = 144 + 43 - 163 + 124 ^ 18 + 25 - -48 + 56;
    lIllIlIIIl[8] = 0xB6 ^ 0xBE;
    lIllIlIIIl[9] = 52 + 50 - 98 + 124 ^ 6 + 119 - 26 + 38;
    lIllIlIIIl[10] = 47 + 1 - 25 + 184 ^ 88 + 91 - 35 + 12;
    lIllIlIIIl[11] = -(0xB6 ^ 0xA9);
    lIllIlIIIl[12] = 0x21 ^ 0x2C;
    lIllIlIIIl[13] = 47 + 144 - 130 + 135;
    lIllIlIIIl[14] = 143 + 25 - 71 + 58;
    lIllIlIIIl[15] = (0x66 ^ 0x1F) + (0xBD ^ 0xA3) - (0x4 ^ 0x5F) + (0xC8 ^ 0x93);
    lIllIlIIIl[16] = " ".length() ^ 0x64 ^ 0x28;
    lIllIlIIIl[17] = 111 + 54 - 141 + 117 + 120 + 119 - 165 + 63 - 118 + 129 - 246 + 209 + 50 + 99 - 119 + 111;
    lIllIlIIIl[18] = (0x16 ^ 0x2D) + (0xA5 ^ 0xB6) - (0x5C ^ 0x52) + (0x10 ^ 0x4F);
    lIllIlIIIl[19] = 114 + 91 - 150 + 183 ^ 23 + 105 - 71 + 71;
    lIllIlIIIl[20] = 0xC4 ^ 0x87;
    lIllIlIIIl[21] = 0x74 ^ 0x4B ^ 0xF2 ^ 0x93;
  }
  
  public String getDescription() {
    return IIllIlIIIl[lIllIlIIIl[1]];
  }
  
  public void onCommand(String IIllllIllIlIIl, String[] llIlllIllIlIIl) throws Exception {
    int llllllIllIlIIl;
    try {
      llllllIllIlIIl = Integer.parseInt(llIlllIllIlIIl[lIllIlIIIl[0]]);
      "".length();
      if (((0xA6 ^ 0xA9) & (0x5B ^ 0x54 ^ 0xFFFFFFFF)) == -" ".length())
        return; 
    } catch (Exception IlllllIllIlIIl) {
      ExploitLogger.errorMessage(IIllIlIIIl[lIllIlIIIl[3]]);
      return;
    } 
    if (IlIIIlllIll(llllllIllIlIIl)) {
      ((CmdGamemode)this).mc.field_1724.method_7336(class_1934.field_9215);
      ((CmdGamemode)this).mc.field_1761.method_2907(class_1934.field_9215);
      ExploitLogger.infoMessage(IIllIlIIIl[lIllIlIIIl[4]]);
      "".length();
      if (-" ".length() >= "  ".length())
        return; 
    } else if (llIIIlllIll(llllllIllIlIIl, lIllIlIIIl[1])) {
      ((CmdGamemode)this).mc.field_1724.method_7336(class_1934.field_9220);
      ((CmdGamemode)this).mc.field_1761.method_2907(class_1934.field_9220);
      ExploitLogger.infoMessage(IIllIlIIIl[lIllIlIIIl[5]]);
      "".length();
      if (" ".length() != " ".length())
        return; 
    } else if (llIIIlllIll(llllllIllIlIIl, lIllIlIIIl[2])) {
      ((CmdGamemode)this).mc.field_1724.method_7336(class_1934.field_9216);
      ((CmdGamemode)this).mc.field_1761.method_2907(class_1934.field_9216);
      ExploitLogger.infoMessage(IIllIlIIIl[lIllIlIIIl[6]]);
      "".length();
      if (-"  ".length() > 0)
        return; 
    } else if (llIIIlllIll(llllllIllIlIIl, lIllIlIIIl[3])) {
      ((CmdGamemode)this).mc.field_1724.method_7336(class_1934.field_9219);
      ((CmdGamemode)this).mc.field_1761.method_2907(class_1934.field_9219);
      ExploitLogger.infoMessage(IIllIlIIIl[lIllIlIIIl[7]]);
      "".length();
      if (-" ".length() > 0)
        return; 
    } else {
      ExploitLogger.warningMessage(IIllIlIIIl[lIllIlIIIl[8]]);
    } 
  }
  
  static {
    lIIIIlllIll();
    IIIIIlllIll();
  }
  
  public String getSyntax() {
    return IIllIlIIIl[lIllIlIIIl[2]];
  }
  
  private static boolean IlIIIlllIll(char llIlIllIlIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  private static String IllllIllIll(short lIIIllIllIlIIl, Exception lIIlIlIllIlIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/command/commands/CmdGamemode.lIllIlIIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/command/commands/CmdGamemode.lIllIlIIIl : [I
    //   39: iconst_1
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/command/commands/CmdGamemode.lIllIlIIIl : [I
    //   56: iconst_2
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/command/commands/CmdGamemode.lIllIlIIIl : [I
    //   71: iconst_2
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   107	4	2	lIllIlIllIlIIl	Ljava/lang/Exception;
    //   0	113	0	IlllIlIllIlIIl	Ljava/lang/String;
    //   47	59	2	IlIlIlIllIlIIl	Ljavax/crypto/spec/SecretKeySpec;
    //   0	113	2	IIllIlIllIlIIl	Ljava/lang/Exception;
    //   0	113	1	IIIIllIllIlIIl	Ljava/lang/String;
    //   0	113	3	lIlIIlIllIlIIl	Z
    //   0	113	2	IllIIlIllIlIIl	Ljava/lang/String;
    //   0	113	1	lIIlIlIllIlIIl	Ljava/lang/Exception;
    //   0	113	3	llllIlIllIlIIl	I
    //   64	42	3	llIlIlIllIlIIl	Ljavax/crypto/Cipher;
    //   0	113	0	lIIIllIllIlIIl	S
    //   0	113	0	IIIlIlIllIlIIl	I
    //   0	113	1	lllIIlIllIlIIl	F
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  private static String lllllIllIll(String lIlllllIlIlIIl, String IlIllllIlIlIIl) {
    IIlllllIlIlIIl = new String(Base64.getDecoder().decode(lIlllllIlIlIIl.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder lIIlIIIllIlIIl = new StringBuilder();
    char[] IlIIIIIllIlIIl = IlIllllIlIlIIl.toCharArray();
    int lIIIIIIllIlIIl = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lIllIlIIIl[0]];
    char[] arrayOfChar1 = IIlllllIlIlIIl.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lIllIlIIIl[0]];
    while (IIlIIlllIll(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char lIlIIIIllIlIIl = arrayOfChar1[j];
      "".length();
      lIIIIIIllIlIIl++;
      j++;
      "".length();
      if (IIlIIlllIll((lIllIlIIIl[0] + lIllIlIIIl[10] - lIllIlIIIl[11] + lIllIlIIIl[12] ^ lIllIlIIIl[13] ^ lIllIlIIIl[14]) & (lIllIlIIIl[15] + lIllIlIIIl[16] - lIllIlIIIl[17] + lIllIlIIIl[18] ^ lIllIlIIIl[9] + lIllIlIIIl[19] - lIllIlIIIl[20] + lIllIlIIIl[21] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(lIIlIIIllIlIIl);
  }
  
  private static String lIlllIllIll(double lllIlIIllIlIIl, char lIlIlIIllIlIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/command/commands/CmdGamemode.lIllIlIIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/command/commands/CmdGamemode.lIllIlIIIl : [I
    //   36: iconst_1
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/command/commands/CmdGamemode.lIllIlIIIl : [I
    //   51: iconst_2
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/command/commands/CmdGamemode.lIllIlIIIl : [I
    //   68: iconst_3
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/command/commands/CmdGamemode.lIllIlIIIl : [I
    //   83: iconst_3
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	1	IllIlIIllIlIIl	F
    //   0	125	0	IIIllIIllIlIIl	Ljava/lang/String;
    //   119	4	2	IIlllIIllIlIIl	Ljava/lang/Exception;
    //   0	125	0	lllIlIIllIlIIl	D
    //   0	125	3	IIIIIlIllIlIIl	I
    //   0	125	0	IllllIIllIlIIl	J
    //   0	125	1	lllllIIllIlIIl	F
    //   59	59	2	lIlllIIllIlIIl	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	2	lIlIlIIllIlIIl	C
    //   0	125	3	IIlIlIIllIlIIl	Ljava/lang/String;
    //   0	125	1	llIllIIllIlIIl	Ljava/lang/String;
    //   76	42	3	lIIllIIllIlIIl	Ljavax/crypto/Cipher;
    //   0	125	2	IlIllIIllIlIIl	C
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  public String getAlias() {
    return IIllIlIIIl[lIllIlIIIl[0]];
  }
  
  private static void IIIIIlllIll() {
    IIllIlIIIl = new String[lIllIlIIIl[9]];
    IIllIlIIIl[lIllIlIIIl[0]] = lIlllIllIll("U4UyPW8JGUU=", "BrDCy");
    IIllIlIIIl[lIllIlIIIl[1]] = IllllIllIll("hV4pLFKx8j/b3dRL7VcfllDF25lThbq5xUpSnDavX6o=", "qhvFe");
    IIllIlIIIl[lIllIlIIIl[2]] = IllllIllIll("yxnj2Kr9n9sDV2dVW+4Bcw==", "cKmXA");
    IIllIlIIIl[lIllIlIIIl[3]] = IllllIllIll("q4td35SueR05SGC8MQT7CbKkvddhBAeHjXMVlqJV2lY=", "aYExT");
    IIllIlIIIl[lIllIlIIIl[4]] = lllllIllIll("BwE1YzQ1CSQuPDABYTc8dBc0MSU9EiAvfQ==", "TdACS");
    IIllIlIIIl[lIllIlIIIl[5]] = lllllIllIll("ChUaagA4HQsnCD0VTj4IeRMcLwYtGRgvSQ==", "YpnJg");
    IIllIlIIIl[lIllIlIIIl[6]] = IllllIllIll("WRIbmK2IW2/bKwEMiCbB1ljFMlnUwicvIQV+UNBB800=", "PlsKR");
    IIllIlIIIl[lIllIlIIIl[7]] = IllllIllIll("xxAa4hjwlnyVkE54BqeXLujIf8KIG+tx+kwYc9HjwTY=", "zTnjz");
    IIllIlIIIl[lIllIlIIIl[8]] = lllllIllIll("PDoHCS4eOkwgIAQxAQglDHQiEiwLMR5J", "iTlgA");
  }
  
  private static boolean llIIIlllIll(Exception IIIIlllIlIlIIl, long llllIllIlIlIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == SYNTHETIC_LOCAL_VARIABLE_1);
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\command\commands\CmdGamemode.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */