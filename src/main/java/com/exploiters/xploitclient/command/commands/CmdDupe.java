package com.exploiters.xploitclient.command.commands;

import com.exploiters.xploitclient.command.Command;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Arrays;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.DESEncryptionAlgorithm;
import net.minecraft.class_2561;
import net.minecraft.class_2585;

public class CmdDupe extends Command {
  static {
    IIIIIlIIl();
    lllllIIIl();
  }
  
  private static String IllllIIIl(String IIIllllIllIlIll, Exception IllIlllIllIlIll) {
    try {
      SecretKeySpec lIlllllIllIlIll = new SecretKeySpec(Arrays.copyOf(MessageDigest.getInstance(DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[llIllIl[0]]]).digest(IllIlllIllIlIll.getBytes(StandardCharsets.UTF_8)), DESEncryptionAlgorithm.lIlllllIlllII[llIllIl[1]]), DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[llIllIl[2]]]);
      Cipher lIIllllIllIlIll = Cipher.getInstance(DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[llIllIl[3]]]);
      lIIllllIllIlIll.init(DESEncryptionAlgorithm.lIlllllIlllII[llIllIl[3]], lIlllllIllIlIll);
      return new String(lIIllllIllIlIll.doFinal(Base64.getDecoder().decode(IIIllllIllIlIll.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception IIlllllIllIlIll) {
      Exception exception1;
      exception1.printStackTrace();
      return null;
    } 
  }
  
  private static String lIlllIIIl(byte lIllIIIlllIlIll, String lIIIlIIlllIlIll) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   43: iconst_0
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   65: iconst_0
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic lIIIIlIIl : (I)Z
    //   80: ifeq -> 238
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   131: iconst_0
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   136: iconst_5
    //   137: iaload
    //   138: iadd
    //   139: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   142: bipush #6
    //   144: iaload
    //   145: isub
    //   146: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   149: bipush #7
    //   151: iaload
    //   152: iadd
    //   153: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   156: bipush #8
    //   158: iaload
    //   159: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   162: bipush #9
    //   164: iaload
    //   165: ixor
    //   166: ixor
    //   167: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   170: bipush #10
    //   172: iaload
    //   173: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   176: bipush #11
    //   178: iaload
    //   179: iadd
    //   180: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   183: bipush #12
    //   185: iaload
    //   186: isub
    //   187: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   190: bipush #13
    //   192: iaload
    //   193: iadd
    //   194: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   197: bipush #14
    //   199: iaload
    //   200: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   203: bipush #15
    //   205: iaload
    //   206: iadd
    //   207: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   210: bipush #16
    //   212: iaload
    //   213: isub
    //   214: getstatic com/exploiters/xploitclient/command/commands/CmdDupe.llIllIl : [I
    //   217: bipush #17
    //   219: iaload
    //   220: iadd
    //   221: ixor
    //   222: ldc ' '
    //   224: invokevirtual length : ()I
    //   227: ineg
    //   228: ixor
    //   229: iand
    //   230: invokestatic lIIIIlIIl : (I)Z
    //   233: ifeq -> 70
    //   236: aconst_null
    //   237: areturn
    //   238: aload_2
    //   239: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   242: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	243	5	IIIlIIIlllIlIll	F
    //   0	243	1	IIllIIIlllIlIll	F
    //   0	243	4	lIIlIIIlllIlIll	B
    //   37	206	3	IIlIlIIlllIlIll	[C
    //   0	243	0	llllIIIlllIlIll	Ljava/lang/String;
    //   0	243	2	llIlIIIlllIlIll	F
    //   48	195	4	llIIlIIlllIlIll	I
    //   0	243	6	IllIlIIlllIlIll	S
    //   0	243	2	lIIllIIlllIlIll	F
    //   0	243	7	IllIIIIlllIlIll	Z
    //   0	243	0	lIllIIIlllIlIll	B
    //   90	24	8	lllIlIIlllIlIll	C
    //   0	243	3	IlIllIIlllIlIll	J
    //   0	243	4	IIIllIIlllIlIll	S
    //   0	243	3	IlIlIIIlllIlIll	I
    //   0	243	6	lllIIIIlllIlIll	Ljava/lang/String;
    //   0	243	1	lIIIlIIlllIlIll	Ljava/lang/String;
    //   32	211	2	llIllIIlllIlIll	Ljava/lang/StringBuilder;
    //   0	243	0	IlllIIIlllIlIll	Ljava/lang/String;
    //   0	243	8	lIlIIIIlllIlIll	Z
    //   0	243	1	IIIIlIIlllIlIll	Ljava/lang/String;
    //   0	243	7	IlIIlIIlllIlIll	D
    //   0	243	8	IIlllIIlllIlIll	S
    //   0	243	5	lIlIlIIlllIlIll	F
  }
  
  private static boolean lIIIIlIIl(Exception IlIIlllIllIlIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  public String getSyntax() {
    return IlIllIl[llIllIl[2]];
  }
  
  public void onCommand(String IIIlIlIlllIlIll, String[] lllIIlIlllIlIll) throws Exception {
    "".length();
    this.mc.field_1724.field_3944.method_2872().method_10747((class_2561)new class_2585(IlIllIl[llIllIl[3]]));
  }
  
  public String getAlias() {
    return IlIllIl[llIllIl[0]];
  }
  
  private static void lllllIIIl() {
    IlIllIl = new String[llIllIl[4]];
    IlIllIl[llIllIl[0]] = lIlllIIIl("BxkJAA==", "clyey");
    IlIllIl[llIllIl[1]] = lIlllIIIl("FAMnKR9wFzlsBSQTOmwDPlYhLQI5GjstTCMTJToJIgV5bEQANwMPJBUydwUicEd5fVh+Qnxl", "PvWLl");
    IlIllIl[llIllIl[2]] = IllllIIIl("eC3eo7pueZs=", "KxmBr");
    IlIllIl[llIllIl[3]] = IllllIIIl("CqHuPHnjADr4tWdhD79Qvw==", "tABXK");
  }
  
  public String getDescription() {
    return IlIllIl[llIllIl[1]];
  }
  
  private static void IIIIIlIIl() {
    llIllIl = new int[18];
    llIllIl[0] = (0xF5 ^ 0xB0 ^ 0x2E ^ 0x32) & (0x9B ^ 0x83 ^ 0xCE ^ 0x8F ^ -" ".length());
    llIllIl[1] = " ".length();
    llIllIl[2] = "  ".length();
    llIllIl[3] = "   ".length();
    llIllIl[4] = 0xAB ^ 0xAF;
    llIllIl[5] = 0xF2 ^ 0x99 ^ 0x1A ^ 0x22;
    llIllIl[6] = -(104 + 128 - 205 + 141 ^ 19 + 173 - 86 + 77);
    llIllIl[7] = 0x0 ^ 0xD;
    llIllIl[8] = 144 + 16 - 84 + 120;
    llIllIl[9] = 21 + 119 - 37 + 52;
    llIllIl[10] = (0x1F ^ 0x2) + (0xE3 ^ 0x97) - (0x17 ^ 0x4C) + (0xDF ^ 0xBE);
    llIllIl[11] = 0xFE ^ 0xB3;
    llIllIl[12] = (0x65 ^ 0x5C) + (0x42 ^ 0x19) - (0xA5 ^ 0xB6) + (0x1 ^ 0x51);
    llIllIl[13] = 155 + 117 - 162 + 49;
    llIllIl[14] = 25 + 35 - 13 + 108 ^ 140 + 41 - 91 + 56;
    llIllIl[15] = 0xFC ^ 0x92;
    llIllIl[16] = 0x41 ^ 0x8 ^ 0x79 ^ 0x73;
    llIllIl[17] = 115 + 117 - 57 + 22 ^ 107 + 4 - -22 + 22;
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\command\commands\CmdDupe.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */