package com.exploiters.xploitclient.command.commands;

import com.exploiters.xploitclient.command.Command;
import java.util.Base64;
import java.util.UUID;
import net.minecraft.class_1799;
import net.minecraft.class_1802;
import net.minecraft.class_1935;
import net.minecraft.class_2487;
import net.minecraft.class_2522;

public class CmdSkull extends Command {
  public String getSyntax() {
    return lllIIlIIIl[IIIlIlIIIl[2]];
  }
  
  private static String lllIIIllIll(byte IIlIIllIlllIIl, boolean llIIIllIlllIIl) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   43: iconst_0
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   65: iconst_0
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic lIllIIllIll : (I)Z
    //   80: ifeq -> 239
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   131: iconst_0
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   136: bipush #13
    //   138: iaload
    //   139: iadd
    //   140: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   143: bipush #14
    //   145: iaload
    //   146: isub
    //   147: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   150: bipush #15
    //   152: iaload
    //   153: iadd
    //   154: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   157: bipush #16
    //   159: iaload
    //   160: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   163: bipush #17
    //   165: iaload
    //   166: ixor
    //   167: ixor
    //   168: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   171: bipush #18
    //   173: iaload
    //   174: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   177: bipush #19
    //   179: iaload
    //   180: iadd
    //   181: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   184: bipush #20
    //   186: iaload
    //   187: isub
    //   188: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   191: bipush #21
    //   193: iaload
    //   194: iadd
    //   195: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   198: bipush #10
    //   200: iaload
    //   201: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   204: bipush #22
    //   206: iaload
    //   207: iadd
    //   208: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   211: bipush #23
    //   213: iaload
    //   214: isub
    //   215: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   218: bipush #24
    //   220: iaload
    //   221: iadd
    //   222: ixor
    //   223: ldc ' '
    //   225: invokevirtual length : ()I
    //   228: ineg
    //   229: ixor
    //   230: iand
    //   231: invokestatic lIllIIllIll : (I)Z
    //   234: ifeq -> 70
    //   237: aconst_null
    //   238: areturn
    //   239: aload_2
    //   240: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   243: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	244	6	IllllIlIlllIIl	I
    //   0	244	7	lIlllIlIlllIIl	Ljava/lang/Exception;
    //   0	244	0	lIlIIllIlllIIl	Ljava/lang/String;
    //   0	244	4	IIIIIllIlllIIl	F
    //   0	244	8	IIlllIlIlllIIl	C
    //   0	244	0	IIlIIllIlllIIl	B
    //   0	244	1	IIIlIllIlllIIl	Ljava/lang/String;
    //   0	244	3	lIIIlllIlllIIl	J
    //   0	244	8	llIIlllIlllIIl	S
    //   0	244	5	IIllIllIlllIIl	F
    //   0	244	2	IlIIIllIlllIIl	Ljava/lang/String;
    //   0	244	0	IllIIllIlllIIl	Ljava/lang/String;
    //   0	244	4	llllIllIlllIIl	S
    //   37	207	3	llIlIllIlllIIl	[C
    //   0	244	6	lIllIllIlllIIl	S
    //   0	244	2	IIIIlllIlllIIl	F
    //   0	244	7	lIIlIllIlllIIl	D
    //   48	196	4	IlIlIllIlllIIl	I
    //   0	244	1	llIIIllIlllIIl	Z
    //   0	244	1	lllIIllIlllIIl	Ljava/lang/String;
    //   32	212	2	IlIIlllIlllIIl	Ljava/lang/StringBuilder;
    //   0	244	3	lIIIIllIlllIIl	B
    //   90	24	8	IlllIllIlllIIl	C
    //   0	244	5	lllllIlIlllIIl	D
  }
  
  private static String IIIlIIllIll(String llIIIIlIlllIIl, boolean IIllllIIlllIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   39: iconst_1
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   56: iconst_2
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   71: iconst_2
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	1	IlllllIIlllIIl	Ljava/lang/Exception;
    //   0	113	3	IlIlllIIlllIIl	S
    //   0	113	3	IIlIIIlIlllIIl	I
    //   0	113	1	IIllllIIlllIIl	Z
    //   0	113	0	IllIIIlIlllIIl	S
    //   64	42	3	IIIIIIlIlllIIl	Ljavax/crypto/Cipher;
    //   0	113	0	llIIIIlIlllIIl	Ljava/lang/String;
    //   0	113	0	lIllllIIlllIIl	F
    //   107	4	2	IlIIIIlIlllIIl	Ljava/lang/Exception;
    //   0	113	2	lIIIIIlIlllIIl	Ljava/lang/Exception;
    //   47	59	2	llllllIIlllIIl	Ljavax/crypto/spec/SecretKeySpec;
    //   0	113	1	lIlIIIlIlllIIl	Ljava/lang/String;
    //   0	113	2	llIlllIIlllIIl	B
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  static {
    llIlIIllIll();
    IlIlIIllIll();
  }
  
  private static boolean IIllIIllIll(float lllIllIIlllIIl, Exception IllIllIIlllIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 < SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static void llIlIIllIll() {
    IIIlIlIIIl = new int[25];
    IIIlIlIIIl[0] = (0x37 ^ 0x62) & (0xEB ^ 0xBE ^ 0xFFFFFFFF);
    IIIlIlIIIl[1] = " ".length();
    IIIlIlIIIl[2] = "  ".length();
    IIIlIlIIIl[3] = 0x29 ^ 0x43 ^ 0x54 ^ 0x7E;
    IIIlIlIIIl[4] = "   ".length();
    IIIlIlIIIl[5] = 49 + 35 - -40 + 69 ^ 141 + 140 - 160 + 76;
    IIIlIlIIIl[6] = 0xC3 ^ 0xC6;
    IIIlIlIIIl[7] = 0xF2 ^ 0x87 ^ 0xD8 ^ 0xAB;
    IIIlIlIIIl[8] = 0x9F ^ 0x98;
    IIIlIlIIIl[9] = 0xAD ^ 0x96 ^ 0x43 ^ 0x70;
    IIIlIlIIIl[10] = 0x7C ^ 0x75;
    IIIlIlIIIl[11] = 0xAD ^ 0xA7;
    IIIlIlIIIl[12] = 0xB2 ^ 0xB9;
    IIIlIlIIIl[13] = 0xBD ^ 0x97 ^ 0x23 ^ 0x5A;
    IIIlIlIIIl[14] = -(0xD9 ^ 0xC6);
    IIIlIlIIIl[15] = 0xAA ^ 0xA7;
    IIIlIlIIIl[16] = (0x98 ^ 0xA1) + 99 + 66 - 89 + 93 - 27 + 32 - -18 + 130 + 171 + 160 - 321 + 167;
    IIIlIlIIIl[17] = 44 + 26 - 59 + 144;
    IIIlIlIIIl[18] = (0x31 ^ 0x2) + (0x4B ^ 0x30) - (0xE ^ 0x2B) + (0x40 ^ 0x4E);
    IIIlIlIIIl[19] = 0x68 ^ 0x25;
    IIIlIlIIIl[20] = 207 + 125 - 308 + 185;
    IIIlIlIIIl[21] = (0x65 ^ 0x3C) + 103 + 134 - 108 + 23 - 52 + 140 - 101 + 75 + (0x22 ^ 0x76);
    IIIlIlIIIl[22] = 0xF ^ 0x79 ^ 0x22 ^ 0x3A;
    IIIlIlIIIl[23] = 0x37 ^ 0x74;
    IIIlIlIIIl[24] = 52 + 52 - 96 + 148 ^ 95 + 70 - 154 + 183;
  }
  
  private static String lIIlIIllIll(String llllIIlIlllIIl, float IllIlIlIlllIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   36: iconst_1
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   51: iconst_2
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   68: iconst_4
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/command/commands/CmdSkull.IIIlIlIIIl : [I
    //   83: iconst_4
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	3	llIlIIlIlllIIl	C
    //   0	125	3	lllIlIlIlllIIl	I
    //   0	125	1	lIllIIlIlllIIl	S
    //   0	125	2	lIIIlIlIlllIIl	C
    //   0	125	2	IIllIIlIlllIIl	J
    //   119	4	2	llIIlIlIlllIIl	Ljava/lang/Exception;
    //   0	125	1	IllIlIlIlllIIl	F
    //   0	125	0	lIlIlIlIlllIIl	J
    //   0	125	0	llllIIlIlllIIl	Ljava/lang/String;
    //   59	59	2	IIlIlIlIlllIIl	Ljavax/crypto/spec/SecretKeySpec;
    //   76	42	3	IIIIlIlIlllIIl	Ljavax/crypto/Cipher;
    //   0	125	0	IlllIIlIlllIIl	Ljava/lang/String;
    //   0	125	1	IlIIlIlIlllIIl	Ljava/lang/String;
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  private static void IlIlIIllIll() {
    lllIIlIIIl = new String[IIIlIlIIIl[12]];
    lllIIlIIIl[IIIlIlIIIl[0]] = lllIIIllIll("ISATOh8=", "RKfVs");
    lllIIlIIIl[IIIlIlIIIl[1]] = lllIIIllIll("PTECEjlaIRsCaht4BBsrAz0GVzkRLRgb", "zXtwJ");
    lllIIlIIIl[IIIlIlIIIl[2]] = IIIlIIllIll("7BCcf9JFSgS3Ugx2K/4sPyYPHaADTjDzIUaeezPzmnBOOR3UVbGkHQ==", "kPMgW");
    lllIIlIIIl[IIIlIlIIIl[4]] = lllIIIllIll("FBIRNjUDDg0tPB17AQ04AiRAYQ==", "oAzCY");
    lllIIlIIIl[IIIlIlIIIl[5]] = lIIlIIllIll("iGAyaUWbqqU=", "PypYV");
    lllIIlIIIl[IIIlIlIIIl[6]] = lIIlIIllIll("tm8vn42R8dM=", "TQYac");
    lllIIlIIIl[IIIlIlIIIl[7]] = IIIlIIllIll("2e5k9guDjZ/iomopzLgfewosD1kPu/fr", "tndbI");
    lllIIlIIIl[IIIlIlIIIl[8]] = IIIlIIllIll("NYd67XbWfrv24NQ1rDqPfuyb8zKVq2DWg0sLzy6Z5bsBvjrjdO4RZA==", "niOZG");
    lllIIlIIIl[IIIlIlIIIl[9]] = lIIlIIllIll("/RtG/iE9CFbgr+TBXxmDcRl7OuRPMLiADsP+OszG0cM=", "ASKSG");
    lllIIlIIIl[IIIlIlIIIl[10]] = lllIIIllIll("ZTQqMA==", "GIWMI");
    lllIIlIIIl[IIIlIlIIIl[11]] = lllIIIllIll("bz4pGxIw", "MCtfo");
  }
  
  public String getAlias() {
    return lllIIlIIIl[IIIlIlIIIl[0]];
  }
  
  public String getDescription() {
    return lllIIlIIIl[IIIlIlIIIl[1]];
  }
  
  private static boolean lIllIIllIll(String IIlIllIIlllIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  public void onCommand(String llIIIIIllllIIl, String[] IlIIIIIllllIIl) throws Exception {
    class_1799 lIIIIIIllllIIl = new class_1799((class_1935)class_1802.field_8575, IIIlIlIIIl[3]);
    if (IIllIIllIll(IlIIIIIllllIIl.length, IIIlIlIIIl[2])) {
      lIIIIIIllllIIl.method_7980(class_2522.method_10718(String.valueOf((new StringBuilder()).append(lllIIlIIIl[IIIlIlIIIl[4]]).append(IlIIIIIllllIIl[IIIlIlIIIl[0]]).append(lllIIlIIIl[IIIlIlIIIl[5]]))));
      "".length();
      if ((40 + 82 - 14 + 55 ^ 138 + 160 - 241 + 110) <= 0)
        return; 
    } else if (lIllIIllIll(IlIIIIIllllIIl[IIIlIlIIIl[0]].equalsIgnoreCase(lllIIlIIIl[IIIlIlIIIl[6]]))) {
      class_2487 lIlIIIIllllIIl = class_2522.method_10718(String.valueOf((new StringBuilder()).append(lllIIlIIIl[IIIlIlIIIl[7]]).append(UUID.randomUUID()).append(lllIIlIIIl[IIIlIlIIIl[8]]).append(Base64.getEncoder().encodeToString(String.valueOf((new StringBuilder()).append(lllIIlIIIl[IIIlIlIIIl[9]]).append(IlIIIIIllllIIl[IIIlIlIIIl[1]]).append(lllIIlIIIl[IIIlIlIIIl[10]])).getBytes())).append(lllIIlIIIl[IIIlIlIIIl[11]])));
      lIIIIIIllllIIl.method_7980(lIlIIIIllllIIl);
      System.out.println(lIlIIIIllllIIl);
    } 
    this.mc.field_1724.field_7514.method_7374(lIIIIIIllllIIl);
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\command\commands\CmdSkull.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */