package com.exploiters.xploitclient.command.commands;

import com.exploiters.xploitclient.command.Command;
import com.exploiters.xploitclient.module.mods.ClickGui;
import com.exploiters.xploitclient.utils.ExploitLogger;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;

public class CmdGuiReset extends Command {
  static {
    IIIIIIl();
    llllll();
  }
  
  public String getAlias() {
    return IIlll[lIlll[0]];
  }
  
  private static String Illlll(float llIIlIlllIlllll, float llIllIlllIlllll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/command/commands/CmdGuiReset.lIlll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/command/commands/CmdGuiReset.lIlll : [I
    //   36: iconst_1
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/command/commands/CmdGuiReset.lIlll : [I
    //   51: iconst_2
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/command/commands/CmdGuiReset.lIlll : [I
    //   68: iconst_3
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/command/commands/CmdGuiReset.lIlll : [I
    //   83: iconst_3
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   119	4	2	IIIllIlllIlllll	Ljava/lang/Exception;
    //   0	125	0	IlIllIlllIlllll	J
    //   0	125	1	IlIIlIlllIlllll	Z
    //   76	42	3	lIlIlIlllIlllll	Ljavax/crypto/Cipher;
    //   0	125	3	IIlllIlllIlllll	I
    //   0	125	3	IIIIlIlllIlllll	S
    //   59	59	2	lIIllIlllIlllll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	2	IllIlIlllIlllll	C
    //   0	125	0	llIIlIlllIlllll	F
    //   0	125	2	lIIIlIlllIlllll	J
    //   0	125	1	llIllIlllIlllll	F
    //   0	125	0	IIlIlIlllIlllll	Ljava/lang/String;
    //   0	125	1	lllIlIlllIlllll	Ljava/lang/String;
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  private static boolean lIIIIIl(double IlllIIlllIlllll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  public void onCommand(String llIIIIIIIllllll, String[] IlIIIIIIIllllll) throws Exception {
    ClickGui.clickGui.resetGui();
    ExploitLogger.infoMessage(IIlll[lIlll[3]]);
  }
  
  public String getDescription() {
    return IIlll[lIlll[1]];
  }
  
  public String getSyntax() {
    return IIlll[lIlll[2]];
  }
  
  private static void llllll() {
    IIlll = new String[lIlll[4]];
    IIlll[lIlll[0]] = lIllll("IhcsPjM2BzE=", "EbELV");
    IIlll[lIlll[1]] = Illlll("xYMHIkBRkT12DmYuHcNoQiaC/R29wbI1kT4kqrN5S3A=", "ERzYo");
    IIlll[lIlll[2]] = lIllll("HiEoHjUKMTU=", "yTAlP");
    IIlll[lIlll[3]] = lIllll("GzIZNwFpIwI3VSo7AzEeLiIDcw==", "IWjRu");
  }
  
  private static String lIllll(String IlIlIllllIlllll, String lIllIllllIlllll) {
    lIIlIllllIlllll = new String(Base64.getDecoder().decode(IlIlIllllIlllll.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder lllIlllllIlllll = new StringBuilder();
    char[] IIIIlllllIlllll = lIllIllllIlllll.toCharArray();
    int llllIllllIlllll = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lIlll[0]];
    char[] arrayOfChar1 = lIIlIllllIlllll.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lIlll[0]];
    while (lIIIIIl(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char llIIlllllIlllll = arrayOfChar1[j];
      "".length();
      llllIllllIlllll++;
      j++;
      "".length();
      if (lIIIIIl((lIlll[0] + lIlll[5] - lIlll[6] + lIlll[7] ^ lIlll[8] ^ lIlll[9]) & (lIlll[10] + lIlll[11] - lIlll[12] + lIlll[13] ^ lIlll[14] + lIlll[15] - lIlll[16] + lIlll[17] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(lllIlllllIlllll);
  }
  
  private static void IIIIIIl() {
    lIlll = new int[18];
    lIlll[0] = (0x63 ^ 0x30) & (0x69 ^ 0x3A ^ 0xFFFFFFFF);
    lIlll[1] = " ".length();
    lIlll[2] = "  ".length();
    lIlll[3] = "   ".length();
    lIlll[4] = 44 + 85 - 25 + 49 ^ 48 + 114 - 102 + 97;
    lIlll[5] = 0x67 ^ 0x50 ^ 0xE7 ^ 0x83;
    lIlll[6] = -(141 + 41 - 48 + 11 ^ 106 + 130 - 216 + 122);
    lIlll[7] = 0x75 ^ 0x69 ^ 0x2E ^ 0x3F;
    lIlll[8] = 13 + 43 - 40 + 180;
    lIlll[9] = (0xC4 ^ 0xBC) + (0xAA ^ 0x8F) - (0x4 ^ 0x33) + (0x5B ^ 0x6E);
    lIlll[10] = (0x79 ^ 0xF) + (0x49 ^ 0x69) - 65 + 77 - 59 + 56 + 6 + 5 - -4 + 125;
    lIlll[11] = 172 + 49 - 119 + 93 ^ 41 + 89 - 20 + 32;
    lIlll[12] = (0xC9 ^ 0xB8) + (0x33 ^ 0xA) - -(0x35 ^ 0x21) + (0x73 ^ 0x60);
    lIlll[13] = (0x5C ^ 0x49) + (0xBF ^ 0x93) - (0x57 ^ 0x51) + (0x3E ^ 0x5A);
    lIlll[14] = 0x2C ^ 0x25;
    lIlll[15] = 0xC6 ^ 0xA8;
    lIlll[16] = 0x32 ^ 0x71;
    lIlll[17] = 0xFA ^ 0xC3 ^ 0x2D ^ 0x4A;
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\command\commands\CmdGuiReset.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */