package com.exploiters.xploitclient.command.commands;

import com.exploiters.xploitclient.command.Command;
import com.exploiters.xploitclient.utils.ExploitLogger;
import com.exploiters.xploitclient.utils.file.ExploitHackFileMang;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Base64;
import java.util.Iterator;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.BlowfishEncryptionAlgorithm;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;
import net.minecraft.class_1792;
import net.minecraft.class_2378;

public class CmdItemList extends Command {
  public String getSyntax() {
    return IlllIlll[llllIlll[2]];
  }
  
  private static boolean llIlIlllIl(byte IlllllIllIlIlIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  public void onCommand(String IlIlIIIIIllIlIl, String[] lIIlIIIIIllIlIl) {
    (new String[llllIlll[1]])[llllIlll[0]] = IlllIlll[llllIlll[3]];
    ExploitHackFileMang.createFile(new String[llllIlll[1]]);
    int i = llllIlll[1];
    StringBuilder lllIIIIIIllIlIl = new StringBuilder();
    Iterator<class_1792> iterator = class_2378.field_11142.iterator();
    while (llIlIlllIl(iterator.hasNext())) {
      class_1792 IIllIIIIIllIlIl = iterator.next();
      if (IIllIlllIl(i)) {
        "".length();
        i = llllIlll[0];
      } 
      "".length();
      "".length();
      "".length();
      if (-"  ".length() > 0)
        return; 
    } 
    (new String[llllIlll[1]])[llllIlll[0]] = IlllIlll[llllIlll[6]];
    ExploitHackFileMang.appendFile(String.valueOf(lllIIIIIIllIlIl), new String[llllIlll[1]]);
    ExploitLogger.infoMessage(IlllIlll[llllIlll[7]]);
  }
  
  private static boolean IIllIlllIl(float IIllllIllIlIlIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  private static String IIIIIlllIl(String IlIllIlllIlIlIl, String IIlllIlllIlIlIl) {
    llIllIlllIlIlIl = new String(Base64.getDecoder().decode(IlIllIlllIlIlIl.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder lllIIllllIlIlIl = new StringBuilder();
    char[] IIIIIllllIlIlIl = IIlllIlllIlIlIl.toCharArray();
    int lllllIlllIlIlIl = XOREncryptionAlgorithm.lIlIIlIlIIIlI[llllIlll[0]];
    char[] arrayOfChar1 = llIllIlllIlIlIl.toCharArray();
    llIIlIlllIlIlIl = arrayOfChar1.length;
    int i = XOREncryptionAlgorithm.lIlIIlIlIIIlI[llllIlll[0]];
    while (llIlIlllIl(XOREncryptionAlgorithm.lIlIlIIlIlIlII(i, llIIlIlllIlIlIl))) {
      char llIIIllllIlIlIl = arrayOfChar1[i];
      "".length();
      lllllIlllIlIlIl++;
      i++;
      "".length();
      if (llIlIlllIl((llllIlll[0] + llllIlll[9] - llllIlll[10] + llllIlll[11] ^ llllIlll[12] ^ llllIlll[13]) & (llllIlll[14] + llllIlll[15] - llllIlll[16] + llllIlll[17] ^ llllIlll[18] + llllIlll[19] - llllIlll[20] + llllIlll[21] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(lllIIllllIlIlIl);
  }
  
  private static void IlIlIlllIl() {
    llllIlll = new int[22];
    llllIlll[0] = (87 + 109 - 165 + 98 ^ 136 + 127 - 132 + 18) & (22 + 47 - 54 + 146 ^ 24 + 137 - 24 + 44 ^ -" ".length());
    llllIlll[1] = " ".length();
    llllIlll[2] = "  ".length();
    llllIlll[3] = "   ".length();
    llllIlll[4] = 0x83 ^ 0x87;
    llllIlll[5] = 0x59 ^ 0x53;
    llllIlll[6] = 0x32 ^ 0x1B ^ 0x5C ^ 0x70;
    llllIlll[7] = 0x34 ^ 0x32;
    llllIlll[8] = 158 + 132 - 280 + 182 ^ 171 + 149 - 204 + 83;
    llllIlll[9] = 0x62 ^ 0x31;
    llllIlll[10] = -(0x52 ^ 0x4D);
    llllIlll[11] = 0xB2 ^ 0xA5 ^ 0x74 ^ 0x6E;
    llllIlll[12] = 131 + 109 - 165 + 121;
    llllIlll[13] = 104 + 30 - 116 + 123 + (0x68 ^ 0x49) - (0x52 ^ 0xA) + (0x60 ^ 0x25);
    llllIlll[14] = 85 + 121 - 152 + 97;
    llllIlll[15] = 0x3F ^ 0x27 ^ 0xF5 ^ 0xA0;
    llllIlll[16] = 127 + 196 - 184 + 70;
    llllIlll[17] = 113 + 36 - 45 + 55;
    llllIlll[18] = 6 + 1 - -164 + 20 ^ 66 + 93 - 135 + 158;
    llllIlll[19] = 0x29 ^ 0x6B ^ 0x19 ^ 0x35;
    llllIlll[20] = 0x66 ^ 0x25;
    llllIlll[21] = 0x1 ^ 0x4E ^ 0x5 ^ 0x14;
  }
  
  private static String lIIIIlllIl(String lIIlIIlllIlIlIl, Exception IIlIIIlllIlIlIl) {
    try {
      SecretKeySpec lIlIIIlllIlIlIl = new SecretKeySpec(MessageDigest.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[llllIlll[0]]]).digest(IIlIIIlllIlIlIl.getBytes(StandardCharsets.UTF_8)), BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[llllIlll[1]]]);
      Cipher IllIIIlllIlIlIl = Cipher.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[llllIlll[2]]]);
      IllIIIlllIlIlIl.init(BlowfishEncryptionAlgorithm.lllIIlIIllIlI[llllIlll[2]], lIlIIIlllIlIlIl);
      return new String(IllIIIlllIlIlIl.doFinal(Base64.getDecoder().decode(lIIlIIlllIlIlIl.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception IIIlIIlllIlIlIl) {
      lIIIIIlllIlIlIl.printStackTrace();
      return null;
    } 
  }
  
  private static String lllllIllIl(short lIlIlllllIlIlIl, float lIlllllllIlIlIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/command/commands/CmdItemList.llllIlll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/command/commands/CmdItemList.llllIlll : [I
    //   36: iconst_1
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/command/commands/CmdItemList.llllIlll : [I
    //   51: iconst_2
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/command/commands/CmdItemList.llllIlll : [I
    //   68: iconst_3
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/command/commands/CmdItemList.llllIlll : [I
    //   83: iconst_3
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   119	4	2	IlIllllllIlIlIl	Ljava/lang/Exception;
    //   0	125	0	IIlllllllIlIlIl	J
    //   0	125	3	IllllllllIlIlIl	I
    //   0	125	0	lIlIlllllIlIlIl	S
    //   0	125	3	IlIIlllllIlIlIl	Ljava/lang/String;
    //   76	42	3	lllIlllllIlIlIl	Ljavax/crypto/Cipher;
    //   0	125	1	lIIllllllIlIlIl	Ljava/lang/String;
    //   59	59	2	llIllllllIlIlIl	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	1	lIlllllllIlIlIl	F
    //   0	125	0	IllIlllllIlIlIl	Ljava/lang/String;
    //   0	125	2	IIIllllllIlIlIl	C
    //   0	125	2	llIIlllllIlIlIl	C
    //   0	125	1	IIlIlllllIlIlIl	S
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  private static void IlIIIlllIl() {
    IlllIlll = new String[llllIlll[8]];
    IlllIlll[llllIlll[0]] = lllllIllIl("y9zsNOp2M6voGDwjeYF0bw==", "sxIZR");
    IlllIlll[llllIlll[1]] = IIIIIlllIl("BiMeIhFrI1UzGj9iEy4OLmICLhYjYhQrDmsrASIPawsxNA==", "KBuGb");
    IlllIlll[llllIlll[2]] = lIIIIlllIl("O9ARwpjxwFblhnpQaHMn2A==", "fSNlT");
    IlllIlll[llllIlll[3]] = lllllIllIl("8LJiIpgLLYWQkabC2SoTAw==", "cZmiX");
    IlllIlll[llllIlll[4]] = lllllIllIl("j5KeDsuG7sc=", "Ipoyy");
    IlllIlll[llllIlll[6]] = lIIIIlllIl("0B7aDfWsvwVwgb/W0eL14Q==", "hZVsI");
    IlllIlll[llllIlll[7]] = lIIIIlllIl("abXMnWLXgxbdpkQesZ66ZvU7o52XCT8t8+Dez90AeWhNbnUG62PpJg==", "SOIWB");
  }
  
  public String getAlias() {
    return IlllIlll[llllIlll[0]];
  }
  
  static {
    IlIlIlllIl();
    IlIIIlllIl();
  }
  
  public String getDescription() {
    return IlllIlll[llllIlll[1]];
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\command\commands\CmdItemList.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */