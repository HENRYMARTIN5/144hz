package com.exploiters.xploitclient.command.commands;

import com.exploiters.xploitclient.command.Command;
import com.exploiters.xploitclient.module.Module;
import com.exploiters.xploitclient.module.ModuleManager;
import com.exploiters.xploitclient.utils.ExploitLogger;
import com.exploiters.xploitclient.utils.ExploitQueue;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Base64;
import java.util.Iterator;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.BlowfishEncryptionAlgorithm;

public class CmdToggle extends Command {
  public String getSyntax() {
    return lIIllIlll[llIllIlll[2]];
  }
  
  private static String lIIIIllllIl(String IIIlIllIlIIIll, Exception llIIIllIlIIIll) {
    try {
      SecretKeySpec IIlIIllIlIIIll = new SecretKeySpec(MessageDigest.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[llIllIlll[0]]]).digest(llIIIllIlIIIll.getBytes(StandardCharsets.UTF_8)), BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[llIllIlll[1]]]);
      Cipher lIlIIllIlIIIll = Cipher.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[llIllIlll[2]]]);
      lIlIIllIlIIIll.init(BlowfishEncryptionAlgorithm.lllIIlIIllIlI[llIllIlll[2]], IIlIIllIlIIIll);
      return new String(lIlIIllIlIIIll.doFinal(Base64.getDecoder().decode(IIIlIllIlIIIll.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception lllIIllIlIIIll) {
      IllIIllIlIIIll.printStackTrace();
      return null;
    } 
  }
  
  private static boolean lIIlIllllIl(short llIlIlIIlIIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static void IIIlIllllIl() {
    llIllIlll = new int[20];
    llIllIlll[0] = (0x44 ^ 0x6C) & (0xB5 ^ 0x9D ^ 0xFFFFFFFF);
    llIllIlll[1] = " ".length();
    llIllIlll[2] = "  ".length();
    llIllIlll[3] = "   ".length();
    llIllIlll[4] = 0xC3 ^ 0xC7;
    llIllIlll[5] = 0xAD ^ 0xBE ^ 0x78 ^ 0x6E;
    llIllIlll[6] = 0xDE ^ 0x8D ^ 0x63 ^ 0x36;
    llIllIlll[7] = 0x37 ^ 0x64;
    llIllIlll[8] = -(0xD8 ^ 0xC7);
    llIllIlll[9] = 0x89 ^ 0x84;
    llIllIlll[10] = 72 + 18 - -46 + 60;
    llIllIlll[11] = 118 + 128 - 145 + 54;
    llIllIlll[12] = 39 + 98 - 125 + 139;
    llIllIlll[13] = 0x34 ^ 0x79;
    llIllIlll[14] = 33 + 7 - -86 + 30 + (0xBE ^ 0x93) - (0x30 ^ 0x5E) + (0x56 ^ 0x20);
    llIllIlll[15] = 147 + 130 - 203 + 85;
    llIllIlll[16] = 0xA ^ 0x1B ^ 0x6E ^ 0x76;
    llIllIlll[17] = 0x3C ^ 0x77 ^ 0x39 ^ 0x1C;
    llIllIlll[18] = 0xDD ^ 0x8B ^ 0x47 ^ 0x52;
    llIllIlll[19] = 0xF1 ^ 0xAF;
  }
  
  public void onCommand(String lllIlllIlIIIll, String[] IllIlllIlIIIll) throws Exception {
    Iterator<Module> iterator = ModuleManager.getModules().iterator();
    while (lIIlIllllIl(iterator.hasNext())) {
      Module lIIllllIlIIIll = iterator.next();
      if (lIIlIllllIl(IllIlllIlIIIll[llIllIlll[0]].equalsIgnoreCase(lIIllllIlIIIll.getName()))) {
        ExploitQueue.add(() -> IIIIlllIlIIIll.toggle());
        ExploitLogger.infoMessage(String.valueOf((new StringBuilder()).append(lIIllllIlIIIll.getName()).append(lIIllIlll[llIllIlll[3]])));
        return;
      } 
      "".length();
      if (null != null)
        return; 
    } 
    ExploitLogger.errorMessage(String.valueOf((new StringBuilder()).append(lIIllIlll[llIllIlll[4]]).append(IllIlllIlIIIll[llIllIlll[0]]).append(lIIllIlll[llIllIlll[5]])));
  }
  
  private static String IIIIIllllIl(long lllIllIIlIIIll, char llIIllIIlIIIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   36: iconst_1
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   51: iconst_2
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   68: iconst_3
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   83: iconst_3
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	1	llllIlIIlIIIll	Ljava/lang/Exception;
    //   0	125	0	IIIIllIIlIIIll	Z
    //   0	125	1	IIIlllIIlIIIll	F
    //   59	59	2	IllIllIIlIIIll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	3	lIllIlIIlIIIll	Ljava/lang/Exception;
    //   0	125	3	lIIlllIIlIIIll	I
    //   0	125	2	llIIllIIlIIIll	C
    //   0	125	0	lllIllIIlIIIll	J
    //   119	4	2	lIlIllIIlIIIll	Ljava/lang/Exception;
    //   0	125	0	lIIIllIIlIIIll	Ljava/lang/String;
    //   0	125	1	IIlIllIIlIIIll	Ljava/lang/String;
    //   76	42	3	IlIIllIIlIIIll	Ljavax/crypto/Cipher;
    //   0	125	2	IlllIlIIlIIIll	C
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  static {
    IIIlIllllIl();
    llIIIllllIl();
  }
  
  private static void llIIIllllIl() {
    lIIllIlll = new String[llIllIlll[6]];
    lIIllIlll[llIllIlll[0]] = IIIIIllllIl("7xEwR3rMvFM=", "uzNLk");
    lIIllIlll[llIllIlll[1]] = IIIIIllllIl("02624lO/BRfGbmcYIVAHfG8PwETP1MaN16fIvPDCkuo=", "lIGqo");
    lIIllIlll[llIllIlll[2]] = lIIIIllllIl("t0z99m6YBKMm0K4bnQlmTA==", "GDsFF");
    lIIllIlll[llIllIlll[3]] = IlIIIllllIl("bAUIKCAgNAM=", "LQgOG");
    lIIllIlll[llIllIlll[4]] = IlIIIllllIl("LxooPQsHVW4=", "buLHg");
    lIIllIlll[llIllIlll[5]] = lIIIIllllIl("2QXD/7VpGUtkspF8mjFy6g==", "uvaxw");
  }
  
  private static String IlIIIllllIl(byte IllIIIlIlIIIll, String lIIlIIlIlIIIll) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   43: iconst_0
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   65: iconst_0
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic lIIlIllllIl : (I)Z
    //   80: ifeq -> 239
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   131: iconst_0
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   136: bipush #7
    //   138: iaload
    //   139: iadd
    //   140: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   143: bipush #8
    //   145: iaload
    //   146: isub
    //   147: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   150: bipush #9
    //   152: iaload
    //   153: iadd
    //   154: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   157: bipush #10
    //   159: iaload
    //   160: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   163: bipush #11
    //   165: iaload
    //   166: ixor
    //   167: ixor
    //   168: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   171: bipush #12
    //   173: iaload
    //   174: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   177: bipush #13
    //   179: iaload
    //   180: iadd
    //   181: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   184: bipush #14
    //   186: iaload
    //   187: isub
    //   188: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   191: bipush #15
    //   193: iaload
    //   194: iadd
    //   195: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   198: bipush #16
    //   200: iaload
    //   201: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   204: bipush #17
    //   206: iaload
    //   207: iadd
    //   208: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   211: bipush #18
    //   213: iaload
    //   214: isub
    //   215: getstatic com/exploiters/xploitclient/command/commands/CmdToggle.llIllIlll : [I
    //   218: bipush #19
    //   220: iaload
    //   221: iadd
    //   222: ixor
    //   223: ldc ' '
    //   225: invokevirtual length : ()I
    //   228: ineg
    //   229: ixor
    //   230: iand
    //   231: invokestatic lIIlIllllIl : (I)Z
    //   234: ifeq -> 70
    //   237: aconst_null
    //   238: areturn
    //   239: aload_2
    //   240: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   243: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   32	212	2	IIlIlIlIlIIIll	Ljava/lang/StringBuilder;
    //   37	207	3	lIllIIlIlIIIll	[C
    //   0	244	7	llllllIIlIIIll	J
    //   0	244	0	lllIIIlIlIIIll	Ljava/lang/String;
    //   48	196	4	IIllIIlIlIIIll	I
    //   0	244	1	IlIlIIlIlIIIll	Ljava/lang/String;
    //   90	24	8	IIIIlIlIlIIIll	C
    //   0	244	4	IlIIIIlIlIIIll	J
    //   0	244	2	IIlIIIlIlIIIll	S
    //   0	244	6	IIIIIIlIlIIIll	I
    //   0	244	6	llllIIlIlIIIll	S
    //   0	244	2	IlIIlIlIlIIIll	F
    //   0	244	0	IllIIIlIlIIIll	B
    //   0	244	1	lIIlIIlIlIIIll	Ljava/lang/String;
    //   0	244	0	IIIlIIlIlIIIll	Ljava/lang/String;
    //   0	244	1	lIlIIIlIlIIIll	Ljava/lang/Exception;
    //   0	244	8	lIlIlIlIlIIIll	S
    //   0	244	3	llIIIIlIlIIIll	S
    //   0	244	3	llIIlIlIlIIIll	J
    //   0	244	5	lIIIIIlIlIIIll	B
    //   0	244	5	IlllIIlIlIIIll	F
    //   0	244	7	llIlIIlIlIIIll	D
    //   0	244	4	lIIIlIlIlIIIll	S
    //   0	244	8	IlllllIIlIIIll	S
  }
  
  public String getDescription() {
    return lIIllIlll[llIllIlll[1]];
  }
  
  public String getAlias() {
    return lIIllIlll[llIllIlll[0]];
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\command\commands\CmdToggle.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */