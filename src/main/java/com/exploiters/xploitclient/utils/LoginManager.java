package com.exploiters.xploitclient.utils;

import com.mojang.authlib.Agent;
import com.mojang.authlib.exceptions.AuthenticationException;
import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
import com.mojang.authlib.yggdrasil.YggdrasilUserAuthentication;
import java.net.Proxy;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import me.superblaubeere27.jobf.processors.encryption.string.XOREncryptionAlgorithm;
import net.minecraft.class_310;
import net.minecraft.class_320;

public final class LoginManager {
  private static void IIIllIlllll() {
    llllIllIIl = new String[lIIIlllIIl[15]];
    llllIllIIl[lIIIlllIIl[0]] = IIlIlIlllll("1k4YfqXIWRc=", "gsbCW");
    llllIllIIl[lIIIlllIIl[1]] = IIlIlIlllll("fMgSW2Z9rlDd5MRkmgoFr2D3sQ/+ybg/", "PNBfK");
    llllIllIIl[lIIIlllIIl[2]] = lIlIlIlllll("PvgeF35VRN0=", "WQUYD");
    llllIllIIl[lIIIlllIIl[3]] = lllIlIlllll("NBAEEScgDgQ=", "AcacI");
    llllIllIIl[lIIIlllIIl[4]] = IIlIlIlllll("TzwF3kDeeoDCOtmJaUxcJMa8wI23B5/fKJUQhqf3xnIlWdTknYierA==", "Drwon");
    llllIllIIl[lIIIlllIIl[5]] = IIlIlIlllll("/YfDStn/cFc=", "NiAaB");
    llllIllIIl[lIIIlllIIl[6]] = IIlIlIlllll("12RChPugPQ/zcKGlhKpShw==", "vudtK");
    llllIllIIl[lIIIlllIIl[7]] = lIlIlIlllll("FjD9Z9ReRYE=", "pVUvX");
    llllIllIIl[lIIIlllIIl[8]] = lllIlIlllll("w7MrOjYWPSRWCgQ3KRMqAjI/Gg==", "TJvYq");
    llllIllIIl[lIIIlllIIl[9]] = lllIlIlllll("w64AKwgNJQYaGQImDVkoGTsMCw==", "Icymk");
    llllIllIIl[lIIIlllIIl[10]] = IIlIlIlllll("T1YzdwRTuzdHVA7NfUVgRxqhVzRhF+s+s+VsefgktOQ=", "RSvUW");
    llllIllIIl[lIIIlllIIl[11]] = lIlIlIlllll("mMeOKqacxN7WN00UsUpJbdlB8hi8Vngj", "MfZyA");
    llllIllIIl[lIIIlllIIl[12]] = lllIlIlllll("w7FTOgsFOABNCQslFBoWGDJG", "Vgmyj");
    llllIllIIl[lIIIlllIIl[13]] = lIlIlIlllll("Sh2SQojx9wakzxHK2eIyIZlEa/gaFCBKbVjWSLNDROcKC6BKZW8OOqRnkmgAUIlY", "KYrzb");
    llllIllIIl[lIIIlllIIl[14]] = lIlIlIlllll("vRIqcj3A2GIjrw/eRjAYD/TVekB8SgCh", "gSSpj");
  }
  
  private static void lIIllIlllll() {
    lIIIlllIIl = new int[27];
    lIIIlllIIl[0] = (0x3E ^ 0x72) & (0x1B ^ 0x57 ^ 0xFFFFFFFF);
    lIIIlllIIl[1] = " ".length();
    lIIIlllIIl[2] = "  ".length();
    lIIIlllIIl[3] = "   ".length();
    lIIIlllIIl[4] = 0x4B ^ 0x7E ^ 0x6E ^ 0x5F;
    lIIIlllIIl[5] = 0x2B ^ 0x6C ^ 0x61 ^ 0x23;
    lIIIlllIIl[6] = 121 + 5 - 60 + 88 ^ 150 + 103 - 97 + 0;
    lIIIlllIIl[7] = 0x9C ^ 0x9B ^ (0x44 ^ 0x4B) & (0x9D ^ 0x92 ^ 0xFFFFFFFF);
    lIIIlllIIl[8] = 0xAB ^ 0xB1 ^ 0x4F ^ 0x5D;
    lIIIlllIIl[9] = " ".length() ^ 0x94 ^ 0x9C;
    lIIIlllIIl[10] = 109 + 65 - -12 + 3 ^ 95 + 86 - 167 + 169;
    lIIIlllIIl[11] = 0xAF ^ 0xA4;
    lIIIlllIIl[12] = 0x8A ^ 0x86;
    lIIIlllIIl[13] = 0x36 ^ 0x3B;
    lIIIlllIIl[14] = 0x4C ^ 0x42;
    lIIIlllIIl[15] = 0xBF ^ 0xB0;
    lIIIlllIIl[16] = 0x66 ^ 0x35;
    lIIIlllIIl[17] = -(0x29 ^ 0x36);
    lIIIlllIIl[18] = 147 + 153 - 272 + 168;
    lIIIlllIIl[19] = 83 + 115 - 87 + 44;
    lIIIlllIIl[20] = 126 + 86 - 113 + 52;
    lIIIlllIIl[21] = 57 + 160 - -8 + 26 ^ 147 + 6 - 10 + 39;
    lIIIlllIIl[22] = (0xF6 ^ 0x9A) + (0xF2 ^ 0xBE) - (0x52 ^ 0x17) + (0x41 ^ 0x1F);
    lIIIlllIIl[23] = 69 + 64 - 86 + 112;
    lIIIlllIIl[24] = 224 + 158 - 181 + 41 ^ 68 + 136 - 60 + 12;
    lIIIlllIIl[25] = 0xFA ^ 0xB9;
    lIIIlllIIl[26] = 0xCF ^ 0xA8 ^ 0x56 ^ 0x6F;
  }
  
  private static String IIlIlIlllll(String IllIlIlIlIIll, double IIlIlIlIlIIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/utils/LoginManager.lIIIlllIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/utils/LoginManager.lIIIlllIIl : [I
    //   36: iconst_1
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/utils/LoginManager.lIIIlllIIl : [I
    //   51: iconst_2
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/utils/LoginManager.lIIIlllIIl : [I
    //   68: iconst_3
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/utils/LoginManager.lIIIlllIIl : [I
    //   83: iconst_3
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	2	llIIlIlIlIIll	Ljava/lang/String;
    //   0	125	1	lIIllIlIlIIll	Ljava/lang/String;
    //   76	42	3	lllIlIlIlIIll	Ljavax/crypto/Cipher;
    //   0	125	0	lIlIlIlIlIIll	Ljava/lang/Exception;
    //   119	4	2	IlIllIlIlIIll	Ljava/lang/Exception;
    //   0	125	1	IIlIlIlIlIIll	D
    //   0	125	3	IllllIlIlIIll	I
    //   0	125	0	IllIlIlIlIIll	Ljava/lang/String;
    //   0	125	0	IIlllIlIlIIll	J
    //   0	125	3	IlIIlIlIlIIll	B
    //   0	125	2	IIIllIlIlIIll	C
    //   0	125	1	lIlllIlIlIIll	F
    //   59	59	2	llIllIlIlIIll	Ljavax/crypto/spec/SecretKeySpec;
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  private static String lllIlIlllll(String IIllIllIlIIll, String llllIllIlIIll) {
    String str = new String(Base64.getDecoder().decode(IIllIllIlIIll.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
    StringBuilder lIIllllIlIIll = new StringBuilder();
    char[] IlIIlllIlIIll = llllIllIlIIll.toCharArray();
    int lIIIlllIlIIll = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lIIIlllIIl[0]];
    char[] arrayOfChar1 = str.toCharArray();
    int i = arrayOfChar1.length;
    int j = XOREncryptionAlgorithm.lIlIIlIlIIIlI[lIIIlllIIl[0]];
    while (IlIllIlllll(XOREncryptionAlgorithm.lIlIlIIlIlIlII(j, i))) {
      char lIlIlllIlIIll = arrayOfChar1[j];
      "".length();
      lIIIlllIlIIll++;
      j++;
      "".length();
      if (IlIllIlllll((lIIIlllIIl[0] + lIIIlllIIl[16] - lIIIlllIIl[17] + lIIIlllIIl[13] ^ lIIIlllIIl[18] ^ lIIIlllIIl[19]) & (lIIIlllIIl[20] + lIIIlllIIl[21] - lIIIlllIIl[22] + lIIIlllIIl[23] ^ lIIIlllIIl[9] + lIIIlllIIl[24] - lIIIlllIIl[25] + lIIIlllIIl[26] ^ -" ".length())))
        return null; 
    } 
    return String.valueOf(lIIllllIlIIll);
  }
  
  public static String login(String llIllIIllIIll, String IlIllIIllIIll) {
    YggdrasilUserAuthentication lIIllIIllIIll = (YggdrasilUserAuthentication)(new YggdrasilAuthenticationService(Proxy.NO_PROXY, llllIllIIl[lIIIlllIIl[0]])).createUserAuthentication(Agent.MINECRAFT);
    lIIllIIllIIll.setUsername(llIllIIllIIll);
    lIIllIIllIIll.setPassword(IlIllIIllIIll);
    try {
      if (IlIllIlllll(llIllIIllIIll.isEmpty()))
        return llllIllIIl[lIIIlllIIl[1]]; 
      if (IlIllIlllll(IlIllIIllIIll.isEmpty())) {
        FabricReflect.writeField(class_310.method_1551().method_1548(), llIllIIllIIll, llllIllIIl[lIIIlllIIl[2]], llllIllIIl[lIIIlllIIl[3]]);
        return llllIllIIl[lIIIlllIIl[4]];
      } 
      if (llIllIlllll(llIllIIllIIll.isEmpty()) && llIllIlllll(IlIllIIllIIll.isEmpty()))
        lIIllIIllIIll.logIn(); 
      class_320 lllllIIllIIll = new class_320(lIIllIIllIIll.getSelectedProfile().getName(), lIIllIIllIIll.getSelectedProfile().getId().toString(), lIIllIIllIIll.getAuthenticatedToken(), llllIllIIl[lIIIlllIIl[5]]);
      FabricReflect.writeField(class_310.method_1551(), lllllIIllIIll, llllIllIIl[lIIIlllIIl[6]], llllIllIIl[lIIIlllIIl[7]]);
      return llllIllIIl[lIIIlllIIl[8]];
    } catch (SecurityException IllllIIllIIll) {
      return llllIllIIl[lIIIlllIIl[9]];
    } catch (AuthenticationException lIlllIIllIIll) {
      lIlllIIllIIll.printStackTrace();
      return (!llIllIlllll(lIlllIIllIIll.getMessage().contains(llllIllIIl[lIIIlllIIl[10]])) || IlIllIlllll(lIlllIIllIIll.getMessage().toLowerCase().contains(llllIllIIl[lIIIlllIIl[11]]))) ? llllIllIIl[lIIIlllIIl[12]] : llllIllIIl[lIIIlllIIl[13]];
    } catch (NullPointerException IIlllIIllIIll) {
      return llllIllIIl[lIIIlllIIl[14]];
    } 
  }
  
  private static String lIlIlIlllll(short IIIIlIIllIIll, Exception IIIlIIIllIIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/utils/LoginManager.lIIIlllIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/utils/LoginManager.lIIIlllIIl : [I
    //   39: iconst_1
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/utils/LoginManager.lIIIlllIIl : [I
    //   56: iconst_2
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/utils/LoginManager.lIIIlllIIl : [I
    //   71: iconst_2
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   47	59	2	lIIlIIIllIIll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	113	0	lllIIIIllIIll	D
    //   107	4	2	IIllIIIllIIll	Ljava/lang/Exception;
    //   0	113	2	lIlIIIIllIIll	I
    //   0	113	1	IllIIIIllIIll	Z
    //   0	113	0	IIIIlIIllIIll	S
    //   0	113	3	IIlIIIIllIIll	F
    //   64	42	3	IlIlIIIllIIll	Ljavax/crypto/Cipher;
    //   0	113	2	llIlIIIllIIll	Ljava/lang/Exception;
    //   0	113	1	IIIlIIIllIIll	Ljava/lang/Exception;
    //   0	113	1	llllIIIllIIll	Ljava/lang/String;
    //   0	113	3	IlllIIIllIIll	I
    //   0	113	0	lIllIIIllIIll	Ljava/lang/String;
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  static {
    lIIllIlllll();
    IIIllIlllll();
  }
  
  private static boolean llIllIlllll(boolean IlllIIlIlIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  private static boolean IlIllIlllll(boolean IIIIlIlIlIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclien\\utils\LoginManager.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */