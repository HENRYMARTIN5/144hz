package com.exploiters.xploitclient.utils;

import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Base64;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.DESEncryptionAlgorithm;
import net.minecraft.class_1799;
import net.minecraft.class_1802;
import net.minecraft.class_1935;
import net.minecraft.class_2487;
import net.minecraft.class_2499;
import net.minecraft.class_310;

public class ItemContentUtils {
  private static String lIIlIlIlIll(short lIIIIlllIIIlIl, String IIIIIlllIIIlIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   13: iconst_1
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   39: iconst_2
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   56: iconst_3
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   71: iconst_3
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	2	IllIlIllIIIlIl	S
    //   107	4	2	lIlllIllIIIlIl	Ljava/lang/Exception;
    //   64	42	3	llIllIllIIIlIl	Ljavax/crypto/Cipher;
    //   0	113	1	lIIllIllIIIlIl	Ljava/lang/Exception;
    //   0	113	3	lIlIlIllIIIlIl	C
    //   47	59	2	IlIllIllIIIlIl	Ljavax/crypto/spec/SecretKeySpec;
    //   0	113	3	lllllIllIIIlIl	I
    //   0	113	1	IIIIIlllIIIlIl	Ljava/lang/String;
    //   0	113	1	lllIlIllIIIlIl	Ljava/lang/Exception;
    //   0	113	2	IIlllIllIIIlIl	Ljava/lang/Exception;
    //   0	113	0	IIIllIllIIIlIl	S
    //   0	113	0	lIIIIlllIIIlIl	S
    //   0	113	0	IllllIllIIIlIl	Ljava/lang/String;
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  public static List<class_1799> getItemsInContainer(boolean llllllIIlIIlIl) {
    List<class_1799> lIIIIIlIlIIlIl = new ArrayList<>(Collections.nCopies(IllIlIIIIl[0], new class_1799((class_1935)class_1802.field_8162)));
    class_2487 IIIIIIlIlIIlIl = llllllIIlIIlIl.method_7969();
    if (IIllIlIlIll(IIIIIIlIlIIlIl) && lIllIlIlIll(IIIIIIlIlIIlIl.method_10545(lIlIlIIIIl[IllIlIIIIl[1]]))) {
      class_2487 llIIIIlIlIIlIl = IIIIIIlIlIIlIl.method_10562(lIlIlIIIIl[IllIlIIIIl[2]]);
      if (lIllIlIlIll(llIIIIlIlIIlIl.method_10545(lIlIlIIIIl[IllIlIIIIl[3]]))) {
        class_2499 IIlIIIlIlIIlIl = (class_2499)llIIIIlIlIIlIl.method_10580(lIlIlIIIIl[IllIlIIIIl[4]]);
        int lIlIIIlIlIIlIl = IllIlIIIIl[1];
        while (IlllIlIlIll(lIlIIIlIlIIlIl, IIlIIIlIlIIlIl.size())) {
          "".length();
          lIlIIIlIlIIlIl++;
          "".length();
          if ("  ".length() > (0x15 ^ 0x75 ^ 0x57 ^ 0x33))
            return null; 
        } 
      } 
    } 
    return lIIIIIlIlIIlIl;
  }
  
  private static boolean lIllIlIlIll(boolean lIIlIIllIIIlIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static void IlIlIlIlIll() {
    lIlIlIIIIl = new String[IllIlIIIIl[14]];
    lIlIlIIIIl[IllIlIIIIl[1]] = lllIIlIlIll("AysqAC0EKTEKMjgTJAQ=", "AGEcF");
    lIlIlIIIIl[IllIlIIIIl[2]] = IIIlIlIlIll("GaeULhVDbzu/te0DWgbYWQ==", "wGYGC");
    lIlIlIIIIl[IllIlIIIIl[3]] = lIIlIlIlIll("+ahUJmg7QKo=", "YNeng");
    lIlIlIIIIl[IllIlIIIIl[4]] = lllIIlIlIll("MDMoGTg=", "yGMtK");
    lIlIlIIIIl[IllIlIIIIl[5]] = IIIlIlIlIll("J3rOUsNFqrE=", "kJrHP");
    lIlIlIIIIl[IllIlIIIIl[6]] = lllIIlIlIll("JQwrFh4=", "UmLsm");
    lIlIlIIIIl[IllIlIIIIl[7]] = lIIlIlIlIll("5hJjRzrguuo=", "VSRJw");
    lIlIlIIIIl[IllIlIIIIl[9]] = lIIlIlIlIll("EdL57SQ0KRY=", "safFC");
    lIlIlIIIIl[IllIlIIIIl[8]] = IIIlIlIlIll("Vz802J4eNtQ=", "YOgNN");
    lIlIlIIIIl[IllIlIIIIl[11]] = lllIIlIlIll("eg==", "paQjq");
    lIlIlIIIIl[IllIlIIIIl[12]] = lllIIlIlIll("", "MUDke");
    lIlIlIIIIl[IllIlIIIIl[13]] = IIIlIlIlIll("LK2ijI6I8C4=", "ReZaD");
  }
  
  private static boolean IIllIlIlIll(float llIlIIllIIIlIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static boolean llllIlIlIll(char IlllIIllIIIlIl, short lIllIIllIIIlIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 <= SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static boolean IlllIlIlIll(Exception IlIIlIllIIIlIl, boolean lIIIlIllIIIlIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 < SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static String IIIlIlIlIll(Exception IlIlIIIIlIIlIl, String IlllIIIIlIIlIl) {
    try {
      SecretKeySpec IIIIlIIIlIIlIl = new SecretKeySpec(Arrays.copyOf(MessageDigest.getInstance(DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[IllIlIIIIl[1]]]).digest(IlllIIIIlIIlIl.getBytes(StandardCharsets.UTF_8)), DESEncryptionAlgorithm.lIlllllIlllII[IllIlIIIIl[2]]), DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[IllIlIIIIl[3]]]);
      Cipher IIllIIIIlIIlIl = Cipher.getInstance(DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[IllIlIIIIl[4]]]);
      IIllIIIIlIIlIl.init(DESEncryptionAlgorithm.lIlllllIlllII[IllIlIIIIl[4]], IIIIlIIIlIIlIl);
      return new String(IIllIIIIlIIlIl.doFinal(Base64.getDecoder().decode(IlIlIIIIlIIlIl.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception llllIIIIlIIlIl) {
      IIIlIIIIlIIlIl.printStackTrace();
      return null;
    } 
  }
  
  private static void llIlIlIlIll() {
    IllIlIIIIl = new int[27];
    IllIlIIIIl[0] = 0x32 ^ 0x54 ^ 0xD2 ^ 0xAF;
    IllIlIIIIl[1] = (0x4C ^ 0x3D ^ 0xC8 ^ 0xA6) & (0x72 ^ 0x13 ^ 0xED ^ 0x93 ^ -" ".length());
    IllIlIIIIl[2] = " ".length();
    IllIlIIIIl[3] = "  ".length();
    IllIlIIIIl[4] = "   ".length();
    IllIlIIIIl[5] = 0x87 ^ 0x83;
    IllIlIIIIl[6] = 0x76 ^ 0x73;
    IllIlIIIIl[7] = 0x8 ^ 0xE;
    IllIlIIIIl[8] = 0x65 ^ 0x6D;
    IllIlIIIIl[9] = 0x1D ^ 0x1A;
    IllIlIIIIl[10] = 0x49 ^ 0x3B;
    IllIlIIIIl[11] = 0x61 ^ 0x68;
    IllIlIIIIl[12] = 0x1A ^ 0x28 ^ 0x74 ^ 0x4C;
    IllIlIIIIl[13] = 0x79 ^ 0x72;
    IllIlIIIIl[14] = 0x52 ^ 0x17 ^ 0x16 ^ 0x5F;
    IllIlIIIIl[15] = 24 + 132 - 81 + 158 ^ 47 + 23 - -21 + 95;
    IllIlIIIIl[16] = -(0x1B ^ 0xE ^ 0x57 ^ 0x5D);
    IllIlIIIIl[17] = 0x9 ^ 0x4;
    IllIlIIIIl[18] = (0x58 ^ 0x36) + 173 + 171 - 298 + 138 - 148 + 108 - 113 + 59 + (0xCE ^ 0xA6);
    IllIlIIIIl[19] = 51 + 145 - 137 + 96;
    IllIlIIIIl[20] = 72 + 6 - -9 + 64;
    IllIlIIIIl[21] = 0x78 ^ 0x35;
    IllIlIIIIl[22] = 92 + 91 - 160 + 186;
    IllIlIIIIl[23] = 63 + 108 - 162 + 150;
    IllIlIIIIl[24] = 0x72 ^ 0x1C;
    IllIlIIIIl[25] = 219 + 152 - 267 + 123 ^ 18 + 106 - 96 + 132;
    IllIlIIIIl[26] = 0x48 ^ 0x78 ^ 0xAB ^ 0xC5;
  }
  
  static {
    llIlIlIlIll();
    IlIlIlIlIll();
  }
  
  private static String lllIIlIlIll(byte IlllIlllIIIlIl, short lIllIlllIIIlIl) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   43: iconst_1
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   65: iconst_1
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic lIllIlIlIll : (I)Z
    //   80: ifeq -> 240
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   131: iconst_1
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   136: bipush #15
    //   138: iaload
    //   139: iadd
    //   140: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   143: bipush #16
    //   145: iaload
    //   146: isub
    //   147: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   150: bipush #17
    //   152: iaload
    //   153: iadd
    //   154: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   157: bipush #18
    //   159: iaload
    //   160: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   163: bipush #19
    //   165: iaload
    //   166: ixor
    //   167: ixor
    //   168: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   171: bipush #20
    //   173: iaload
    //   174: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   177: bipush #21
    //   179: iaload
    //   180: iadd
    //   181: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   184: bipush #22
    //   186: iaload
    //   187: isub
    //   188: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   191: bipush #23
    //   193: iaload
    //   194: iadd
    //   195: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   198: bipush #11
    //   200: iaload
    //   201: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   204: bipush #24
    //   206: iaload
    //   207: iadd
    //   208: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   211: bipush #25
    //   213: iaload
    //   214: isub
    //   215: getstatic com/exploiters/xploitclient/utils/ItemContentUtils.IllIlIIIIl : [I
    //   218: bipush #26
    //   220: iaload
    //   221: iadd
    //   222: ixor
    //   223: ldc_w ' '
    //   226: invokevirtual length : ()I
    //   229: ineg
    //   230: ixor
    //   231: iand
    //   232: invokestatic lIllIlIlIll : (I)Z
    //   235: ifeq -> 70
    //   238: aconst_null
    //   239: areturn
    //   240: aload_2
    //   241: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   244: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	245	4	lIIlllllIIIlIl	S
    //   48	197	4	IIlIllllIIIlIl	I
    //   0	245	1	lIIIllllIIIlIl	Ljava/lang/String;
    //   0	245	7	lllIIlllIIIlIl	Ljava/lang/String;
    //   0	245	0	IIIIllllIIIlIl	Ljava/lang/String;
    //   0	245	1	lIllIlllIIIlIl	S
    //   0	245	3	llIlllllIIIlIl	J
    //   0	245	6	IIIlIlllIIIlIl	C
    //   90	24	8	IIIlllllIIIlIl	C
    //   32	213	2	IIllllllIIIlIl	Ljava/lang/StringBuilder;
    //   0	245	7	llIIllllIIIlIl	D
    //   0	245	3	llIlIlllIIIlIl	I
    //   0	245	2	IlIlllllIIIlIl	F
    //   0	245	0	IlllIlllIIIlIl	B
    //   0	245	1	IlIIllllIIIlIl	Ljava/lang/String;
    //   0	245	8	IllIIlllIIIlIl	B
    //   37	208	3	lIlIllllIIIlIl	[C
    //   0	245	5	IllIllllIIIlIl	F
    //   0	245	0	llllIlllIIIlIl	Ljava/lang/String;
    //   0	245	8	lIllllllIIIlIl	S
    //   0	245	5	lIIlIlllIIIlIl	F
    //   0	245	4	IlIlIlllIIIlIl	J
    //   0	245	2	IIllIlllIIIlIl	Ljava/lang/Exception;
    //   0	245	6	lllIllllIIIlIl	S
  }
  
  public static List<List<String>> getTextInBook(class_1799 lllIIlIIlIIlIl) {
    List<String> IllIIlIIlIIlIl = new ArrayList<>();
    class_2487 lIlIIlIIlIIlIl = lllIIlIIlIIlIl.method_7969();
    if (IIllIlIlIll(lIlIIlIIlIIlIl) && lIllIlIlIll(lIlIIlIIlIIlIl.method_10545(lIlIlIIIIl[IllIlIIIIl[6]]))) {
      class_2499 IIllIlIIlIIlIl = lIlIIlIIlIIlIl.method_10554(lIlIlIIIIl[IllIlIIIIl[7]], IllIlIIIIl[8]);
      int lIllIlIIlIIlIl = IllIlIIIIl[1];
      while (IlllIlIlIll(lIllIlIIlIIlIl, IIllIlIIlIIlIl.size())) {
        "".length();
        lIllIlIIlIIlIl++;
        "".length();
        if (((0x26 ^ 0x1C) & (0xAD ^ 0x97 ^ 0xFFFFFFFF)) > ((0x3C ^ 0x74) & (0x5C ^ 0x14 ^ 0xFFFFFFFF)))
          return null; 
      } 
    } 
    List<List<String>> IIlIIlIIlIIlIl = new ArrayList<>();
    Iterator<String> iterator = IllIIlIIlIIlIl.iterator();
    while (lIllIlIlIll(iterator.hasNext())) {
      String IIIlIlIIlIIlIl = iterator.next();
      String IlIlIlIIlIIlIl = lIlIlIIIIl[IllIlIIIIl[9]];
      List<String> lIIlIlIIlIIlIl = new ArrayList<>();
      char[] arrayOfChar = IIIlIlIIlIIlIl.toCharArray();
      int i = arrayOfChar.length;
      int j = IllIlIIIIl[1];
      while (IlllIlIlIll(j, i)) {
        char llIlIlIIlIIlIl = arrayOfChar[j];
        if (!llllIlIlIll((class_310.method_1551()).field_1772.method_1727(IlIlIlIIlIIlIl), IllIlIIIIl[10]) || lIllIlIlIll(IlIlIlIIlIIlIl.endsWith(lIlIlIIIIl[IllIlIIIIl[8]]))) {
          "".length();
          IlIlIlIIlIIlIl = lIlIlIIIIl[IllIlIIIIl[13]];
        } 
        IlIlIlIIlIIlIl = String.valueOf((new StringBuilder()).append(IlIlIlIIlIIlIl).append(llIlIlIIlIIlIl));
        j++;
        "".length();
        if ("   ".length() == ((0x53 ^ 0x41) & (0x51 ^ 0x43 ^ 0xFFFFFFFF)))
          return null; 
      } 
      "".length();
      "".length();
      "".length();
      if (" ".length() <= -" ".length())
        return null; 
    } 
    return IIlIIlIIlIIlIl;
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclien\\utils\ItemContentUtils.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */