package com.exploiters.xploitclient.utils;

import net.arikia.dev.drpc.DiscordEventHandlers;
import net.arikia.dev.drpc.DiscordRPC;
import net.arikia.dev.drpc.DiscordUser;

public class DiscordRPCManager {
  public static void start(String lIlIIIIllllIIll) {
    System.out.println(IlIIlll[llIIlll[0]]);
    DiscordRPC.discordInitialize(lIlIIIIllllIIll, (new DiscordEventHandlers.Builder()).setReadyEventHandler(IIlIIIIllllIIll -> System.out.println(IlIIlll[llIIlll[1]])).build(), llIIlll[1]);
  }
  
  static {
    lIIllllIl();
    IIIllllIl();
  }
  
  private static String lllIlllIl(long IllIlllIlllIIll, byte IIlIlllIlllIIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/utils/DiscordRPCManager.llIIlll : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/utils/DiscordRPCManager.llIIlll : [I
    //   39: iconst_1
    //   40: iaload
    //   41: iaload
    //   42: aaload
    //   43: invokespecial <init> : ([BLjava/lang/String;)V
    //   46: astore_2
    //   47: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   50: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   53: getstatic com/exploiters/xploitclient/utils/DiscordRPCManager.llIIlll : [I
    //   56: iconst_2
    //   57: iaload
    //   58: iaload
    //   59: aaload
    //   60: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   63: astore_3
    //   64: aload_3
    //   65: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   68: getstatic com/exploiters/xploitclient/utils/DiscordRPCManager.llIIlll : [I
    //   71: iconst_2
    //   72: iaload
    //   73: iaload
    //   74: aload_2
    //   75: invokevirtual init : (ILjava/security/Key;)V
    //   78: new java/lang/String
    //   81: dup
    //   82: aload_3
    //   83: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   86: aload_0
    //   87: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   90: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   93: invokevirtual decode : ([B)[B
    //   96: invokevirtual doFinal : ([B)[B
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   105: areturn
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual printStackTrace : ()V
    //   111: aconst_null
    //   112: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	113	3	lIlllllIlllIIll	I
    //   0	113	0	IIlllllIlllIIll	Ljava/lang/String;
    //   64	42	3	lIIllllIlllIIll	Ljavax/crypto/Cipher;
    //   0	113	3	llIIlllIlllIIll	C
    //   0	113	1	lllIlllIlllIIll	Ljava/lang/Exception;
    //   0	113	0	IllIlllIlllIIll	J
    //   0	113	0	lllllllIlllIIll	S
    //   0	113	1	lIlIlllIlllIIll	F
    //   107	4	2	llIllllIlllIIll	Ljava/lang/Exception;
    //   47	59	2	IIIllllIlllIIll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	113	1	IllllllIlllIIll	Ljava/lang/String;
    //   0	113	2	IIlIlllIlllIIll	B
    //   0	113	2	IlIllllIlllIIll	Ljava/lang/Exception;
    // Exception table:
    //   from	to	target	type
    //   0	105	106	java/lang/Exception
  }
  
  private static void IIIllllIl() {
    IlIIlll = new String[llIIlll[2]];
    IlIIlll[llIIlll[0]] = lllIlllIl("dzRBFncJhx+IQn6xM9ubu5ypT1g4PJjZ", "eFYVy");
    IlIIlll[llIIlll[1]] = lllIlllIl("Kz12js7GDpIloa/jqOOiyt6adGuS/8d4z3RzeJAwTWOwfzqCTyw8ng==", "DGdMg");
  }
  
  private static void lIIllllIl() {
    llIIlll = new int[3];
    llIIlll[0] = " ".length() & (" ".length() ^ -" ".length());
    llIIlll[1] = " ".length();
    llIIlll[2] = "  ".length();
  }
  
  public static void stop() {
    DiscordRPC.discordShutdown();
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclien\\utils\DiscordRPCManager.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */