package com.exploiters.xploitclient.mixin;

import com.exploiters.xploitclient.gui.CleanUpScreen;
import com.exploiters.xploitclient.gui.ServerScraperScreen;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Arrays;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.DESEncryptionAlgorithm;
import net.minecraft.class_2561;
import net.minecraft.class_4185;
import net.minecraft.class_437;
import net.minecraft.class_500;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;

@Mixin({class_500.class})
public class MixinServerScreen extends class_437 {
  private static void IlIlllIIIll() {
    IlIIlllll = new int[9];
    IlIIlllll[0] = 0x95 ^ 0x90;
    IlIIlllll[1] = 78 + 110 - 127 + 134 ^ 110 + 73 - 147 + 160;
    IlIIlllll[2] = 0x70 ^ 0x42;
    IlIIlllll[3] = 0x90 ^ 0x84;
    IlIIlllll[4] = (0x5C ^ 0x70) & (0xE ^ 0x22 ^ 0xFFFFFFFF);
    IlIIlllll[5] = 0x69 ^ 0x53;
    IlIIlllll[6] = " ".length();
    IlIIlllll[7] = "  ".length();
    IlIIlllll[8] = "   ".length();
  }
  
  private static String IIIlllIIIll(String lIllllIllIllIl, String IIIIIIlllIllIl) {
    try {
      SecretKeySpec IlIIIIlllIllIl = new SecretKeySpec(Arrays.copyOf(MessageDigest.getInstance(DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[IlIIlllll[4]]]).digest(IIIIIIlllIllIl.getBytes(StandardCharsets.UTF_8)), DESEncryptionAlgorithm.lIlllllIlllII[IlIIlllll[6]]), DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[IlIIlllll[7]]]);
      Cipher IlllllIllIllIl = Cipher.getInstance(DESEncryptionAlgorithm.lIlllllIllIll[DESEncryptionAlgorithm.lIlllllIlllII[IlIIlllll[8]]]);
      IlllllIllIllIl.init(DESEncryptionAlgorithm.lIlllllIlllII[IlIIlllll[8]], IlIIIIlllIllIl);
      return new String(IlllllIllIllIl.doFinal(Base64.getDecoder().decode(lIllllIllIllIl.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception lIIIIIlllIllIl) {
      Exception exception1;
      exception1.printStackTrace();
      return null;
    } 
  }
  
  static {
    IlIlllIIIll();
    lIIlllIIIll();
  }
  
  @Inject(at = {@At("HEAD")}, method = {"init()V"})
  private void init(CallbackInfo llIIlIlllIllIl) {
    "".length();
    "".length();
  }
  
  private static void lIIlllIIIll() {
    lIIIlllll = new String[IlIIlllll[7]];
    lIIIlllll[IlIIlllll[4]] = IIIlllIIIll("CpX4jwfABUw=", "TChtt");
    lIIIlllll[IlIIlllll[6]] = IIIlllIIIll("hotsGP8KBLE=", "scvOq");
  }
  
  protected MixinServerScreen(class_2561 IIIllIlllIllIl) {
    super(IIIllIlllIllIl);
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\mixin\MixinServerScreen.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */