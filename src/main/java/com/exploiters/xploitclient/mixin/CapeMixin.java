package com.exploiters.xploitclient.mixin;

import com.exploiters.xploitclient.utils.capes.ExploitHackCapeUtils;
import java.util.UUID;
import net.minecraft.class_2960;
import net.minecraft.class_742;
import net.minecraft.class_972;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Redirect;

@Mixin({class_972.class})
public class CapeMixin {
  private static String IllllIlll(int IlIIIIlIIlIIIll, boolean lIIIIIlIIlIIIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   36: iconst_1
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   51: iconst_2
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   68: bipush #16
    //   70: iaload
    //   71: iaload
    //   72: aaload
    //   73: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   76: astore_3
    //   77: aload_3
    //   78: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   81: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   84: bipush #16
    //   86: iaload
    //   87: iaload
    //   88: aload_2
    //   89: invokevirtual init : (ILjava/security/Key;)V
    //   92: new java/lang/String
    //   95: dup
    //   96: aload_3
    //   97: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   100: aload_0
    //   101: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   104: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   107: invokevirtual decode : ([B)[B
    //   110: invokevirtual doFinal : ([B)[B
    //   113: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   116: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   119: areturn
    //   120: astore_2
    //   121: aload_2
    //   122: invokevirtual printStackTrace : ()V
    //   125: aconst_null
    //   126: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	127	1	IlIlIIlIIlIIIll	F
    //   121	4	2	lllIIIlIIlIIIll	Ljava/lang/Exception;
    //   0	127	1	lIIIIIlIIlIIIll	Z
    //   0	127	1	IllIIIlIIlIIIll	Ljava/lang/String;
    //   0	127	0	llIIIIlIIlIIIll	Ljava/lang/String;
    //   77	43	3	IIlIIIlIIlIIIll	Ljavax/crypto/Cipher;
    //   0	127	2	IIIIIIlIIlIIIll	D
    //   0	127	2	lIlIIIlIIlIIIll	C
    //   0	127	3	llIlIIlIIlIIIll	I
    //   0	127	3	llllllIIIlIIIll	F
    //   0	127	0	IlIIIIlIIlIIIll	I
    //   59	61	2	IIIlIIlIIlIIIll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	127	0	lIIlIIlIIlIIIll	J
    // Exception table:
    //   from	to	target	type
    //   0	119	120	java/lang/Exception
  }
  
  private static void lIIIIllll() {
    IlIIIlIl = new int[17];
    IlIIIlIl[0] = (0xDF ^ 0xA9 ^ 0x32 ^ 0x8) & (0x4E ^ 0x43 ^ 0xD3 ^ 0x92 ^ -" ".length());
    IlIIIlIl[1] = " ".length();
    IlIIIlIl[2] = "  ".length();
    IlIIIlIl[3] = 0xEE ^ 0xBD;
    IlIIIlIl[4] = -(0xEF ^ 0xAD ^ 0xD9 ^ 0x84);
    IlIIIlIl[5] = 0x97 ^ 0x9A;
    IlIIIlIl[6] = (0xC4 ^ 0xA0) + 132 + 107 - 150 + 73 - (0x72 ^ 0x29) + (0xDA ^ 0xC3);
    IlIIIlIl[7] = 60 + 11 - 11 + 95;
    IlIIIlIl[8] = 62 + 123 - 84 + 50;
    IlIIIlIl[9] = 0x10 ^ 0x7 ^ 0xCC ^ 0x96;
    IlIIIlIl[10] = 10 + 144 - 44 + 99;
    IlIIIlIl[11] = 70 + 77 - 69 + 81;
    IlIIIlIl[12] = 0x55 ^ 0x2 ^ 0x3A ^ 0x64;
    IlIIIlIl[13] = 0x27 ^ 0x49;
    IlIIIlIl[14] = 25 + 167 - 97 + 124 ^ 44 + 31 - -36 + 41;
    IlIIIlIl[15] = 0xED ^ 0xB3;
    IlIIIlIl[16] = "   ".length();
  }
  
  @Redirect(method = {"render"}, at = @At(value = "INVOKE", target = "Lnet/minecraft/client/network/AbstractClientPlayerEntity;getCapeTexture()Lnet/minecraft/util/Identifier;"))
  private class_2960 getCapeTexture(class_742 IIlIlllIIlIIIll) {
    UUID llIIlllIIlIIIll = IIlIlllIIlIIIll.method_5667();
    return IlIIIllll(ExploitHackCapeUtils.getOwners().contains(llIIlllIIlIIIll)) ? new class_2960(lIIIIlIl[IlIIIlIl[0]], lIIIIlIl[IlIIIlIl[1]]) : IIlIlllIIlIIIll.method_3119();
  }
  
  private static void IIIIIllll() {
    lIIIIlIl = new String[IlIIIlIl[2]];
    lIIIIlIl[IlIIIlIl[0]] = IllllIlll("s3o2TSQNHBvoY6Rn0GJ3LA==", "fhZlV");
    lIIIIlIl[IlIIIlIl[1]] = lllllIlll("CS01MzhFOTYzOTUvJCYuRDwrMQ==", "jLEVK");
  }
  
  private static boolean IlIIIllll(byte lIllllIIIlIIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  static {
    lIIIIllll();
    IIIIIllll();
  }
  
  private static String lllllIlll(short IIIllIlIIlIIIll, String llIllIlIIlIIIll) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   43: iconst_0
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   65: iconst_0
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic IlIIIllll : (I)Z
    //   80: ifeq -> 236
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   131: iconst_0
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   136: iconst_3
    //   137: iaload
    //   138: iadd
    //   139: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   142: iconst_4
    //   143: iaload
    //   144: isub
    //   145: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   148: iconst_5
    //   149: iaload
    //   150: iadd
    //   151: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   154: bipush #6
    //   156: iaload
    //   157: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   160: bipush #7
    //   162: iaload
    //   163: ixor
    //   164: ixor
    //   165: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   168: bipush #8
    //   170: iaload
    //   171: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   174: bipush #9
    //   176: iaload
    //   177: iadd
    //   178: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   181: bipush #10
    //   183: iaload
    //   184: isub
    //   185: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   188: bipush #11
    //   190: iaload
    //   191: iadd
    //   192: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   195: bipush #12
    //   197: iaload
    //   198: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   201: bipush #13
    //   203: iaload
    //   204: iadd
    //   205: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   208: bipush #14
    //   210: iaload
    //   211: isub
    //   212: getstatic com/exploiters/xploitclient/mixin/CapeMixin.IlIIIlIl : [I
    //   215: bipush #15
    //   217: iaload
    //   218: iadd
    //   219: ixor
    //   220: ldc ' '
    //   222: invokevirtual length : ()I
    //   225: ineg
    //   226: ixor
    //   227: iand
    //   228: invokestatic IlIIIllll : (I)Z
    //   231: ifeq -> 70
    //   234: aconst_null
    //   235: areturn
    //   236: aload_2
    //   237: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   240: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	241	7	lIIIlIlIIlIIIll	Ljava/lang/String;
    //   0	241	3	lIlIIllIIlIIIll	J
    //   90	24	8	IlIIIllIIlIIIll	C
    //   0	241	6	lIIIIllIIlIIIll	S
    //   37	204	3	lllllIlIIlIIIll	[C
    //   0	241	1	lllIlIlIIlIIIll	Ljava/lang/Exception;
    //   48	193	4	IllllIlIIlIIIll	I
    //   0	241	5	IIIIIllIIlIIIll	F
    //   0	241	7	lIlllIlIIlIIIll	D
    //   0	241	8	IIIIlIlIIlIIIll	D
    //   0	241	1	llIllIlIIlIIIll	Ljava/lang/String;
    //   0	241	4	IIlIlIlIIlIIIll	Ljava/lang/String;
    //   0	241	1	IIlllIlIIlIIIll	Ljava/lang/String;
    //   0	241	4	llIIIllIIlIIIll	S
    //   0	241	3	lIlIlIlIIlIIIll	C
    //   0	241	6	IlIIlIlIIlIIIll	Z
    //   0	241	2	IllIlIlIIlIIIll	Ljava/lang/Exception;
    //   0	241	0	IlIllIlIIlIIIll	Ljava/lang/String;
    //   0	241	2	IIlIIllIIlIIIll	F
    //   32	209	2	IllIIllIIlIIIll	Ljava/lang/StringBuilder;
    //   0	241	0	IIIllIlIIlIIIll	S
    //   0	241	8	lllIIllIIlIIIll	S
    //   0	241	5	llIIlIlIIlIIIll	Ljava/lang/Exception;
    //   0	241	0	lIIllIlIIlIIIll	Ljava/lang/String;
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\mixin\CapeMixin.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */