package com.exploiters.xploitclient.mixin;

import com.exploiters.xploitclient.XploitClient;
import com.exploiters.xploitclient.event.events.EventDrawContainer;
import com.exploiters.xploitclient.module.ModuleManager;
import com.exploiters.xploitclient.module.mods.AutoDonkeyDupe;
import com.exploiters.xploitclient.module.mods.MountBypass;
import net.minecraft.class_1268;
import net.minecraft.class_1492;
import net.minecraft.class_2561;
import net.minecraft.class_2596;
import net.minecraft.class_2824;
import net.minecraft.class_310;
import net.minecraft.class_4185;
import net.minecraft.class_437;
import net.minecraft.class_465;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;

@Mixin({class_465.class})
public abstract class MixinContainerScreen extends class_437 {
  @Inject(at = {@At("RETURN")}, method = {"init()V"})
  protected void init(CallbackInfo IIIIIllIIIIIll) {
    if (IIIIIIIIIll((class_310.method_1551()).field_1724.method_5854() instanceof class_1492))
      return; 
    class_1492 lllllIlIIIIIll = (class_1492)(class_310.method_1551()).field_1724.method_5854();
    "".length();
    "".length();
  }
  
  private static void IllllllllIl() {
    IlIIIllll = new String[llIIIllll[8]];
    IlIIIllll[llIIIllll[4]] = IIlllllllIl("lsKCKCUHtIHNAHgGnxwfJQ==", "ndxdw");
    IlIIIllll[llIIIllll[7]] = lIlllllllIl("ycgZ+EMegvE=", "QJxat");
  }
  
  private static String lIlllllllIl(long llllIlIIIIIIll, short IllIIlIIIIIIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/mixin/MixinContainerScreen.llIIIllll : [I
    //   13: iconst_4
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/mixin/MixinContainerScreen.llIIIllll : [I
    //   36: bipush #7
    //   38: iaload
    //   39: iaload
    //   40: invokestatic copyOf : ([BI)[B
    //   43: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   46: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   49: getstatic com/exploiters/xploitclient/mixin/MixinContainerScreen.llIIIllll : [I
    //   52: bipush #8
    //   54: iaload
    //   55: iaload
    //   56: aaload
    //   57: invokespecial <init> : ([BLjava/lang/String;)V
    //   60: astore_2
    //   61: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   64: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   67: getstatic com/exploiters/xploitclient/mixin/MixinContainerScreen.llIIIllll : [I
    //   70: bipush #9
    //   72: iaload
    //   73: iaload
    //   74: aaload
    //   75: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   78: astore_3
    //   79: aload_3
    //   80: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   83: getstatic com/exploiters/xploitclient/mixin/MixinContainerScreen.llIIIllll : [I
    //   86: bipush #9
    //   88: iaload
    //   89: iaload
    //   90: aload_2
    //   91: invokevirtual init : (ILjava/security/Key;)V
    //   94: new java/lang/String
    //   97: dup
    //   98: aload_3
    //   99: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   102: aload_0
    //   103: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   106: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   109: invokevirtual decode : ([B)[B
    //   112: invokevirtual doFinal : ([B)[B
    //   115: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   118: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   121: areturn
    //   122: astore_2
    //   123: aload_2
    //   124: invokevirtual printStackTrace : ()V
    //   127: aconst_null
    //   128: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	129	0	IIIlIlIIIIIIll	C
    //   0	129	2	IllIIlIIIIIIll	S
    //   0	129	0	llllIlIIIIIIll	J
    //   79	43	3	IlIlIlIIIIIIll	Ljavax/crypto/Cipher;
    //   0	129	3	lIIIllIIIIIIll	I
    //   0	129	0	lIIlIlIIIIIIll	Ljava/lang/String;
    //   0	129	1	IIIIllIIIIIIll	F
    //   0	129	1	lllIIlIIIIIIll	Z
    //   123	4	2	lIllIlIIIIIIll	Ljava/lang/Exception;
    //   61	61	2	IlllIlIIIIIIll	Ljavax/crypto/spec/SecretKeySpec;
    //   0	129	3	lIlIIlIIIIIIll	I
    //   0	129	1	IIllIlIIIIIIll	Ljava/lang/String;
    //   0	129	2	llIlIlIIIIIIll	C
    // Exception table:
    //   from	to	target	type
    //   0	121	122	java/lang/Exception
  }
  
  static {
    lllllllllIl();
    IllllllllIl();
  }
  
  private static boolean lIIIIIIIIll(double llIIIlIIIIIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  protected MixinContainerScreen(Exception IIlIIllIIIIIll) {
    super((class_2561)IIlIIllIIIIIll);
  }
  
  @Inject(at = {@At("RETURN")}, method = {"render"})
  public void render(long IIIIlIlIIIIIll, int IIlIlIlIIIIIll, float llIIlIlIIIIIll, float lIllIIlIIIIIll, float IIllIIlIIIIIll) {
    EventDrawContainer lIIIlIlIIIIIll = new EventDrawContainer((class_465)(class_310.method_1551()).field_1755, lIlIlIlIIIIIll, IIlIlIlIIIIIll, IIIIlIlIIIIIll);
    XploitClient.eventBus.post(lIIIlIlIIIIIll);
    if (lIIIIIIIIll(lIIIlIlIIIIIll.isCancelled()))
      lIllIIlIIIIIll.cancel(); 
  }
  
  private static String IIlllllllIl(boolean lIIlllIIIIIIll, Exception IlIlllIIIIIIll) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   10: getstatic com/exploiters/xploitclient/mixin/MixinContainerScreen.llIIIllll : [I
    //   13: iconst_4
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   33: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   36: getstatic com/exploiters/xploitclient/mixin/MixinContainerScreen.llIIIllll : [I
    //   39: bipush #7
    //   41: iaload
    //   42: iaload
    //   43: aaload
    //   44: invokespecial <init> : ([BLjava/lang/String;)V
    //   47: astore_2
    //   48: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIIlIlIlIl : [Ljava/lang/String;
    //   51: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   54: getstatic com/exploiters/xploitclient/mixin/MixinContainerScreen.llIIIllll : [I
    //   57: bipush #8
    //   59: iaload
    //   60: iaload
    //   61: aaload
    //   62: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   65: astore_3
    //   66: aload_3
    //   67: getstatic me/superblaubeere27/jobf/processors/encryption/string/BlowfishEncryptionAlgorithm.lllIIlIIllIlI : [I
    //   70: getstatic com/exploiters/xploitclient/mixin/MixinContainerScreen.llIIIllll : [I
    //   73: bipush #8
    //   75: iaload
    //   76: iaload
    //   77: aload_2
    //   78: invokevirtual init : (ILjava/security/Key;)V
    //   81: new java/lang/String
    //   84: dup
    //   85: aload_3
    //   86: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   89: aload_0
    //   90: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   93: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   96: invokevirtual decode : ([B)[B
    //   99: invokevirtual doFinal : ([B)[B
    //   102: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   105: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   108: areturn
    //   109: astore_2
    //   110: aload_2
    //   111: invokevirtual printStackTrace : ()V
    //   114: aconst_null
    //   115: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	116	2	lIllllIIIIIIll	Ljava/lang/Exception;
    //   0	116	0	IlIIIIlIIIIIll	S
    //   0	116	1	IIIlllIIIIIIll	Ljava/lang/Exception;
    //   0	116	3	IllIllIIIIIIll	C
    //   0	116	0	lIIlllIIIIIIll	Z
    //   110	4	2	IlllllIIIIIIll	Ljava/lang/Exception;
    //   0	116	3	IIIIIIlIIIIIll	I
    //   48	61	2	llIlllIIIIIIll	Ljavax/crypto/spec/SecretKeySpec;
    //   66	43	3	IIllllIIIIIIll	Ljavax/crypto/Cipher;
    //   0	116	0	llllllIIIIIIll	Ljava/lang/String;
    //   0	116	1	IlIlllIIIIIIll	Ljava/lang/Exception;
    //   0	116	2	lllIllIIIIIIll	B
    //   0	116	1	lIIIIIlIIIIIll	Ljava/lang/String;
    // Exception table:
    //   from	to	target	type
    //   0	108	109	java/lang/Exception
  }
  
  private static void lllllllllIl() {
    llIIIllll = new int[10];
    llIIIllll[0] = 0xD1 ^ 0x83;
    llIIIllll[1] = 0xB8 ^ 0x8D ^ 0x62 ^ 0x53;
    llIIIllll[2] = 0xE ^ 0x19 ^ 0x5E ^ 0x65;
    llIIIllll[3] = 0x24 ^ 0x73 ^ 0xDF ^ 0x84;
    llIIIllll[4] = (69 + 80 - 79 + 110 ^ 25 + 156 - 85 + 61) & (132 + 147 - 235 + 142 ^ 139 + 62 - 110 + 56 ^ -" ".length()) & ((2 + 15 - -71 + 41 ^ 124 + 1 - 40 + 102) & (0x94 ^ 0xC7 ^ 0xEE ^ 0x87 ^ -" ".length()) ^ -" ".length());
    llIIIllll[5] = 33 + 56 - 87 + 128;
    llIIIllll[6] = 0x51 ^ 0x76;
    llIIIllll[7] = " ".length();
    llIIIllll[8] = "  ".length();
    llIIIllll[9] = "   ".length();
  }
  
  private static boolean IIIIIIIIIll(Exception lIIIIlIIIIIIll) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\mixin\MixinContainerScreen.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */