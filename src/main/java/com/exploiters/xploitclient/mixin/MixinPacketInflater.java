package com.exploiters.xploitclient.mixin;

import io.netty.channel.ChannelHandlerContext;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Base64;
import java.util.zip.Inflater;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.BlowfishEncryptionAlgorithm;
import net.minecraft.class_2532;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;

@Mixin({class_2532.class})
public class MixinPacketInflater {
  private static String IlllIIllIll(String IIIIlIIIlllIIl, String IlIIlIIIlllIIl) {
    try {
      SecretKeySpec IIllIIIIlllIIl = new SecretKeySpec(MessageDigest.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[llIlIlIIIl[1]]]).digest(IlIIlIIIlllIIl.getBytes(StandardCharsets.UTF_8)), BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[llIlIlIIIl[3]]]);
      Cipher lIllIIIIlllIIl = Cipher.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[llIlIlIIIl[4]]]);
      lIllIIIIlllIIl.init(BlowfishEncryptionAlgorithm.lllIIlIIllIlI[llIlIlIIIl[4]], IIllIIIIlllIIl);
      return new String(lIllIIIIlllIIl.doFinal(Base64.getDecoder().decode(IIIIlIIIlllIIl.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception llllIIIIlllIIl) {
      IlllIIIIlllIIl.printStackTrace();
      return null;
    } 
  }
  
  private static void IIIllIllIll() {
    llIlIlIIIl = new int[5];
    llIlIlIIIl[0] = 0xFFFFFD2D & 0x30D42D2;
    llIlIlIIIl[1] = (120 + 36 - 90 + 167 ^ 121 + 33 - -27 + 14) & (0x34 ^ 0x62 ^ 0x29 ^ 0x55 ^ -" ".length());
    llIlIlIIIl[2] = -(0xFFFFCFBE & 0x3DEF) & 0xFFFFCFEF & 0xF7FFD;
    llIlIlIIIl[3] = " ".length();
    llIlIlIIIl[4] = "  ".length();
  }
  
  @Inject(at = {@At("HEAD")}, method = {"decode(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V"}, cancellable = true)
  protected void decode(ChannelHandlerContext llIIIlIIlllIIl, float IllllIIIlllIIl, short lIlllIIIlllIIl, long IIlllIIIlllIIl) throws Exception {
    // Byte code:
    //   0: ldc com/exploiters/xploitclient/module/mods/AntiChunkBan
    //   2: invokestatic getModule : (Ljava/lang/Class;)Lcom/exploiters/xploitclient/module/Module;
    //   5: invokevirtual isToggled : ()Z
    //   8: invokestatic IlIllIllIll : (I)Z
    //   11: ifeq -> 15
    //   14: return
    //   15: aload #4
    //   17: invokevirtual cancel : ()V
    //   20: aload_2
    //   21: invokevirtual readableBytes : ()I
    //   24: invokestatic llIllIllIll : (I)Z
    //   27: ifeq -> 239
    //   30: new net/minecraft/class_2540
    //   33: dup
    //   34: aload_2
    //   35: invokespecial <init> : (Lio/netty/buffer/ByteBuf;)V
    //   38: astore #5
    //   40: aload #5
    //   42: invokevirtual method_10816 : ()I
    //   45: istore #6
    //   47: iload #6
    //   49: invokestatic IlIllIllIll : (I)Z
    //   52: ifeq -> 97
    //   55: aload_3
    //   56: aload #5
    //   58: aload #5
    //   60: invokevirtual readableBytes : ()I
    //   63: invokevirtual readBytes : (I)Lio/netty/buffer/ByteBuf;
    //   66: invokeinterface add : (Ljava/lang/Object;)Z
    //   71: ldc ''
    //   73: invokevirtual length : ()I
    //   76: pop2
    //   77: ldc ''
    //   79: invokevirtual length : ()I
    //   82: pop
    //   83: ldc '  '
    //   85: invokevirtual length : ()I
    //   88: bipush #114
    //   90: bipush #118
    //   92: ixor
    //   93: if_icmplt -> 239
    //   96: return
    //   97: iload #6
    //   99: getstatic com/exploiters/xploitclient/mixin/MixinPacketInflater.llIlIlIIIl : [I
    //   102: iconst_0
    //   103: iaload
    //   104: invokestatic IIlllIllIll : (II)Z
    //   107: ifeq -> 163
    //   110: new io/netty/handler/codec/DecoderException
    //   113: dup
    //   114: new java/lang/StringBuilder
    //   117: dup
    //   118: invokespecial <init> : ()V
    //   121: getstatic com/exploiters/xploitclient/mixin/MixinPacketInflater.IlIlIlIIIl : [Ljava/lang/String;
    //   124: getstatic com/exploiters/xploitclient/mixin/MixinPacketInflater.llIlIlIIIl : [I
    //   127: iconst_1
    //   128: iaload
    //   129: aaload
    //   130: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   133: iload #6
    //   135: getstatic com/exploiters/xploitclient/mixin/MixinPacketInflater.llIlIlIIIl : [I
    //   138: iconst_2
    //   139: iaload
    //   140: idiv
    //   141: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   144: getstatic com/exploiters/xploitclient/mixin/MixinPacketInflater.IlIlIlIIIl : [Ljava/lang/String;
    //   147: getstatic com/exploiters/xploitclient/mixin/MixinPacketInflater.llIlIlIIIl : [I
    //   150: iconst_3
    //   151: iaload
    //   152: aaload
    //   153: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   156: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   159: invokespecial <init> : (Ljava/lang/String;)V
    //   162: athrow
    //   163: aload #5
    //   165: invokevirtual readableBytes : ()I
    //   168: newarray byte
    //   170: astore #7
    //   172: aload #5
    //   174: aload #7
    //   176: invokevirtual readBytes : ([B)Lio/netty/buffer/ByteBuf;
    //   179: ldc ''
    //   181: invokevirtual length : ()I
    //   184: pop2
    //   185: aload_0
    //   186: getfield field_11622 : Ljava/util/zip/Inflater;
    //   189: aload #7
    //   191: invokevirtual setInput : ([B)V
    //   194: iload #6
    //   196: newarray byte
    //   198: astore #8
    //   200: aload_0
    //   201: getfield field_11622 : Ljava/util/zip/Inflater;
    //   204: aload #8
    //   206: invokevirtual inflate : ([B)I
    //   209: ldc ''
    //   211: invokevirtual length : ()I
    //   214: pop2
    //   215: aload_3
    //   216: aload #8
    //   218: invokestatic wrappedBuffer : ([B)Lio/netty/buffer/ByteBuf;
    //   221: invokeinterface add : (Ljava/lang/Object;)Z
    //   226: ldc ''
    //   228: invokevirtual length : ()I
    //   231: pop2
    //   232: aload_0
    //   233: getfield field_11622 : Ljava/util/zip/Inflater;
    //   236: invokevirtual reset : ()V
    //   239: return
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   172	67	7	IIIlIlIIlllIIl	[B
    //   0	240	1	llIIIlIIlllIIl	Lio/netty/channel/ChannelHandlerContext;
    //   47	192	6	lIlIIlIIlllIIl	I
    //   0	240	3	lIIIIlIIlllIIl	Ljava/util/List;
    //   0	240	4	IIIIIlIIlllIIl	Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;
    //   0	240	2	IlIIIlIIlllIIl	Lio/netty/buffer/ByteBuf;
    //   0	240	0	IIlIIlIIlllIIl	Lcom/exploiters/xploitclient/mixin/MixinPacketInflater;
    //   0	240	7	lIIllIIIlllIIl	D
    //   0	240	3	lIlllIIIlllIIl	S
    //   0	240	5	llIllIIIlllIIl	J
    //   200	39	8	lllIIlIIlllIIl	[B
    //   0	240	0	lllllIIIlllIIl	B
    //   0	240	4	IIlllIIIlllIIl	J
    //   40	199	5	IllIIlIIlllIIl	Lnet/minecraft/class_2540;
    //   0	240	8	IIIllIIIlllIIl	Ljava/lang/String;
    //   0	240	2	IllllIIIlllIIl	F
    //   0	240	6	IlIllIIIlllIIl	F
    // Local variable type table:
    //   start	length	slot	name	signature
    //   0	240	3	lIIIIlIIlllIIl	Ljava/util/List<Ljava/lang/Object;>;
  }
  
  private static boolean IIlllIllIll(String IIlIIIIIlllIIl, double llIIIIIIlllIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 > SYNTHETIC_LOCAL_VARIABLE_1);
  }
  
  private static boolean llIllIllIll(Exception lIIIIIIIlllIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
  
  private static boolean IlIllIllIll(boolean llllllllIllIIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 == null);
  }
  
  private static void llllIIllIll() {
    IlIlIlIIIl = new String[llIlIlIIIl[4]];
    IlIlIlIIIl[llIlIlIIIl[1]] = IlllIIllIll("mscabxrVB8a24iybXlzbH6AiQ0NDteNie3EWJl2uSnnl2QA6bZxznQ==", "WRRAM");
    IlIlIlIIIl[llIlIlIIIl[3]] = IlllIIllIll("6afT3XeVa7K8kDhgmODWt/8MsjwMqdgKKb8TuV89ZCqvcOZ4ZxYefoJsygPKBw4N", "ilDKw");
  }
  
  static {
    IIIllIllIll();
    llllIIllIll();
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\mixin\MixinPacketInflater.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */