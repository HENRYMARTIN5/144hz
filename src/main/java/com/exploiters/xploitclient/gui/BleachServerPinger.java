package com.exploiters.xploitclient.gui;

import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import me.superblaubeere27.jobf.processors.encryption.string.BlowfishEncryptionAlgorithm;
import net.minecraft.class_642;

class BleachServerPinger {
  public void ping(String IlIlIIIIIlIIIl, int lIIlIIIIIlIIIl) {
    this.server = new class_642(IlIlIIIIIlIIIl, String.valueOf((new StringBuilder()).append(IlIlIIIIIlIIIl).append(IIIlIIlIIl[lIIlIIlIIl[0]]).append(lIIlIIIIIlIIIl)), lIIlIIlIIl[0]);
    System.out.println(String.valueOf((new StringBuilder()).append(IIIlIIlIIl[lIIlIIlIIl[1]]).append(IlIlIIIIIlIIIl).append(IIIlIIlIIl[lIIlIIlIIl[2]]).append(lIIlIIIIIlIIIl)));
    (new Thread(() -> {
          // Byte code:
          //   0: new net/minecraft/class_644
          //   3: dup
          //   4: invokespecial <init> : ()V
          //   7: astore_3
          //   8: aload_3
          //   9: aload_0
          //   10: getfield server : Lnet/minecraft/class_642;
          //   13: <illegal opcode> run : ()Ljava/lang/Runnable;
          //   18: invokevirtual method_3003 : (Lnet/minecraft/class_642;Ljava/lang/Runnable;)V
          //   21: ldc ''
          //   23: invokevirtual length : ()I
          //   26: pop
          //   27: ldc ' '
          //   29: invokevirtual length : ()I
          //   32: bipush #20
          //   34: bipush #82
          //   36: ixor
          //   37: sipush #175
          //   40: sipush #199
          //   43: ixor
          //   44: ixor
          //   45: bipush #57
          //   47: bipush #117
          //   49: iadd
          //   50: sipush #149
          //   53: isub
          //   54: sipush #137
          //   57: iadd
          //   58: bipush #6
          //   60: iconst_4
          //   61: iadd
          //   62: bipush #-8
          //   64: isub
          //   65: bipush #122
          //   67: iadd
          //   68: ixor
          //   69: ldc ' '
          //   71: invokevirtual length : ()I
          //   74: ineg
          //   75: ixor
          //   76: iand
          //   77: if_icmpne -> 92
          //   80: return
          //   81: astore #4
          //   83: aload_0
          //   84: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
          //   87: iconst_1
          //   88: iaload
          //   89: putfield failed : Z
          //   92: aload_3
          //   93: invokevirtual method_3004 : ()V
          //   96: aload_0
          //   97: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
          //   100: iconst_1
          //   101: iaload
          //   102: putfield done : Z
          //   105: getstatic java/lang/System.out : Ljava/io/PrintStream;
          //   108: new java/lang/StringBuilder
          //   111: dup
          //   112: invokespecial <init> : ()V
          //   115: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.IIIlIIlIIl : [Ljava/lang/String;
          //   118: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
          //   121: iconst_3
          //   122: iaload
          //   123: aaload
          //   124: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
          //   127: aload_1
          //   128: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
          //   131: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.IIIlIIlIIl : [Ljava/lang/String;
          //   134: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
          //   137: iconst_4
          //   138: iaload
          //   139: aaload
          //   140: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
          //   143: iload_2
          //   144: invokevirtual append : (I)Ljava/lang/StringBuilder;
          //   147: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.IIIlIIlIIl : [Ljava/lang/String;
          //   150: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
          //   153: iconst_5
          //   154: iaload
          //   155: aaload
          //   156: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
          //   159: aload_0
          //   160: getfield failed : Z
          //   163: invokevirtual append : (Z)Ljava/lang/StringBuilder;
          //   166: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
          //   169: invokevirtual println : (Ljava/lang/String;)V
          //   172: return
          // Local variable table:
          //   start	length	slot	name	descriptor
          //   8	165	3	IIlllllllIIIIl	Lnet/minecraft/class_644;
          //   0	173	2	lIlllllllIIIIl	I
          //   0	173	1	IlIllllllIIIIl	D
          //   0	173	4	lllIlllllIIIIl	B
          //   0	173	0	lllllllllIIIIl	Lcom/exploiters/xploitclient/gui/BleachServerPinger;
          //   83	9	4	IIIIIIIIIlIIIl	Ljava/lang/Exception;
          //   0	173	3	IIIllllllIIIIl	I
          //   0	173	1	IllllllllIIIIl	Ljava/lang/String;
          //   0	173	2	lIIllllllIIIIl	Ljava/lang/String;
          //   0	173	0	llIllllllIIIIl	B
          // Exception table:
          //   from	to	target	type
          //   8	21	81	java/lang/Exception
        })).start();
  }
  
  private static String lIlIIlIIlll(String lIIlIIlllIIIIl, float IIIIlIlllIIIIl) {
    // Byte code:
    //   0: new javax/crypto/spec/SecretKeySpec
    //   3: dup
    //   4: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   7: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   10: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   13: iconst_0
    //   14: iaload
    //   15: iaload
    //   16: aaload
    //   17: invokestatic getInstance : (Ljava/lang/String;)Ljava/security/MessageDigest;
    //   20: aload_1
    //   21: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   24: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   27: invokevirtual digest : ([B)[B
    //   30: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   33: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   36: iconst_1
    //   37: iaload
    //   38: iaload
    //   39: invokestatic copyOf : ([BI)[B
    //   42: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   45: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   48: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   51: iconst_2
    //   52: iaload
    //   53: iaload
    //   54: aaload
    //   55: invokespecial <init> : ([BLjava/lang/String;)V
    //   58: astore_2
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIllIll : [Ljava/lang/String;
    //   62: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   65: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   68: iconst_3
    //   69: iaload
    //   70: iaload
    //   71: aaload
    //   72: invokestatic getInstance : (Ljava/lang/String;)Ljavax/crypto/Cipher;
    //   75: astore_3
    //   76: aload_3
    //   77: getstatic me/superblaubeere27/jobf/processors/encryption/string/DESEncryptionAlgorithm.lIlllllIlllII : [I
    //   80: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   83: iconst_3
    //   84: iaload
    //   85: iaload
    //   86: aload_2
    //   87: invokevirtual init : (ILjava/security/Key;)V
    //   90: new java/lang/String
    //   93: dup
    //   94: aload_3
    //   95: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   98: aload_0
    //   99: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   102: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   105: invokevirtual decode : ([B)[B
    //   108: invokevirtual doFinal : ([B)[B
    //   111: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   114: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   117: areturn
    //   118: astore_2
    //   119: aload_2
    //   120: invokevirtual printStackTrace : ()V
    //   123: aconst_null
    //   124: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	125	3	lIIIlIlllIIIIl	I
    //   0	125	3	lIlIIIlllIIIIl	Z
    //   119	4	2	lIllIIlllIIIIl	Ljava/lang/Exception;
    //   0	125	0	IIIlIIlllIIIIl	Ljava/lang/Exception;
    //   0	125	0	lIIlIIlllIIIIl	Ljava/lang/String;
    //   76	42	3	IlIlIIlllIIIIl	Ljavax/crypto/Cipher;
    //   0	125	1	lllIIIlllIIIIl	F
    //   0	125	1	IIIIlIlllIIIIl	F
    //   0	125	2	IllIIIlllIIIIl	B
    //   59	59	2	IlllIIlllIIIIl	Ljavax/crypto/spec/SecretKeySpec;
    //   0	125	1	IIllIIlllIIIIl	Ljava/lang/String;
    //   0	125	2	llIlIIlllIIIIl	C
    //   0	125	0	llllIIlllIIIIl	J
    // Exception table:
    //   from	to	target	type
    //   0	117	118	java/lang/Exception
  }
  
  static {
    lIIlIlIIlll();
    IIIlIlIIlll();
  }
  
  private static void lIIlIlIIlll() {
    lIIlIIlIIl = new int[20];
    lIIlIIlIIl[0] = (0x3D ^ 0x4 ^ 0xB2 ^ 0x9F) & (63 + 69 - 18 + 31 ^ 64 + 70 - 39 + 38 ^ -" ".length());
    lIIlIIlIIl[1] = " ".length();
    lIIlIIlIIl[2] = "  ".length();
    lIIlIIlIIl[3] = "   ".length();
    lIIlIIlIIl[4] = " ".length() ^ 0x48 ^ 0x4D;
    lIIlIIlIIl[5] = 0x77 ^ 0x72;
    lIIlIIlIIl[6] = 128 + 8 - 34 + 81 ^ 96 + 29 - 121 + 173;
    lIIlIIlIIl[7] = 109 + 58 - 0 + 49 ^ 31 + 95 - 45 + 58;
    lIIlIIlIIl[8] = -(29 + 97 - 59 + 60 ^ 0xA5 ^ 0xC5);
    lIIlIIlIIl[9] = 0x3D ^ 0x30;
    lIIlIIlIIl[10] = 193 + 82 - 125 + 46;
    lIIlIIlIIl[11] = 2 + 106 - 22 + 69;
    lIIlIIlIIl[12] = (0xF ^ 0x56) + 108 + 27 - 39 + 35 - (0x66 ^ 0x1) + (0xB5 ^ 0x97);
    lIIlIIlIIl[13] = 0x6A ^ 0x27;
    lIIlIIlIIl[14] = 197 + 15 - 118 + 115;
    lIIlIIlIIl[15] = (0x79 ^ 0x56) + (0x4C ^ 0x46) - (0x5B ^ 0x4E) + (0x3C ^ 0x47);
    lIIlIIlIIl[16] = 0x8E ^ 0xAA ^ 0x95 ^ 0xB8;
    lIIlIIlIIl[17] = 0x5F ^ 0x31;
    lIIlIIlIIl[18] = 0x46 ^ 0x5;
    lIIlIIlIIl[19] = 0xEB ^ 0xBB ^ 0x87 ^ 0x89;
  }
  
  private static String lllIIlIIlll(String IIIIIllllIIIIl, short lIlllIlllIIIIl) {
    // Byte code:
    //   0: new java/lang/String
    //   3: dup
    //   4: invokestatic getDecoder : ()Ljava/util/Base64$Decoder;
    //   7: aload_0
    //   8: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   11: invokevirtual getBytes : (Ljava/nio/charset/Charset;)[B
    //   14: invokevirtual decode : ([B)[B
    //   17: getstatic java/nio/charset/StandardCharsets.UTF_8 : Ljava/nio/charset/Charset;
    //   20: invokespecial <init> : ([BLjava/nio/charset/Charset;)V
    //   23: astore_0
    //   24: new java/lang/StringBuilder
    //   27: dup
    //   28: invokespecial <init> : ()V
    //   31: astore_2
    //   32: aload_1
    //   33: invokevirtual toCharArray : ()[C
    //   36: astore_3
    //   37: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   40: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   43: iconst_0
    //   44: iaload
    //   45: iaload
    //   46: istore #4
    //   48: aload_0
    //   49: invokevirtual toCharArray : ()[C
    //   52: astore #5
    //   54: aload #5
    //   56: arraylength
    //   57: istore #6
    //   59: getstatic me/superblaubeere27/jobf/processors/encryption/string/XOREncryptionAlgorithm.lIlIIlIlIIIlI : [I
    //   62: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   65: iconst_0
    //   66: iaload
    //   67: iaload
    //   68: istore #7
    //   70: iload #7
    //   72: iload #6
    //   74: invokestatic lIlIlIIlIlIlII : (II)Z
    //   77: invokestatic IlIlIlIIlll : (I)Z
    //   80: ifeq -> 239
    //   83: aload #5
    //   85: iload #7
    //   87: caload
    //   88: istore #8
    //   90: aload_2
    //   91: iload #8
    //   93: aload_3
    //   94: iload #4
    //   96: aload_3
    //   97: arraylength
    //   98: irem
    //   99: caload
    //   100: ixor
    //   101: i2c
    //   102: invokevirtual append : (C)Ljava/lang/StringBuilder;
    //   105: ldc ''
    //   107: invokevirtual length : ()I
    //   110: pop2
    //   111: iinc #4, 1
    //   114: iinc #7, 1
    //   117: ldc ''
    //   119: invokevirtual length : ()I
    //   122: ldc ''
    //   124: invokevirtual length : ()I
    //   127: pop2
    //   128: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   131: iconst_0
    //   132: iaload
    //   133: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   136: bipush #7
    //   138: iaload
    //   139: iadd
    //   140: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   143: bipush #8
    //   145: iaload
    //   146: isub
    //   147: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   150: bipush #9
    //   152: iaload
    //   153: iadd
    //   154: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   157: bipush #10
    //   159: iaload
    //   160: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   163: bipush #11
    //   165: iaload
    //   166: ixor
    //   167: ixor
    //   168: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   171: bipush #12
    //   173: iaload
    //   174: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   177: bipush #13
    //   179: iaload
    //   180: iadd
    //   181: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   184: bipush #14
    //   186: iaload
    //   187: isub
    //   188: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   191: bipush #15
    //   193: iaload
    //   194: iadd
    //   195: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   198: bipush #16
    //   200: iaload
    //   201: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   204: bipush #17
    //   206: iaload
    //   207: iadd
    //   208: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   211: bipush #18
    //   213: iaload
    //   214: isub
    //   215: getstatic com/exploiters/xploitclient/gui/BleachServerPinger.lIIlIIlIIl : [I
    //   218: bipush #19
    //   220: iaload
    //   221: iadd
    //   222: ixor
    //   223: ldc ' '
    //   225: invokevirtual length : ()I
    //   228: ineg
    //   229: ixor
    //   230: iand
    //   231: invokestatic IlIlIlIIlll : (I)Z
    //   234: ifeq -> 70
    //   237: aconst_null
    //   238: areturn
    //   239: aload_2
    //   240: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   243: areturn
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	244	3	llIllIlllIIIIl	F
    //   0	244	0	IllllIlllIIIIl	C
    //   0	244	7	lllIlIlllIIIIl	Ljava/lang/Exception;
    //   0	244	6	lllIIllllIIIIl	S
    //   0	244	5	IllIIllllIIIIl	F
    //   0	244	8	lIllIllllIIIIl	S
    //   90	24	8	IIIlIllllIIIIl	C
    //   0	244	1	lIIIIllllIIIIl	Ljava/lang/String;
    //   0	244	0	IIIIIllllIIIIl	Ljava/lang/String;
    //   0	244	3	llIlIllllIIIIl	J
    //   0	244	1	lIlllIlllIIIIl	S
    //   0	244	2	IIlllIlllIIIIl	S
    //   32	212	2	IIllIllllIIIIl	Ljava/lang/StringBuilder;
    //   48	196	4	IIlIIllllIIIIl	I
    //   0	244	5	lIIllIlllIIIIl	I
    //   0	244	2	IlIlIllllIIIIl	F
    //   0	244	0	lllllIlllIIIIl	Ljava/lang/String;
    //   0	244	8	IllIlIlllIIIIl	J
    //   0	244	1	IlIIIllllIIIIl	Ljava/lang/String;
    //   0	244	7	llIIIllllIIIIl	D
    //   37	207	3	lIlIIllllIIIIl	[C
    //   0	244	4	IlIllIlllIIIIl	B
    //   0	244	6	IIIllIlllIIIIl	Ljava/lang/String;
    //   0	244	4	lIIlIllllIIIIl	S
  }
  
  private static String IllIIlIIlll(Exception lllIllIllIIIIl, Exception IIIlllIllIIIIl) {
    try {
      SecretKeySpec lIIlllIllIIIIl = new SecretKeySpec(MessageDigest.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[lIIlIIlIIl[0]]]).digest(IIIlllIllIIIIl.getBytes(StandardCharsets.UTF_8)), BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[lIIlIIlIIl[1]]]);
      Cipher IlIlllIllIIIIl = Cipher.getInstance(BlowfishEncryptionAlgorithm.lllIIIlIlIlIl[BlowfishEncryptionAlgorithm.lllIIlIIllIlI[lIIlIIlIIl[2]]]);
      IlIlllIllIIIIl.init(BlowfishEncryptionAlgorithm.lllIIlIIllIlI[lIIlIIlIIl[2]], lIIlllIllIIIIl);
      return new String(IlIlllIllIIIIl.doFinal(Base64.getDecoder().decode(lllIllIllIIIIl.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
    } catch (Exception IIllllIllIIIIl) {
      llIlllIllIIIIl.printStackTrace();
      return null;
    } 
  }
  
  private static void IIIlIlIIlll() {
    IIIlIIlIIl = new String[lIIlIIlIIl[6]];
    IIIlIIlIIl[lIIlIIlIIl[0]] = lIlIIlIIlll("jRXS4rjjxOU=", "xqHXg");
    IIIlIIlIIl[lIIlIIlIIl[1]] = IllIIlIIlll("hEuY893t2E3yllCTUTMohw==", "RxVtc");
    IIIlIIlIIl[lIIlIIlIIl[2]] = IllIIlIIlll("bEf+IgXuXxg=", "RAoHp");
    IIIlIIlIIl[lIIlIIlIIl[3]] = lllIIlIIlll("FggsGBw4BCZRPzkPJVE=", "PaBqo");
    IIIlIIlIIl[lIIlIIlIIl[4]] = IllIIlIIlll("GVvzcvFkjEA=", "VjJzV");
    IIIlIIlIIl[lIIlIIlIIl[5]] = lIlIIlIIlll("qk5LCbQGY1M=", "LmrNM");
  }
  
  private static boolean IlIlIlIIlll(float lIlIIllIIllIl) {
    return (SYNTHETIC_LOCAL_VARIABLE_0 != null);
  }
}


/* Location:              D:\reversingPhobos\144hz_build28.jar!\com\exploiters\xploitclient\gui\BleachServerPinger.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */